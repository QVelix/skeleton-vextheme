(function () {
  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

  function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  (self["webpackChunkvex"] = self["webpackChunkvex"] || []).push([["default-node_modules_angular_flex-layout___ivy_ngcc___esm2015_flex-layout_js"], {
    /***/
    7736:
    /*!************************************************************************!*\
      !*** ./node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/core.js ***!
      \************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ɵMatchMedia": function ɵMatchMedia() {
          return (
            /* binding */
            MatchMedia
          );
        },

        /* harmony export */
        "ɵMockMatchMedia": function ɵMockMatchMedia() {
          return (
            /* binding */
            MockMatchMedia
          );
        },

        /* harmony export */
        "ɵMockMatchMediaProvider": function ɵMockMatchMediaProvider() {
          return (
            /* binding */
            MockMatchMediaProvider
          );
        },

        /* harmony export */
        "CoreModule": function CoreModule() {
          return (
            /* binding */
            _CoreModule
          );
        },

        /* harmony export */
        "removeStyles": function removeStyles() {
          return (
            /* binding */
            _removeStyles
          );
        },

        /* harmony export */
        "BROWSER_PROVIDER": function BROWSER_PROVIDER() {
          return (
            /* binding */
            _BROWSER_PROVIDER
          );
        },

        /* harmony export */
        "CLASS_NAME": function CLASS_NAME() {
          return (
            /* binding */
            _CLASS_NAME
          );
        },

        /* harmony export */
        "MediaChange": function MediaChange() {
          return (
            /* binding */
            _MediaChange
          );
        },

        /* harmony export */
        "StylesheetMap": function StylesheetMap() {
          return (
            /* binding */
            _StylesheetMap
          );
        },

        /* harmony export */
        "DEFAULT_CONFIG": function DEFAULT_CONFIG() {
          return (
            /* binding */
            _DEFAULT_CONFIG
          );
        },

        /* harmony export */
        "LAYOUT_CONFIG": function LAYOUT_CONFIG() {
          return (
            /* binding */
            _LAYOUT_CONFIG
          );
        },

        /* harmony export */
        "SERVER_TOKEN": function SERVER_TOKEN() {
          return (
            /* binding */
            _SERVER_TOKEN
          );
        },

        /* harmony export */
        "BREAKPOINT": function BREAKPOINT() {
          return (
            /* binding */
            _BREAKPOINT
          );
        },

        /* harmony export */
        "mergeAlias": function mergeAlias() {
          return (
            /* binding */
            _mergeAlias
          );
        },

        /* harmony export */
        "BaseDirective2": function BaseDirective2() {
          return (
            /* binding */
            _BaseDirective
          );
        },

        /* harmony export */
        "DEFAULT_BREAKPOINTS": function DEFAULT_BREAKPOINTS() {
          return (
            /* binding */
            _DEFAULT_BREAKPOINTS
          );
        },

        /* harmony export */
        "ScreenTypes": function ScreenTypes() {
          return (
            /* binding */
            _ScreenTypes
          );
        },

        /* harmony export */
        "ORIENTATION_BREAKPOINTS": function ORIENTATION_BREAKPOINTS() {
          return (
            /* binding */
            _ORIENTATION_BREAKPOINTS
          );
        },

        /* harmony export */
        "BreakPointRegistry": function BreakPointRegistry() {
          return (
            /* binding */
            _BreakPointRegistry
          );
        },

        /* harmony export */
        "BREAKPOINTS": function BREAKPOINTS() {
          return (
            /* binding */
            _BREAKPOINTS
          );
        },

        /* harmony export */
        "MediaObserver": function MediaObserver() {
          return (
            /* binding */
            _MediaObserver
          );
        },

        /* harmony export */
        "MediaTrigger": function MediaTrigger() {
          return (
            /* binding */
            _MediaTrigger
          );
        },

        /* harmony export */
        "sortDescendingPriority": function sortDescendingPriority() {
          return (
            /* binding */
            _sortDescendingPriority
          );
        },

        /* harmony export */
        "sortAscendingPriority": function sortAscendingPriority() {
          return (
            /* binding */
            _sortAscendingPriority
          );
        },

        /* harmony export */
        "coerceArray": function coerceArray() {
          return (
            /* binding */
            _coerceArray
          );
        },

        /* harmony export */
        "StyleUtils": function StyleUtils() {
          return (
            /* binding */
            _StyleUtils
          );
        },

        /* harmony export */
        "StyleBuilder": function StyleBuilder() {
          return (
            /* binding */
            _StyleBuilder
          );
        },

        /* harmony export */
        "validateBasis": function validateBasis() {
          return (
            /* binding */
            _validateBasis
          );
        },

        /* harmony export */
        "MediaMarshaller": function MediaMarshaller() {
          return (
            /* binding */
            _MediaMarshaller
          );
        },

        /* harmony export */
        "BREAKPOINT_PRINT": function BREAKPOINT_PRINT() {
          return (
            /* binding */
            _BREAKPOINT_PRINT
          );
        },

        /* harmony export */
        "PrintHook": function PrintHook() {
          return (
            /* binding */
            _PrintHook
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      7716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common */
      8583);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      9765);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs */
      6215);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! rxjs */
      9165);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! rxjs */
      6682);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! rxjs */
      8571);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! rxjs */
      5917);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! rxjs */
      2759);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs/operators */
      5435);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! rxjs/operators */
      8002);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! rxjs/operators */
      4395);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! rxjs/operators */
      3190);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! rxjs/operators */
      6782);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! rxjs/operators */
      5257);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! rxjs/operators */
      8307);
      /**
       * @license
       * Copyright Google LLC All Rights Reserved.
       *
       * Use of this source code is governed by an MIT-style license that can be
       * found in the LICENSE file at https://angular.io/license
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/browser-provider.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Find all of the server-generated stylings, if any, and remove them
       * This will be in the form of inline classes and the style block in the
       * head of the DOM
       * @param {?} _document
       * @param {?} platformId
       * @return {?}
       */


      function _removeStyles(_document, platformId) {
        return (
          /**
          * @return {?}
          */
          function () {
            if ((0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(platformId)) {
              /** @type {?} */
              var elements = Array.from(_document.querySelectorAll("[class*=".concat(_CLASS_NAME, "]"))); // RegExp constructor should only be used if passing a variable to the constructor.
              // When using static regular expression it is more performant to use reg exp literal.
              // This is also needed to provide Safari 9 compatibility, please see
              // https://stackoverflow.com/questions/37919802 for more discussion.

              /** @type {?} */

              var classRegex = /\bflex-layout-.+?\b/g;
              elements.forEach(
              /**
              * @param {?} el
              * @return {?}
              */
              function (el) {
                el.classList.contains("".concat(_CLASS_NAME, "ssr")) && el.parentNode ? el.parentNode.removeChild(el) : el.className.replace(classRegex, '');
              });
            }
          }
        );
      }
      /**
       *  Provider to remove SSR styles on the browser
       * @type {?}
       */


      var _BROWSER_PROVIDER = {
        provide:
        /** @type {?} */
        _angular_core__WEBPACK_IMPORTED_MODULE_1__.APP_BOOTSTRAP_LISTENER,
        useFactory: _removeStyles,
        deps: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT, _angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID],
        multi: true
      };
      /** @type {?} */

      var _CLASS_NAME = 'flex-layout-';
      /**
       * @fileoverview added by tsickle
       * Generated from: core/module.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * *****************************************************************
       * Define module for common Angular Layout utilities
       * *****************************************************************
       */

      var _CoreModule = function _CoreModule() {
        _classCallCheck(this, _CoreModule);
      };

      _CoreModule.ɵfac = function CoreModule_Factory(t) {
        return new (t || _CoreModule)();
      };

      _CoreModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: _CoreModule
      });
      _CoreModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        providers: [_BROWSER_PROVIDER]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_CoreModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
          args: [{
            providers: [_BROWSER_PROVIDER]
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: core/media-change.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Class instances emitted [to observers] for each mql notification
       */


      var _MediaChange = /*#__PURE__*/function () {
        /**
         * @param {?=} matches whether the mediaQuery is currently activated
         * @param {?=} mediaQuery e.g. (min-width: 600px) and (max-width: 959px)
         * @param {?=} mqAlias e.g. gt-sm, md, gt-lg
         * @param {?=} suffix e.g. GtSM, Md, GtLg
         * @param {?=} priority the priority of activation for the given breakpoint
         */
        function _MediaChange() {
          var matches = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
          var mediaQuery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';
          var mqAlias = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
          var suffix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
          var priority = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;

          _classCallCheck(this, _MediaChange);

          this.matches = matches;
          this.mediaQuery = mediaQuery;
          this.mqAlias = mqAlias;
          this.suffix = suffix;
          this.priority = priority;
          this.property = '';
        }
        /**
         * Create an exact copy of the MediaChange
         * @return {?}
         */


        _createClass(_MediaChange, [{
          key: "clone",
          value: function clone() {
            return new _MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);
          }
        }]);

        return _MediaChange;
      }();
      /**
       * @fileoverview added by tsickle
       * Generated from: core/stylesheet-map/stylesheet-map.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Utility to emulate a CSS stylesheet
       *
       * This utility class stores all of the styles for a given HTML element
       * as a readonly `stylesheet` map.
       */


      var _StylesheetMap = /*#__PURE__*/function () {
        function _StylesheetMap() {
          _classCallCheck(this, _StylesheetMap);

          this.stylesheet = new Map();
        }
        /**
         * Add an individual style to an HTML element
         * @param {?} element
         * @param {?} style
         * @param {?} value
         * @return {?}
         */


        _createClass(_StylesheetMap, [{
          key: "addStyleToElement",
          value: function addStyleToElement(element, style, value) {
            /** @type {?} */
            var stylesheet = this.stylesheet.get(element);

            if (stylesheet) {
              stylesheet.set(style, value);
            } else {
              this.stylesheet.set(element, new Map([[style, value]]));
            }
          }
          /**
           * Clear the virtual stylesheet
           * @return {?}
           */

        }, {
          key: "clearStyles",
          value: function clearStyles() {
            this.stylesheet.clear();
          }
          /**
           * Retrieve a given style for an HTML element
           * @param {?} el
           * @param {?} styleName
           * @return {?}
           */

        }, {
          key: "getStyleForElement",
          value: function getStyleForElement(el, styleName) {
            /** @type {?} */
            var styles = this.stylesheet.get(el);
            /** @type {?} */

            var value = '';

            if (styles) {
              /** @type {?} */
              var style = styles.get(styleName);

              if (typeof style === 'number' || typeof style === 'string') {
                value = style + '';
              }
            }

            return value;
          }
        }]);

        return _StylesheetMap;
      }();

      _StylesheetMap.ɵfac = function StylesheetMap_Factory(t) {
        return new (t || _StylesheetMap)();
      };
      /** @nocollapse */


      _StylesheetMap.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function StylesheetMap_Factory() {
          return new _StylesheetMap();
        },
        token: _StylesheetMap,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_StylesheetMap, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [];
        }, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: core/stylesheet-map/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/tokens/library-config.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var _DEFAULT_CONFIG = {
        addFlexToParent: true,
        addOrientationBps: false,
        disableDefaultBps: false,
        disableVendorPrefixes: false,
        serverLoaded: false,
        useColumnBasisZero: true,
        printWithBreakpoints: [],
        mediaTriggerAutoRestore: true,
        ssrObserveBreakpoints: []
      };
      /** @type {?} */

      var _LAYOUT_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken('Flex Layout token, config options for the library', {
        providedIn: 'root',
        factory:
        /**
        * @return {?}
        */
        function factory() {
          return _DEFAULT_CONFIG;
        }
      });
      /**
       * @fileoverview added by tsickle
       * Generated from: core/tokens/server-token.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Token that is provided to tell whether the FlexLayoutServerModule
       * has been included in the bundle
       *
       * NOTE: This can be manually provided to disable styles when using SSR
       * @type {?}
       */


      var _SERVER_TOKEN = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken('FlexLayoutServerLoaded', {
        providedIn: 'root',
        factory:
        /**
        * @return {?}
        */
        function factory() {
          return false;
        }
      });
      /**
       * @fileoverview added by tsickle
       * Generated from: core/tokens/breakpoint-token.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var _BREAKPOINT = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken('Flex Layout token, collect all breakpoints into one provider', {
        providedIn: 'root',
        factory:
        /**
        * @return {?}
        */
        function factory() {
          return null;
        }
      });
      /**
       * @fileoverview added by tsickle
       * Generated from: core/tokens/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/add-alias.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * For the specified MediaChange, make sure it contains the breakpoint alias
       * and suffix (if available).
       * @param {?} dest
       * @param {?} source
       * @return {?}
       */


      function _mergeAlias(dest, source) {
        dest = dest ? dest.clone() : new _MediaChange();

        if (source) {
          dest.mqAlias = source.alias;
          dest.mediaQuery = source.mediaQuery;
          dest.suffix =
          /** @type {?} */
          source.suffix;
          dest.priority =
          /** @type {?} */
          source.priority;
        }

        return dest;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: utils/layout-validator.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @license
       * Copyright Google LLC All Rights Reserved.
       *
       * Use of this source code is governed by an MIT-style license that can be
       * found in the LICENSE file at https://angular.io/license
       * @type {?}
       */


      var INLINE = 'inline';
      /** @type {?} */

      var LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];
      /**
       * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles
       * @param {?} value
       * @return {?}
       */

      function buildLayoutCSS(value) {
        var _validateValue = validateValue(value),
            _validateValue2 = _slicedToArray(_validateValue, 3),
            direction = _validateValue2[0],
            wrap = _validateValue2[1],
            isInline = _validateValue2[2];

        return buildCSS(direction, wrap, isInline);
      }
      /**
       * Validate the value to be one of the acceptable value options
       * Use default fallback of 'row'
       * @param {?} value
       * @return {?}
       */


      function validateValue(value) {
        value = value ? value.toLowerCase() : '';

        var _value$split = value.split(' '),
            _value$split2 = _slicedToArray(_value$split, 3),
            direction = _value$split2[0],
            wrap = _value$split2[1],
            inline = _value$split2[2]; // First value must be the `flex-direction`


        if (!LAYOUT_VALUES.find(
        /**
        * @param {?} x
        * @return {?}
        */
        function (x) {
          return x === direction;
        })) {
          direction = LAYOUT_VALUES[0];
        }

        if (wrap === INLINE) {
          wrap = inline !== INLINE ? inline : '';
          inline = INLINE;
        }

        return [direction, validateWrapValue(wrap), !!inline];
      }
      /**
       * Convert layout-wrap='<value>' to expected flex-wrap style
       * @param {?} value
       * @return {?}
       */


      function validateWrapValue(value) {
        if (!!value) {
          switch (value.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
            case 'reverse-wrap':
              value = 'wrap-reverse';
              break;

            case 'no':
            case 'none':
            case 'nowrap':
              value = 'nowrap';
              break;
            // All other values fallback to 'wrap'

            default:
              value = 'wrap';
              break;
          }
        }

        return value;
      }
      /**
       * Build the CSS that should be assigned to the element instance
       * BUG:
       *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.
       *      Use height instead if possible; height : <xxx>vh;
       *
       *  This way any padding or border specified on the child elements are
       *  laid out and drawn inside that element's specified width and height.
       * @param {?} direction
       * @param {?=} wrap
       * @param {?=} inline
       * @return {?}
       */


      function buildCSS(direction) {
        var wrap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var inline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        return {
          'display': inline ? 'inline-flex' : 'flex',
          'box-sizing': 'border-box',
          'flex-direction': direction,
          'flex-wrap': !!wrap ? wrap : null
        };
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/base/base2.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @abstract
       */


      var _BaseDirective = /*#__PURE__*/function () {
        /**
         * @protected
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function _BaseDirective(elementRef, styleBuilder, styler, marshal) {
          _classCallCheck(this, _BaseDirective);

          this.elementRef = elementRef;
          this.styleBuilder = styleBuilder;
          this.styler = styler;
          this.marshal = marshal;
          this.DIRECTIVE_KEY = '';
          this.inputs = [];
          /**
           * The most recently used styles for the builder
           */

          this.mru = {};
          this.destroySubject = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
          /**
           * Cache map for style computation
           */

          this.styleCache = new Map();
        }
        /**
         * Access to host element's parent DOM node
         * @protected
         * @return {?}
         */


        _createClass(_BaseDirective, [{
          key: "parentElement",
          get: function get() {
            return this.elementRef.nativeElement.parentElement;
          }
          /**
           * Access to the HTMLElement for the directive
           * @protected
           * @return {?}
           */

        }, {
          key: "nativeElement",
          get: function get() {
            return this.elementRef.nativeElement;
          }
          /**
           * Access to the activated value for the directive
           * @return {?}
           */

        }, {
          key: "activatedValue",
          get: function get() {
            return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);
          }
          /**
           * @param {?} value
           * @return {?}
           */
          ,
          set: function set(value) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);
          }
          /**
           * For \@Input changes
           * @param {?} changes
           * @return {?}
           */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            var _this = this;

            Object.keys(changes).forEach(
            /**
            * @param {?} key
            * @return {?}
            */
            function (key) {
              if (_this.inputs.indexOf(key) !== -1) {
                /** @type {?} */
                var bp = key.split('.').slice(1).join('.');
                /** @type {?} */

                var val = changes[key].currentValue;

                _this.setValue(val, bp);
              }
            });
          }
          /**
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.destroySubject.next();
            this.destroySubject.complete();
            this.marshal.releaseElement(this.nativeElement);
          }
          /**
           * Register with central marshaller service
           * @protected
           * @param {?=} extraTriggers
           * @return {?}
           */

        }, {
          key: "init",
          value: function init() {
            var extraTriggers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);
          }
          /**
           * Add styles to the element using predefined style builder
           * @protected
           * @param {?} input
           * @param {?=} parent
           * @return {?}
           */

        }, {
          key: "addStyles",
          value: function addStyles(input, parent) {
            /** @type {?} */
            var builder = this.styleBuilder;
            /** @type {?} */

            var useCache = builder.shouldCache;
            /** @type {?} */

            var genStyles = this.styleCache.get(input);

            if (!genStyles || !useCache) {
              genStyles = builder.buildStyles(input, parent);

              if (useCache) {
                this.styleCache.set(input, genStyles);
              }
            }

            this.mru = Object.assign({}, genStyles);
            this.applyStyleToElement(genStyles);
            builder.sideEffect(input, genStyles, parent);
          }
          /**
           * Remove generated styles from an element using predefined style builder
           * @protected
           * @return {?}
           */

        }, {
          key: "clearStyles",
          value: function clearStyles() {
            var _this2 = this;

            Object.keys(this.mru).forEach(
            /**
            * @param {?} k
            * @return {?}
            */
            function (k) {
              _this2.mru[k] = '';
            });
            this.applyStyleToElement(this.mru);
            this.mru = {};
          }
          /**
           * Force trigger style updates on DOM element
           * @protected
           * @return {?}
           */

        }, {
          key: "triggerUpdate",
          value: function triggerUpdate() {
            this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);
          }
          /**
           * Determine the DOM element's Flexbox flow (flex-direction).
           *
           * Check inline style first then check computed (stylesheet) style.
           * And optionally add the flow value to element's inline style.
           * @protected
           * @param {?} target
           * @param {?=} addIfMissing
           * @return {?}
           */

        }, {
          key: "getFlexFlowDirection",
          value: function getFlexFlowDirection(target) {
            var addIfMissing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            if (target) {
              var _this$styler$getFlowD = this.styler.getFlowDirection(target),
                  _this$styler$getFlowD2 = _slicedToArray(_this$styler$getFlowD, 2),
                  value = _this$styler$getFlowD2[0],
                  hasInlineValue = _this$styler$getFlowD2[1];

              if (!hasInlineValue && addIfMissing) {
                /** @type {?} */
                var style = buildLayoutCSS(value);
                /** @type {?} */

                var elements = [target];
                this.styler.applyStyleToElements(style, elements);
              }

              return value.trim();
            }

            return 'row';
          }
          /**
           * @protected
           * @param {?} target
           * @return {?}
           */

        }, {
          key: "hasWrap",
          value: function hasWrap(target) {
            return this.styler.hasWrap(target);
          }
          /**
           * Applies styles given via string pair or object map to the directive element
           * @protected
           * @param {?} style
           * @param {?=} value
           * @param {?=} element
           * @return {?}
           */

        }, {
          key: "applyStyleToElement",
          value: function applyStyleToElement(style, value) {
            var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.nativeElement;
            this.styler.applyStyleToElement(element, style, value);
          }
          /**
           * @protected
           * @param {?} val
           * @param {?} bp
           * @return {?}
           */

        }, {
          key: "setValue",
          value: function setValue(val, bp) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);
          }
          /**
           * @protected
           * @param {?} input
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(input) {
            if (this.currentValue !== input) {
              this.addStyles(input);
              this.currentValue = input;
            }
          }
        }]);

        return _BaseDirective;
      }();

      _BaseDirective.ɵfac = function BaseDirective2_Factory(t) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinvalidFactory"]();
      };

      _BaseDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _BaseDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]]
      });
      /**
       * @fileoverview added by tsickle
       * Generated from: core/base/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/breakpoints/data/break-points.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * NOTE: Smaller ranges have HIGHER priority since the match is more specific
       * @type {?}
       */

      var _DEFAULT_BREAKPOINTS = [{
        alias: 'xs',
        mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',
        priority: 1000
      }, {
        alias: 'sm',
        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',
        priority: 900
      }, {
        alias: 'md',
        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',
        priority: 800
      }, {
        alias: 'lg',
        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',
        priority: 700
      }, {
        alias: 'xl',
        mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',
        priority: 600
      }, {
        alias: 'lt-sm',
        overlapping: true,
        mediaQuery: 'screen and (max-width: 599.98px)',
        priority: 950
      }, {
        alias: 'lt-md',
        overlapping: true,
        mediaQuery: 'screen and (max-width: 959.98px)',
        priority: 850
      }, {
        alias: 'lt-lg',
        overlapping: true,
        mediaQuery: 'screen and (max-width: 1279.98px)',
        priority: 750
      }, {
        alias: 'lt-xl',
        overlapping: true,
        priority: 650,
        mediaQuery: 'screen and (max-width: 1919.98px)'
      }, {
        alias: 'gt-xs',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 600px)',
        priority: -950
      }, {
        alias: 'gt-sm',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 960px)',
        priority: -850
      }, {
        alias: 'gt-md',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 1280px)',
        priority: -750
      }, {
        alias: 'gt-lg',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 1920px)',
        priority: -650
      }];
      /**
       * @fileoverview added by tsickle
       * Generated from: core/breakpoints/data/orientation-break-points.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /* tslint:disable */

      /** @type {?} */

      var HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';
      /** @type {?} */

      var HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';
      /** @type {?} */

      var TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';
      /** @type {?} */

      var TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';
      /** @type {?} */

      var WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';
      /** @type {?} */

      var WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';
      /** @type {?} */

      var _ScreenTypes = {
        'HANDSET': "".concat(HANDSET_PORTRAIT, ", ").concat(HANDSET_LANDSCAPE),
        'TABLET': "".concat(TABLET_PORTRAIT, " , ").concat(TABLET_LANDSCAPE),
        'WEB': "".concat(WEB_PORTRAIT, ", ").concat(WEB_LANDSCAPE, " "),
        'HANDSET_PORTRAIT': "".concat(HANDSET_PORTRAIT),
        'TABLET_PORTRAIT': "".concat(TABLET_PORTRAIT, " "),
        'WEB_PORTRAIT': "".concat(WEB_PORTRAIT),
        'HANDSET_LANDSCAPE': "".concat(HANDSET_LANDSCAPE),
        'TABLET_LANDSCAPE': "".concat(TABLET_LANDSCAPE),
        'WEB_LANDSCAPE': "".concat(WEB_LANDSCAPE)
      };
      /**
       * Extended Breakpoints for handset/tablets with landscape or portrait orientations
       * @type {?}
       */

      var _ORIENTATION_BREAKPOINTS = [{
        'alias': 'handset',
        priority: 2000,
        'mediaQuery': _ScreenTypes.HANDSET
      }, {
        'alias': 'handset.landscape',
        priority: 2000,
        'mediaQuery': _ScreenTypes.HANDSET_LANDSCAPE
      }, {
        'alias': 'handset.portrait',
        priority: 2000,
        'mediaQuery': _ScreenTypes.HANDSET_PORTRAIT
      }, {
        'alias': 'tablet',
        priority: 2100,
        'mediaQuery': _ScreenTypes.TABLET
      }, {
        'alias': 'tablet.landscape',
        priority: 2100,
        'mediaQuery': _ScreenTypes.TABLET_LANDSCAPE
      }, {
        'alias': 'tablet.portrait',
        priority: 2100,
        'mediaQuery': _ScreenTypes.TABLET_PORTRAIT
      }, {
        'alias': 'web',
        priority: 2200,
        'mediaQuery': _ScreenTypes.WEB,
        overlapping: true
      }, {
        'alias': 'web.landscape',
        priority: 2200,
        'mediaQuery': _ScreenTypes.WEB_LANDSCAPE,
        overlapping: true
      }, {
        'alias': 'web.portrait',
        priority: 2200,
        'mediaQuery': _ScreenTypes.WEB_PORTRAIT,
        overlapping: true
      }];
      /**
       * @fileoverview added by tsickle
       * Generated from: core/breakpoints/break-point.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: utils/object-extend.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Extends an object with the *enumerable* and *own* properties of one or more source objects,
       * similar to Object.assign.
       *
       * @param {?} dest The object which will have properties copied to it.
       * @param {...?} sources The source objects from which properties will be copied.
       * @return {?}
       */

      function extendObject(dest) {
        if (dest == null) {
          throw TypeError('Cannot convert undefined or null to object');
        }

        for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          sources[_key - 1] = arguments[_key];
        }

        for (var _i2 = 0, _sources = sources; _i2 < _sources.length; _i2++) {
          var source = _sources[_i2];

          if (source != null) {
            for (var key in source) {
              if (source.hasOwnProperty(key)) {
                dest[key] = source[key];
              }
            }
          }
        }

        return dest;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/breakpoints/breakpoint-tools.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var ALIAS_DELIMITERS = /(\.|-|_)/g;
      /**
       * @param {?} part
       * @return {?}
       */

      function firstUpperCase(part) {
        /** @type {?} */
        var first = part.length > 0 ? part.charAt(0) : '';
        /** @type {?} */

        var remainder = part.length > 1 ? part.slice(1) : '';
        return first.toUpperCase() + remainder;
      }
      /**
       * Converts snake-case to SnakeCase.
       * @param {?} name Text to UpperCamelCase
       * @return {?}
       */


      function camelCase(name) {
        return name.replace(ALIAS_DELIMITERS, '|').split('|').map(firstUpperCase).join('');
      }
      /**
       * For each breakpoint, ensure that a Suffix is defined;
       * fallback to UpperCamelCase the unique Alias value
       * @param {?} list
       * @return {?}
       */


      function validateSuffixes(list) {
        list.forEach(
        /**
        * @param {?} bp
        * @return {?}
        */
        function (bp) {
          if (!bp.suffix) {
            bp.suffix = camelCase(bp.alias); // create Suffix value based on alias

            bp.overlapping = !!bp.overlapping; // ensure default value
          }
        });
        return list;
      }
      /**
       * Merge a custom breakpoint list with the default list based on unique alias values
       *  - Items are added if the alias is not in the default list
       *  - Items are merged with the custom override if the alias exists in the default list
       * @param {?} defaults
       * @param {?=} custom
       * @return {?}
       */


      function mergeByAlias(defaults) {
        var custom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        /** @type {?} */
        var dict = {};
        defaults.forEach(
        /**
        * @param {?} bp
        * @return {?}
        */
        function (bp) {
          dict[bp.alias] = bp;
        }); // Merge custom breakpoints

        custom.forEach(
        /**
        * @param {?} bp
        * @return {?}
        */
        function (bp) {
          if (dict[bp.alias]) {
            extendObject(dict[bp.alias], bp);
          } else {
            dict[bp.alias] = bp;
          }
        });
        return validateSuffixes(Object.keys(dict).map(
        /**
        * @param {?} k
        * @return {?}
        */
        function (k) {
          return dict[k];
        }));
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/breakpoints/break-points-token.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       *  Injection token unique to the flex-layout library.
       *  Use this token when build a custom provider (see below).
       * @type {?}
       */


      var _BREAKPOINTS = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken('Token (@angular/flex-layout) Breakpoints', {
        providedIn: 'root',
        factory:
        /**
        * @return {?}
        */
        function factory() {
          /** @type {?} */
          var breakpoints = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__.inject)(_BREAKPOINT);
          /** @type {?} */

          var layoutConfig = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__.inject)(_LAYOUT_CONFIG);
          /** @type {?} */

          var bpFlattenArray = [].concat.apply([], (breakpoints || []).map(
          /**
          * @param {?} v
          * @return {?}
          */
          function (v) {
            return Array.isArray(v) ? v : [v];
          }));
          /** @type {?} */

          var builtIns = (layoutConfig.disableDefaultBps ? [] : _DEFAULT_BREAKPOINTS).concat(layoutConfig.addOrientationBps ? _ORIENTATION_BREAKPOINTS : []);
          return mergeByAlias(builtIns, bpFlattenArray);
        }
      });
      /**
       * @fileoverview added by tsickle
       * Generated from: core/utils/sort.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * HOF to sort the breakpoints by descending priority
       * @template T
       * @param {?} a
       * @param {?} b
       * @return {?}
       */


      function _sortDescendingPriority(a, b) {
        /** @type {?} */
        var priorityA = a ? a.priority || 0 : 0;
        /** @type {?} */

        var priorityB = b ? b.priority || 0 : 0;
        return priorityB - priorityA;
      }
      /**
       * HOF to sort the breakpoints by ascending priority
       * @template T
       * @param {?} a
       * @param {?} b
       * @return {?}
       */


      function _sortAscendingPriority(a, b) {
        /** @type {?} */
        var pA = a.priority || 0;
        /** @type {?} */

        var pB = b.priority || 0;
        return pA - pB;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/breakpoints/break-point-registry.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Registry of 1..n MediaQuery breakpoint ranges
       * This is published as a provider and may be overridden from custom, application-specific ranges
       *
       */


      var _BreakPointRegistry = /*#__PURE__*/function () {
        /**
         * @param {?} list
         */
        function _BreakPointRegistry(list) {
          _classCallCheck(this, _BreakPointRegistry);

          /**
           * Memoized BreakPoint Lookups
           */
          this.findByMap = new Map();
          this.items = _toConsumableArray(list).sort(_sortAscendingPriority);
        }
        /**
         * Search breakpoints by alias (e.g. gt-xs)
         * @param {?} alias
         * @return {?}
         */


        _createClass(_BreakPointRegistry, [{
          key: "findByAlias",
          value: function findByAlias(alias) {
            return !alias ? null : this.findWithPredicate(alias,
            /**
            * @param {?} bp
            * @return {?}
            */
            function (bp) {
              return bp.alias == alias;
            });
          }
          /**
           * @param {?} query
           * @return {?}
           */

        }, {
          key: "findByQuery",
          value: function findByQuery(query) {
            return this.findWithPredicate(query,
            /**
            * @param {?} bp
            * @return {?}
            */
            function (bp) {
              return bp.mediaQuery == query;
            });
          }
          /**
           * Get all the breakpoints whose ranges could overlapping `normal` ranges;
           * e.g. gt-sm overlaps md, lg, and xl
           * @return {?}
           */

        }, {
          key: "overlappings",
          get: function get() {
            return this.items.filter(
            /**
            * @param {?} it
            * @return {?}
            */
            function (it) {
              return it.overlapping == true;
            });
          }
          /**
           * Get list of all registered (non-empty) breakpoint aliases
           * @return {?}
           */

        }, {
          key: "aliases",
          get: function get() {
            return this.items.map(
            /**
            * @param {?} it
            * @return {?}
            */
            function (it) {
              return it.alias;
            });
          }
          /**
           * Aliases are mapped to properties using suffixes
           * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'
           * for property layoutGtSM.
           * @return {?}
           */

        }, {
          key: "suffixes",
          get: function get() {
            return this.items.map(
            /**
            * @param {?} it
            * @return {?}
            */
            function (it) {
              return !!it.suffix ? it.suffix : '';
            });
          }
          /**
           * Memoized lookup using custom predicate function
           * @private
           * @param {?} key
           * @param {?} searchFn
           * @return {?}
           */

        }, {
          key: "findWithPredicate",
          value: function findWithPredicate(key, searchFn) {
            /** @type {?} */
            var response = this.findByMap.get(key);

            if (!response) {
              response = this.items.find(searchFn) || null;
              this.findByMap.set(key, response);
            }

            return response || null;
          }
        }]);

        return _BreakPointRegistry;
      }();

      _BreakPointRegistry.ɵfac = function BreakPointRegistry_Factory(t) {
        return new (t || _BreakPointRegistry)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_BREAKPOINTS));
      };
      /** @nocollapse */


      _BreakPointRegistry.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function BreakPointRegistry_Factory() {
          return new _BreakPointRegistry((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_BREAKPOINTS));
        },
        token: _BreakPointRegistry,
        providedIn: "root"
      });
      /** @nocollapse */

      _BreakPointRegistry.ctorParameters = function () {
        return [{
          type: Array,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_BREAKPOINTS]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_BreakPointRegistry, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: Array,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_BREAKPOINTS]
            }]
          }];
        }, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: core/breakpoints/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/match-media/match-media.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to
       * convert mediaQuery change callbacks to subscriber notifications. These notifications will be
       * performed within the ng Zone to trigger change detections and component updates.
       *
       * NOTE: both mediaQuery activations and de-activations are announced in notifications
       */


      var MatchMedia = /*#__PURE__*/function () {
        /**
         * @param {?} _zone
         * @param {?} _platformId
         * @param {?} _document
         */
        function MatchMedia(_zone, _platformId, _document) {
          _classCallCheck(this, MatchMedia);

          this._zone = _zone;
          this._platformId = _platformId;
          this._document = _document;
          /**
           * Initialize source with 'all' so all non-responsive APIs trigger style updates
           */

          this.source = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(new _MediaChange(true));
          this.registry = new Map();
          this.pendingRemoveListenerFns = [];
          this._observable$ = this.source.asObservable();
        }
        /**
         * Publish list of all current activations
         * @return {?}
         */


        _createClass(MatchMedia, [{
          key: "activations",
          get: function get() {
            /** @type {?} */
            var results = [];
            this.registry.forEach(
            /**
            * @param {?} mql
            * @param {?} key
            * @return {?}
            */
            function (mql, key) {
              if (mql.matches) {
                results.push(key);
              }
            });
            return results;
          }
          /**
           * For the specified mediaQuery?
           * @param {?} mediaQuery
           * @return {?}
           */

        }, {
          key: "isActive",
          value: function isActive(mediaQuery) {
            /** @type {?} */
            var mql = this.registry.get(mediaQuery);
            return !!mql ? mql.matches : this.registerQuery(mediaQuery).some(
            /**
            * @param {?} m
            * @return {?}
            */
            function (m) {
              return m.matches;
            });
          }
          /**
           * External observers can watch for all (or a specific) mql changes.
           * Typically used by the MediaQueryAdaptor; optionally available to components
           * who wish to use the MediaMonitor as mediaMonitor$ observable service.
           *
           * Use deferred registration process to register breakpoints only on subscription
           * This logic also enforces logic to register all mediaQueries BEFORE notify
           * subscribers of notifications.
           * @param {?=} mqList
           * @param {?=} filterOthers
           * @return {?}
           */

        }, {
          key: "observe",
          value: function observe(mqList) {
            var _this3 = this;

            var filterOthers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            if (mqList && mqList.length) {
              /** @type {?} */
              var matchMedia$ = this._observable$.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(
              /**
              * @param {?} change
              * @return {?}
              */
              function (change) {
                return !filterOthers ? true : mqList.indexOf(change.mediaQuery) > -1;
              }));
              /** @type {?} */


              var registration$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable(
              /**
              * @param {?} observer
              * @return {?}
              */
              function (observer) {
                // tslint:disable-line:max-line-length

                /** @type {?} */
                var matches = _this3.registerQuery(mqList);

                if (matches.length) {
                  /** @type {?} */
                  var lastChange =
                  /** @type {?} */
                  matches.pop();
                  matches.forEach(
                  /**
                  * @param {?} e
                  * @return {?}
                  */
                  function (e) {
                    observer.next(e);
                  });

                  _this3.source.next(lastChange); // last match is cached

                }

                observer.complete();
              });
              return (0, rxjs__WEBPACK_IMPORTED_MODULE_6__.merge)(registration$, matchMedia$);
            }

            return this._observable$;
          }
          /**
           * Based on the BreakPointRegistry provider, register internal listeners for each unique
           * mediaQuery. Each listener emits specific MediaChange data to observers
           * @param {?} mediaQuery
           * @return {?}
           */

        }, {
          key: "registerQuery",
          value: function registerQuery(mediaQuery) {
            var _this4 = this;

            /** @type {?} */
            var list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];
            /** @type {?} */

            var matches = [];
            buildQueryCss(list, this._document);
            list.forEach(
            /**
            * @param {?} query
            * @return {?}
            */
            function (query) {
              /** @type {?} */
              var onMQLEvent =
              /**
              * @param {?} e
              * @return {?}
              */
              function onMQLEvent(e) {
                _this4._zone.run(
                /**
                * @return {?}
                */
                function () {
                  return _this4.source.next(new _MediaChange(e.matches, query));
                });
              };
              /** @type {?} */


              var mql = _this4.registry.get(query);

              if (!mql) {
                mql = _this4.buildMQL(query);
                mql.addListener(onMQLEvent);

                _this4.pendingRemoveListenerFns.push(
                /**
                * @return {?}
                */
                function () {
                  return (
                    /** @type {?} */
                    mql.removeListener(onMQLEvent)
                  );
                });

                _this4.registry.set(query, mql);
              }

              if (mql.matches) {
                matches.push(new _MediaChange(true, query));
              }
            });
            return matches;
          }
          /**
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            /** @type {?} */
            var fn;

            while (fn = this.pendingRemoveListenerFns.pop()) {
              fn();
            }
          }
          /**
           * Call window.matchMedia() to build a MediaQueryList; which
           * supports 0..n listeners for activation/deactivation
           * @protected
           * @param {?} query
           * @return {?}
           */

        }, {
          key: "buildMQL",
          value: function buildMQL(query) {
            return constructMql(query, (0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(this._platformId));
          }
        }]);

        return MatchMedia;
      }();

      MatchMedia.ɵfac = function MatchMedia_Factory(t) {
        return new (t || MatchMedia)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT));
      };
      /** @nocollapse */


      MatchMedia.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function MatchMedia_Factory() {
          return new MatchMedia((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT));
        },
        token: MatchMedia,
        providedIn: "root"
      });
      /** @nocollapse */

      MatchMedia.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
          }]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatchMedia, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
            }]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
            }]
          }];
        }, null);
      })();
      /**
       * Private global registry for all dynamically-created, injected style tags
       * @see prepare(query)
       * @type {?}
       */


      var ALL_STYLES = {};
      /**
       * For Webkit engines that only trigger the MediaQueryList Listener
       * when there is at least one CSS selector for the respective media query.
       *
       * @param {?} mediaQueries
       * @param {?} _document
       * @return {?}
       */

      function buildQueryCss(mediaQueries, _document) {
        /** @type {?} */
        var list = mediaQueries.filter(
        /**
        * @param {?} it
        * @return {?}
        */
        function (it) {
          return !ALL_STYLES[it];
        });

        if (list.length > 0) {
          /** @type {?} */
          var query = list.join(', ');

          try {
            /** @type {?} */
            var styleEl = _document.createElement('style');

            styleEl.setAttribute('type', 'text/css');

            if (!
            /** @type {?} */
            styleEl.styleSheet) {
              /** @type {?} */
              var cssText = "\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ".concat(query, " {.fx-query-test{ }}\n");
              styleEl.appendChild(_document.createTextNode(cssText));
            }

            /** @type {?} */
            _document.head.appendChild(styleEl); // Store in private global registry


            list.forEach(
            /**
            * @param {?} mq
            * @return {?}
            */
            function (mq) {
              return ALL_STYLES[mq] = styleEl;
            });
          } catch (e) {
            console.error(e);
          }
        }
      }
      /**
       * @param {?} query
       * @param {?} isBrowser
       * @return {?}
       */


      function constructMql(query, isBrowser) {
        /** @type {?} */
        var canListen = isBrowser && !!
        /** @type {?} */
        window.matchMedia('all').addListener;
        return canListen ?
        /** @type {?} */
        window.matchMedia(query) :
        /** @type {?} */
        {
          matches: query === 'all' || query === '',
          media: query,
          addListener:
          /**
          * @return {?}
          */
          function addListener() {},
          removeListener:
          /**
          * @return {?}
          */
          function removeListener() {},
          onchange: null,

          /**
           * @return {?}
           */
          addEventListener: function addEventListener() {},

          /**
           * @return {?}
           */
          removeEventListener: function removeEventListener() {},

          /**
           * @return {?}
           */
          dispatchEvent: function dispatchEvent() {
            return false;
          }
        };
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/match-media/mock/mock-match-media.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated
       * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery
       * range and to clearAll mediaQuery listeners.
       */


      var MockMatchMedia = /*#__PURE__*/function (_MatchMedia) {
        _inherits(MockMatchMedia, _MatchMedia);

        var _super = _createSuper(MockMatchMedia);

        // Allow fallback to overlapping mediaQueries

        /**
         * @param {?} _zone
         * @param {?} _platformId
         * @param {?} _document
         * @param {?} _breakpoints
         */
        function MockMatchMedia(_zone, _platformId, _document, _breakpoints) {
          var _this5;

          _classCallCheck(this, MockMatchMedia);

          _this5 = _super.call(this, _zone, _platformId, _document);
          _this5._breakpoints = _breakpoints;
          _this5.autoRegisterQueries = true; // Used for testing BreakPoint registrations
          // Used for testing BreakPoint registrations

          _this5.useOverlaps = false; // Allow fallback to overlapping mediaQueries

          return _this5;
        }
        /**
         * Easy method to clear all listeners for all mediaQueries
         * @return {?}
         */


        _createClass(MockMatchMedia, [{
          key: "clearAll",
          value: function clearAll() {
            this.registry.forEach(
            /**
            * @param {?} mql
            * @return {?}
            */
            function (mql) {
              /** @type {?} */
              mql.destroy();
            });
            this.registry.clear();
            this.useOverlaps = false;
          }
          /**
           * Feature to support manual, simulated activation of a mediaQuery.
           * @param {?} mediaQuery
           * @param {?=} useOverlaps
           * @return {?}
           */

        }, {
          key: "activate",
          value: function activate(mediaQuery) {
            var useOverlaps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            useOverlaps = useOverlaps || this.useOverlaps;
            mediaQuery = this._validateQuery(mediaQuery);

            if (useOverlaps || !this.isActive(mediaQuery)) {
              this._deactivateAll();

              this._registerMediaQuery(mediaQuery);

              this._activateWithOverlaps(mediaQuery, useOverlaps);
            }

            return this.hasActivated;
          }
          /**
           * Converts an optional mediaQuery alias to a specific, valid mediaQuery
           * @param {?} queryOrAlias
           * @return {?}
           */

        }, {
          key: "_validateQuery",
          value: function _validateQuery(queryOrAlias) {
            /** @type {?} */
            var bp = this._breakpoints.findByAlias(queryOrAlias);

            return bp && bp.mediaQuery || queryOrAlias;
          }
          /**
           * Manually onMediaChange any overlapping mediaQueries to simulate
           * similar functionality in the window.matchMedia()
           * @private
           * @param {?} mediaQuery
           * @param {?} useOverlaps
           * @return {?}
           */

        }, {
          key: "_activateWithOverlaps",
          value: function _activateWithOverlaps(mediaQuery, useOverlaps) {
            if (useOverlaps) {
              /** @type {?} */
              var bp = this._breakpoints.findByQuery(mediaQuery);
              /** @type {?} */


              var alias = bp ? bp.alias : 'unknown'; // Simulate activation of overlapping lt-<XXX> ranges

              switch (alias) {
                case 'lg':
                  this._activateByAlias(['lt-xl']);

                  break;

                case 'md':
                  this._activateByAlias(['lt-xl', 'lt-lg']);

                  break;

                case 'sm':
                  this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);

                  break;

                case 'xs':
                  this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);

                  break;
              } // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges


              switch (alias) {
                case 'xl':
                  this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);

                  break;

                case 'lg':
                  this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);

                  break;

                case 'md':
                  this._activateByAlias(['gt-sm', 'gt-xs']);

                  break;

                case 'sm':
                  this._activateByAlias(['gt-xs']);

                  break;
              }
            } // Activate last since the responsiveActivation is watching *this* mediaQuery


            return this._activateByQuery(mediaQuery);
          }
          /**
           *
           * @private
           * @param {?} aliases
           * @return {?}
           */

        }, {
          key: "_activateByAlias",
          value: function _activateByAlias(aliases) {
            var _this6 = this;

            /** @type {?} */
            var activate =
            /**
            * @param {?} alias
            * @return {?}
            */
            function activate(alias) {
              /** @type {?} */
              var bp = _this6._breakpoints.findByAlias(alias);

              _this6._activateByQuery(bp ? bp.mediaQuery : alias);
            };

            aliases.forEach(activate);
          }
          /**
           *
           * @private
           * @param {?} mediaQuery
           * @return {?}
           */

        }, {
          key: "_activateByQuery",
          value: function _activateByQuery(mediaQuery) {
            if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {
              this._registerMediaQuery(mediaQuery);
            }
            /** @type {?} */


            var mql =
            /** @type {?} */
            this.registry.get(mediaQuery);

            if (mql && !this.isActive(mediaQuery)) {
              this.registry.set(mediaQuery, mql.activate());
            }

            return this.hasActivated;
          }
          /**
           * Deactivate all current MQLs and reset the buffer
           * @private
           * @template THIS
           * @this {THIS}
           * @return {THIS}
           */

        }, {
          key: "_deactivateAll",
          value: function _deactivateAll() {
            /** @type {?} */
            this.registry.forEach(
            /**
            * @param {?} it
            * @return {?}
            */
            function (it) {
              /** @type {?} */
              it.deactivate();
            });
            return (
              /** @type {?} */
              this
            );
          }
          /**
           * Insure the mediaQuery is registered with MatchMedia
           * @private
           * @param {?} mediaQuery
           * @return {?}
           */

        }, {
          key: "_registerMediaQuery",
          value: function _registerMediaQuery(mediaQuery) {
            if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {
              this.registerQuery(mediaQuery);
            }
          }
          /**
           * Call window.matchMedia() to build a MediaQueryList; which
           * supports 0..n listeners for activation/deactivation
           * @protected
           * @param {?} query
           * @return {?}
           */

        }, {
          key: "buildMQL",
          value: function buildMQL(query) {
            return new MockMediaQueryList(query);
          }
          /**
           * @protected
           * @return {?}
           */

        }, {
          key: "hasActivated",
          get: function get() {
            return this.activations.length > 0;
          }
        }]);

        return MockMatchMedia;
      }(MatchMedia);

      MockMatchMedia.ɵfac = function MockMatchMedia_Factory(t) {
        return new (t || MockMatchMedia)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_BreakPointRegistry));
      };

      MockMatchMedia.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
        token: MockMatchMedia,
        factory: MockMatchMedia.ɵfac
      });
      /** @nocollapse */

      MockMatchMedia.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
          }]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
          }]
        }, {
          type: _BreakPointRegistry
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MockMatchMedia, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
            }]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
            }]
          }, {
            type: _BreakPointRegistry
          }];
        }, null);
      })();
      /**
       * Special internal class to simulate a MediaQueryList and
       * - supports manual activation to simulate mediaQuery matching
       * - manages listeners
       */


      var MockMediaQueryList = /*#__PURE__*/function () {
        /**
         * @param {?} _mediaQuery
         */
        function MockMediaQueryList(_mediaQuery) {
          _classCallCheck(this, MockMediaQueryList);

          this._mediaQuery = _mediaQuery;
          this._isActive = false;
          this._listeners = [];
          this.onchange = null;
        }
        /**
         * @return {?}
         */


        _createClass(MockMediaQueryList, [{
          key: "matches",
          get: function get() {
            return this._isActive;
          }
          /**
           * @return {?}
           */

        }, {
          key: "media",
          get: function get() {
            return this._mediaQuery;
          }
          /**
           * Destroy the current list by deactivating the
           * listeners and clearing the internal list
           * @return {?}
           */

        }, {
          key: "destroy",
          value: function destroy() {
            this.deactivate();
            this._listeners = [];
          }
          /**
           * Notify all listeners that 'matches === TRUE'
           * @return {?}
           */

        }, {
          key: "activate",
          value: function activate() {
            var _this7 = this;

            if (!this._isActive) {
              this._isActive = true;

              this._listeners.forEach(
              /**
              * @param {?} callback
              * @return {?}
              */
              function (callback) {
                /** @type {?} */
                var cb =
                /** @type {?} */
                callback;
                cb.call(_this7,
                /** @type {?} */
                {
                  matches: _this7.matches,
                  media: _this7.media
                });
              });
            }

            return this;
          }
          /**
           * Notify all listeners that 'matches === false'
           * @return {?}
           */

        }, {
          key: "deactivate",
          value: function deactivate() {
            var _this8 = this;

            if (this._isActive) {
              this._isActive = false;

              this._listeners.forEach(
              /**
              * @param {?} callback
              * @return {?}
              */
              function (callback) {
                /** @type {?} */
                var cb =
                /** @type {?} */
                callback;
                cb.call(_this8,
                /** @type {?} */
                {
                  matches: _this8.matches,
                  media: _this8.media
                });
              });
            }

            return this;
          }
          /**
           * Add a listener to our internal list to activate later
           * @param {?} listener
           * @return {?}
           */

        }, {
          key: "addListener",
          value: function addListener(listener) {
            if (this._listeners.indexOf(listener) === -1) {
              this._listeners.push(listener);
            }

            if (this._isActive) {
              /** @type {?} */
              var cb =
              /** @type {?} */
              listener;
              cb.call(this,
              /** @type {?} */
              {
                matches: this.matches,
                media: this.media
              });
            }
          }
          /**
           * Don't need to remove listeners in the testing environment
           * @param {?} _
           * @return {?}
           */

        }, {
          key: "removeListener",
          value: function removeListener(_) {}
          /**
           * @param {?} _
           * @param {?} __
           * @param {?=} ___
           * @return {?}
           */

        }, {
          key: "addEventListener",
          value: function addEventListener(_, __, ___) {}
          /**
           * @param {?} _
           * @param {?} __
           * @param {?=} ___
           * @return {?}
           */

        }, {
          key: "removeEventListener",
          value: function removeEventListener(_, __, ___) {}
          /**
           * @param {?} _
           * @return {?}
           */

        }, {
          key: "dispatchEvent",
          value: function dispatchEvent(_) {
            return false;
          }
        }]);

        return MockMediaQueryList;
      }();
      /**
       * Pre-configured provider for MockMatchMedia
       * @type {?}
       */


      var MockMatchMediaProvider = {
        // tslint:disable-line:variable-name
        provide: MatchMedia,
        useClass: MockMatchMedia
      };
      /**
       * @fileoverview added by tsickle
       * Generated from: core/match-media/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/media-marshaller/print-hook.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */

      var PRINT = 'print';
      /** @type {?} */

      var _BREAKPOINT_PRINT = {
        alias: PRINT,
        mediaQuery: PRINT,
        priority: 1000
      };
      /**
       * PrintHook - Use to intercept print MediaQuery activations and force
       *             layouts to render with the specified print alias/breakpoint
       *
       * Used in MediaMarshaller and MediaObserver
       */

      var _PrintHook = /*#__PURE__*/function () {
        /**
         * @param {?} breakpoints
         * @param {?} layoutConfig
         * @param {?} _document
         */
        function _PrintHook(breakpoints, layoutConfig, _document) {
          _classCallCheck(this, _PrintHook);

          this.breakpoints = breakpoints;
          this.layoutConfig = layoutConfig;
          this._document = _document; // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`
          //  and `afterprint` event listeners.

          this.registeredBeforeAfterPrintHooks = false; // isPrintingBeforeAfterEvent is used to track if we are printing from within
          // a `beforeprint` event handler. This prevents the typicall `stopPrinting`
          // form `interceptEvents` so that printing is not stopped while the dialog
          // is still open. This is an extension of the `isPrinting` property on
          // browsers which support `beforeprint` and `afterprint` events.

          this.isPrintingBeforeAfterEvent = false;
          this.beforePrintEventListeners = [];
          this.afterPrintEventListeners = [];
          /**
           * Is this service currently in Print-mode ?
           */

          this.isPrinting = false;
          this.queue = new PrintQueue();
          this.deactivations = [];
        }
        /**
         * Add 'print' mediaQuery: to listen for matchMedia activations
         * @param {?} queries
         * @return {?}
         */


        _createClass(_PrintHook, [{
          key: "withPrintQuery",
          value: function withPrintQuery(queries) {
            return [].concat(_toConsumableArray(queries), [PRINT]);
          }
          /**
           * Is the MediaChange event for any 'print' \@media
           * @param {?} e
           * @return {?}
           */

        }, {
          key: "isPrintEvent",
          value: function isPrintEvent(e) {
            return e.mediaQuery.startsWith(PRINT);
          }
          /**
           * What is the desired mqAlias to use while printing?
           * @return {?}
           */

        }, {
          key: "printAlias",
          get: function get() {
            return this.layoutConfig.printWithBreakpoints || [];
          }
          /**
           * Lookup breakpoints associated with print aliases.
           * @return {?}
           */

        }, {
          key: "printBreakPoints",
          get: function get() {
            var _this9 = this;

            return (
              /** @type {?} */
              this.printAlias.map(
              /**
              * @param {?} alias
              * @return {?}
              */
              function (alias) {
                return _this9.breakpoints.findByAlias(alias);
              }).filter(
              /**
              * @param {?} bp
              * @return {?}
              */
              function (bp) {
                return bp !== null;
              })
            );
          }
          /**
           * Lookup breakpoint associated with mediaQuery
           * @param {?} __0
           * @return {?}
           */

        }, {
          key: "getEventBreakpoints",
          value: function getEventBreakpoints(_ref) {
            var mediaQuery = _ref.mediaQuery;

            /** @type {?} */
            var bp = this.breakpoints.findByQuery(mediaQuery);
            /** @type {?} */

            var list = bp ? [].concat(_toConsumableArray(this.printBreakPoints), [bp]) : this.printBreakPoints;
            return list.sort(_sortDescendingPriority);
          }
          /**
           * Update event with printAlias mediaQuery information
           * @param {?} event
           * @return {?}
           */

        }, {
          key: "updateEvent",
          value: function updateEvent(event) {
            /** @type {?} */
            var bp = this.breakpoints.findByQuery(event.mediaQuery);

            if (this.isPrintEvent(event)) {
              // Reset from 'print' to first (highest priority) print breakpoint
              bp = this.getEventBreakpoints(event)[0];
              event.mediaQuery = bp ? bp.mediaQuery : '';
            }

            return _mergeAlias(event, bp);
          } // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can
          // trigger print styles synchronously and apply proper layout styles.
          // It is a noop if the hooks have already been registered or if the document's
          // `defaultView` is not available.

          /**
           * @private
           * @param {?} target
           * @return {?}
           */

        }, {
          key: "registerBeforeAfterPrintHooks",
          value: function registerBeforeAfterPrintHooks(target) {
            var _this10 = this;

            // `defaultView` may be null when rendering on the server or in other contexts.
            if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {
              return;
            }

            this.registeredBeforeAfterPrintHooks = true;
            /** @type {?} */

            var beforePrintListener =
            /**
            * @return {?}
            */
            function beforePrintListener() {
              // If we aren't already printing, start printing and update the styles as
              // if there was a regular print `MediaChange`(from matchMedia).
              if (!_this10.isPrinting) {
                _this10.isPrintingBeforeAfterEvent = true;

                _this10.startPrinting(target, _this10.getEventBreakpoints(new _MediaChange(true, PRINT)));

                target.updateStyles();
              }
            };
            /** @type {?} */


            var afterPrintListener =
            /**
            * @return {?}
            */
            function afterPrintListener() {
              // If we aren't already printing, start printing and update the styles as
              // if there was a regular print `MediaChange`(from matchMedia).
              _this10.isPrintingBeforeAfterEvent = false;

              if (_this10.isPrinting) {
                _this10.stopPrinting(target);

                target.updateStyles();
              }
            }; // Could we have teardown logic to remove if there are no print listeners being used?


            this._document.defaultView.addEventListener('beforeprint', beforePrintListener);

            this._document.defaultView.addEventListener('afterprint', afterPrintListener);

            this.beforePrintEventListeners.push(beforePrintListener);
            this.afterPrintEventListeners.push(afterPrintListener);
          }
          /**
           * Prepare RxJS filter operator with partial application
           * @param {?} target
           * @return {?} pipeable filter predicate
           */

        }, {
          key: "interceptEvents",
          value: function interceptEvents(target) {
            var _this11 = this;

            this.registerBeforeAfterPrintHooks(target);
            return (
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                if (_this11.isPrintEvent(event)) {
                  if (event.matches && !_this11.isPrinting) {
                    _this11.startPrinting(target, _this11.getEventBreakpoints(event));

                    target.updateStyles();
                  } else if (!event.matches && _this11.isPrinting && !_this11.isPrintingBeforeAfterEvent) {
                    _this11.stopPrinting(target);

                    target.updateStyles();
                  }
                } else {
                  _this11.collectActivations(event);
                }
              }
            );
          }
          /**
           * Stop mediaChange event propagation in event streams
           * @return {?}
           */

        }, {
          key: "blockPropagation",
          value: function blockPropagation() {
            var _this12 = this;

            return (
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                return !(_this12.isPrinting || _this12.isPrintEvent(event));
              }
            );
          }
          /**
           * Save current activateBreakpoints (for later restore)
           * and substitute only the printAlias breakpoint
           * @protected
           * @param {?} target
           * @param {?} bpList
           * @return {?}
           */

        }, {
          key: "startPrinting",
          value: function startPrinting(target, bpList) {
            this.isPrinting = true;
            target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);
          }
          /**
           * For any print de-activations, reset the entire print queue
           * @protected
           * @param {?} target
           * @return {?}
           */

        }, {
          key: "stopPrinting",
          value: function stopPrinting(target) {
            target.activatedBreakpoints = this.deactivations;
            this.deactivations = [];
            this.queue.clear();
            this.isPrinting = false;
          }
          /**
           * To restore pre-Print Activations, we must capture the proper
           * list of breakpoint activations BEFORE print starts. OnBeforePrint()
           * is supported; so 'print' mediaQuery activations are used as a fallback
           * in browsers without `beforeprint` support.
           *
           * >  But activated breakpoints are deactivated BEFORE 'print' activation.
           *
           * Let's capture all de-activations using the following logic:
           *
           *  When not printing:
           *    - clear cache when activating non-print breakpoint
           *    - update cache (and sort) when deactivating
           *
           *  When printing:
           *    - sort and save when starting print
           *    - restore as activatedTargets and clear when stop printing
           * @param {?} event
           * @return {?}
           */

        }, {
          key: "collectActivations",
          value: function collectActivations(event) {
            if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {
              if (!event.matches) {
                /** @type {?} */
                var bp = this.breakpoints.findByQuery(event.mediaQuery);

                if (bp) {
                  // Deactivating a breakpoint
                  this.deactivations.push(bp);
                  this.deactivations.sort(_sortDescendingPriority);
                }
              } else if (!this.isPrintingBeforeAfterEvent) {
                // Only clear deactivations if we aren't printing from a `beforeprint` event.
                // Otherwise this will clear before `stopPrinting()` is called to restore
                // the pre-Print Activations.
                this.deactivations = [];
              }
            }
          }
          /**
           * Teardown logic for the service.
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            var _this13 = this;

            if (this._document.defaultView) {
              this.beforePrintEventListeners.forEach(
              /**
              * @param {?} l
              * @return {?}
              */
              function (l) {
                return _this13._document.defaultView.removeEventListener('beforeprint', l);
              });
              this.afterPrintEventListeners.forEach(
              /**
              * @param {?} l
              * @return {?}
              */
              function (l) {
                return _this13._document.defaultView.removeEventListener('afterprint', l);
              });
            }
          }
        }]);

        return _PrintHook;
      }();

      _PrintHook.ɵfac = function PrintHook_Factory(t) {
        return new (t || _PrintHook)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_BreakPointRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_LAYOUT_CONFIG), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT));
      };
      /** @nocollapse */


      _PrintHook.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function PrintHook_Factory() {
          return new _PrintHook((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_BreakPointRegistry), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_LAYOUT_CONFIG), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT));
        },
        token: _PrintHook,
        providedIn: "root"
      });
      /** @nocollapse */

      _PrintHook.ctorParameters = function () {
        return [{
          type: _BreakPointRegistry
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_LAYOUT_CONFIG]
          }]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_PrintHook, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _BreakPointRegistry
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_LAYOUT_CONFIG]
            }]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
            }]
          }];
        }, null);
      })(); // ************************************************************************
      // Internal Utility class 'PrintQueue'
      // ************************************************************************

      /**
       * Utility class to manage print breakpoints + activatedBreakpoints
       * with correct sorting WHILE printing
       */


      var PrintQueue = /*#__PURE__*/function () {
        function PrintQueue() {
          _classCallCheck(this, PrintQueue);

          /**
           * Sorted queue with prioritized print breakpoints
           */
          this.printBreakpoints = [];
        }
        /**
         * @param {?} bpList
         * @return {?}
         */


        _createClass(PrintQueue, [{
          key: "addPrintBreakpoints",
          value: function addPrintBreakpoints(bpList) {
            var _this14 = this;

            bpList.push(_BREAKPOINT_PRINT);
            bpList.sort(_sortDescendingPriority);
            bpList.forEach(
            /**
            * @param {?} bp
            * @return {?}
            */
            function (bp) {
              return _this14.addBreakpoint(bp);
            });
            return this.printBreakpoints;
          }
          /**
           * Add Print breakpoint to queue
           * @param {?} bp
           * @return {?}
           */

        }, {
          key: "addBreakpoint",
          value: function addBreakpoint(bp) {
            if (!!bp) {
              /** @type {?} */
              var bpInList = this.printBreakpoints.find(
              /**
              * @param {?} it
              * @return {?}
              */
              function (it) {
                return it.mediaQuery === bp.mediaQuery;
              });

              if (bpInList === undefined) {
                // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,
                // register as highest priority in the queue
                this.printBreakpoints = isPrintBreakPoint(bp) ? [bp].concat(_toConsumableArray(this.printBreakpoints)) : [].concat(_toConsumableArray(this.printBreakpoints), [bp]);
              }
            }
          }
          /**
           * Restore original activated breakpoints and clear internal caches
           * @return {?}
           */

        }, {
          key: "clear",
          value: function clear() {
            this.printBreakpoints = [];
          }
        }]);

        return PrintQueue;
      }(); // ************************************************************************
      // Internal Utility methods
      // ************************************************************************

      /**
       * Only support intercept queueing if the Breakpoint is a print \@media query
       * @param {?} bp
       * @return {?}
       */


      function isPrintBreakPoint(bp) {
        return bp ? bp.mediaQuery.startsWith(PRINT) : false;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/utils/array.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Wraps the provided value in an array, unless the provided value is an array.
       * @template T
       * @param {?} value
       * @return {?}
       */


      function _coerceArray(value) {
        return Array.isArray(value) ? value : [value];
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/media-observer/media-observer.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine
       * if a mediaQuery is currently activated.
       *
       * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate
       * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*
       * in 1 event notification. The reported activations will be sorted in descending priority order.
       *
       * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange
       * notification. For custom mediaQuery notifications, alias information will not be injected and
       * those fields will be ''.
       *
       * Note: Developers should note that only mediaChange activations (not de-activations)
       *       are announced by the MediaObserver.
       *
       * \@usage
       *
       *  // RxJS
       *  import { filter } from 'rxjs/operators';
       *  import { MediaObserver } from '\@angular/flex-layout';
       *
       * \@Component({ ... })
       *  export class AppComponent {
       *    status: string = '';
       *
       *    constructor(mediaObserver: MediaObserver) {
       *      const media$ = mediaObserver.asObservable().pipe(
       *        filter((changes: MediaChange[]) => true)   // silly noop filter
       *      );
       *
       *      media$.subscribe((changes: MediaChange[]) => {
       *        let status = '';
       *        changes.forEach( change => {
       *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;
       *        });
       *        this.status = status;
       *     });
       *
       *    }
       *  }
       */


      var _MediaObserver = /*#__PURE__*/function () {
        /**
         * @param {?} breakpoints
         * @param {?} matchMedia
         * @param {?} hook
         */
        function _MediaObserver(breakpoints, matchMedia, hook) {
          _classCallCheck(this, _MediaObserver);

          this.breakpoints = breakpoints;
          this.matchMedia = matchMedia;
          this.hook = hook;
          /**
           * Filter MediaChange notifications for overlapping breakpoints
           */

          this.filterOverlaps = false;
          this.destroyed$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
          this._media$ = this.watchActivations();
          this.media$ = this._media$.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(
          /**
          * @param {?} changes
          * @return {?}
          */
          function (changes) {
            return changes.length > 0;
          }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.map)(
          /**
          * @param {?} changes
          * @return {?}
          */
          function (changes) {
            return changes[0];
          }));
        }
        /**
         * Completes the active subject, signalling to all complete for all
         * MediaObserver subscribers
         * @return {?}
         */


        _createClass(_MediaObserver, [{
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.destroyed$.next();
            this.destroyed$.complete();
          } // ************************************************
          // Public Methods
          // ************************************************

          /**
           * Observe changes to current activation 'list'
           * @return {?}
           */

        }, {
          key: "asObservable",
          value: function asObservable() {
            return this._media$;
          }
          /**
           * Allow programmatic query to determine if one or more media query/alias match
           * the current viewport size.
           * @param {?} value One or more media queries (or aliases) to check.
           * @return {?} Whether any of the media queries match.
           */

        }, {
          key: "isActive",
          value: function isActive(value) {
            var _this15 = this;

            /** @type {?} */
            var aliases = splitQueries(_coerceArray(value));
            return aliases.some(
            /**
            * @param {?} alias
            * @return {?}
            */
            function (alias) {
              /** @type {?} */
              var query = toMediaQuery(alias, _this15.breakpoints);
              return query !== null && _this15.matchMedia.isActive(query);
            });
          } // ************************************************
          // Internal Methods
          // ************************************************

          /**
           * Register all the mediaQueries registered in the BreakPointRegistry
           * This is needed so subscribers can be auto-notified of all standard, registered
           * mediaQuery activations
           * @private
           * @return {?}
           */

        }, {
          key: "watchActivations",
          value: function watchActivations() {
            /** @type {?} */
            var queries = this.breakpoints.items.map(
            /**
            * @param {?} bp
            * @return {?}
            */
            function (bp) {
              return bp.mediaQuery;
            });
            return this.buildObservable(queries);
          }
          /**
           * Only pass/announce activations (not de-activations)
           *
           * Since multiple-mediaQueries can be activation in a cycle,
           * gather all current activations into a single list of changes to observers
           *
           * Inject associated (if any) alias information into the MediaChange event
           * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only
           * - Exclude print activations that do not have an associated mediaQuery
           *
           * NOTE: the raw MediaChange events [from MatchMedia] do not
           *       contain important alias information; as such this info
           *       must be injected into the MediaChange
           * @private
           * @param {?} mqList
           * @return {?}
           */

        }, {
          key: "buildObservable",
          value: function buildObservable(mqList) {
            var _this16 = this;

            /** @type {?} */
            var hasChanges =
            /**
            * @param {?} changes
            * @return {?}
            */
            function hasChanges(changes) {
              /** @type {?} */
              var isValidQuery =
              /**
              * @param {?} change
              * @return {?}
              */
              function isValidQuery(change) {
                return change.mediaQuery.length > 0;
              };

              return changes.filter(isValidQuery).length > 0;
            };
            /** @type {?} */


            var excludeOverlaps =
            /**
            * @param {?} changes
            * @return {?}
            */
            function excludeOverlaps(changes) {
              return !_this16.filterOverlaps ? changes : changes.filter(
              /**
              * @param {?} change
              * @return {?}
              */
              function (change) {
                /** @type {?} */
                var bp = _this16.breakpoints.findByQuery(change.mediaQuery);

                return !bp ? true : !bp.overlapping;
              });
            };
            /**
             */


            return this.matchMedia.observe(this.hook.withPrintQuery(mqList)).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(
            /**
            * @param {?} change
            * @return {?}
            */
            function (change) {
              return change.matches;
            }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.debounceTime)(0, rxjs__WEBPACK_IMPORTED_MODULE_9__.asapScheduler), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.switchMap)(
            /**
            * @param {?} _
            * @return {?}
            */
            function (_) {
              return (0, rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(_this16.findAllActivations());
            }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.map)(excludeOverlaps), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(hasChanges), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.takeUntil)(this.destroyed$));
          }
          /**
           * Find all current activations and prepare single list of activations
           * sorted by descending priority.
           * @private
           * @return {?}
           */

        }, {
          key: "findAllActivations",
          value: function findAllActivations() {
            var _this17 = this;

            /** @type {?} */
            var mergeMQAlias =
            /**
            * @param {?} change
            * @return {?}
            */
            function mergeMQAlias(change) {
              /** @type {?} */
              var bp = _this17.breakpoints.findByQuery(change.mediaQuery);

              return _mergeAlias(change, bp);
            };
            /** @type {?} */


            var replaceWithPrintAlias =
            /**
            * @param {?} change
            * @return {?}
            */
            function replaceWithPrintAlias(change) {
              return _this17.hook.isPrintEvent(change) ? _this17.hook.updateEvent(change) : change;
            };

            return this.matchMedia.activations.map(
            /**
            * @param {?} query
            * @return {?}
            */
            function (query) {
              return new _MediaChange(true, query);
            }).map(replaceWithPrintAlias).map(mergeMQAlias).sort(_sortDescendingPriority);
          }
        }]);

        return _MediaObserver;
      }();

      _MediaObserver.ɵfac = function MediaObserver_Factory(t) {
        return new (t || _MediaObserver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_BreakPointRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](MatchMedia), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_PrintHook));
      };
      /** @nocollapse */


      _MediaObserver.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function MediaObserver_Factory() {
          return new _MediaObserver((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_BreakPointRegistry), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(MatchMedia), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_PrintHook));
        },
        token: _MediaObserver,
        providedIn: "root"
      });
      /** @nocollapse */

      _MediaObserver.ctorParameters = function () {
        return [{
          type: _BreakPointRegistry
        }, {
          type: MatchMedia
        }, {
          type: _PrintHook
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_MediaObserver, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _BreakPointRegistry
          }, {
            type: MatchMedia
          }, {
            type: _PrintHook
          }];
        }, null);
      })();
      /**
       * Find associated breakpoint (if any)
       * @param {?} query
       * @param {?} locator
       * @return {?}
       */


      function toMediaQuery(query, locator) {
        /** @type {?} */
        var bp = locator.findByAlias(query) || locator.findByQuery(query);
        return bp ? bp.mediaQuery : null;
      }
      /**
       * Split each query string into separate query strings if two queries are provided as comma
       * separated.
       * @param {?} queries
       * @return {?}
       */


      function splitQueries(queries) {
        return queries.map(
        /**
        * @param {?} query
        * @return {?}
        */
        function (query) {
          return query.split(',');
        }).reduce(
        /**
        * @param {?} a1
        * @param {?} a2
        * @return {?}
        */
        function (a1, a2) {
          return a1.concat(a2);
        }).map(
        /**
        * @param {?} query
        * @return {?}
        */
        function (query) {
          return query.trim();
        });
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/media-observer/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/media-trigger/media-trigger.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Class
       */


      var _MediaTrigger = /*#__PURE__*/function () {
        /**
         * @param {?} breakpoints
         * @param {?} matchMedia
         * @param {?} layoutConfig
         * @param {?} _platformId
         * @param {?} _document
         */
        function _MediaTrigger(breakpoints, matchMedia, layoutConfig, _platformId, _document) {
          _classCallCheck(this, _MediaTrigger);

          this.breakpoints = breakpoints;
          this.matchMedia = matchMedia;
          this.layoutConfig = layoutConfig;
          this._platformId = _platformId;
          this._document = _document;
          this.hasCachedRegistryMatches = false;
          this.originalActivations = [];
          this.originalRegistry = new Map();
        }
        /**
         * Manually activate range of breakpoints
         * @param {?} list array of mediaQuery or alias strings
         * @return {?}
         */


        _createClass(_MediaTrigger, [{
          key: "activate",
          value: function activate(list) {
            list = list.map(
            /**
            * @param {?} it
            * @return {?}
            */
            function (it) {
              return it.trim();
            }); // trim queries

            this.saveActivations();
            this.deactivateAll();
            this.setActivations(list);
            this.prepareAutoRestore();
          }
          /**
           * Restore original, 'real' breakpoints and emit events
           * to trigger stream notification
           * @return {?}
           */

        }, {
          key: "restore",
          value: function restore() {
            if (this.hasCachedRegistryMatches) {
              /** @type {?} */
              var extractQuery =
              /**
              * @param {?} change
              * @return {?}
              */
              function extractQuery(change) {
                return change.mediaQuery;
              };
              /** @type {?} */


              var list = this.originalActivations.map(extractQuery);

              try {
                this.deactivateAll();
                this.restoreRegistryMatches();
                this.setActivations(list);
              } finally {
                this.originalActivations = [];

                if (this.resizeSubscription) {
                  this.resizeSubscription.unsubscribe();
                }
              }
            }
          } // ************************************************
          // Internal Methods
          // ************************************************

          /**
           * Whenever window resizes, immediately auto-restore original
           * activations (if we are simulating activations)
           * @private
           * @return {?}
           */

        }, {
          key: "prepareAutoRestore",
          value: function prepareAutoRestore() {
            /** @type {?} */
            var isBrowser = (0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(this._platformId) && this._document;
            /** @type {?} */


            var enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;

            if (enableAutoRestore) {
              /** @type {?} */
              var resize$ = (0, rxjs__WEBPACK_IMPORTED_MODULE_13__.fromEvent)(window, 'resize').pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.take)(1));
              this.resizeSubscription = resize$.subscribe(this.restore.bind(this));
            }
          }
          /**
           * Notify all matchMedia subscribers of de-activations
           *
           * Note: we must force 'matches' updates for
           *       future matchMedia::activation lookups
           * @private
           * @return {?}
           */

        }, {
          key: "deactivateAll",
          value: function deactivateAll() {
            /** @type {?} */
            var list = this.currentActivations;
            this.forceRegistryMatches(list, false);
            this.simulateMediaChanges(list, false);
          }
          /**
           * Cache current activations as sorted, prioritized list of MediaChanges
           * @private
           * @return {?}
           */

        }, {
          key: "saveActivations",
          value: function saveActivations() {
            var _this18 = this;

            if (!this.hasCachedRegistryMatches) {
              /** @type {?} */
              var toMediaChange =
              /**
              * @param {?} query
              * @return {?}
              */
              function toMediaChange(query) {
                return new _MediaChange(true, query);
              };
              /** @type {?} */


              var mergeMQAlias =
              /**
              * @param {?} change
              * @return {?}
              */
              function mergeMQAlias(change) {
                /** @type {?} */
                var bp = _this18.breakpoints.findByQuery(change.mediaQuery);

                return _mergeAlias(change, bp);
              };

              this.originalActivations = this.currentActivations.map(toMediaChange).map(mergeMQAlias).sort(_sortDescendingPriority);
              this.cacheRegistryMatches();
            }
          }
          /**
           * Force set manual activations for specified mediaQuery list
           * @private
           * @param {?} list
           * @return {?}
           */

        }, {
          key: "setActivations",
          value: function setActivations(list) {
            if (!!this.originalRegistry) {
              this.forceRegistryMatches(list, true);
            }

            this.simulateMediaChanges(list);
          }
          /**
           * For specified mediaQuery list manually simulate activations or deactivations
           * @private
           * @param {?} queries
           * @param {?=} matches
           * @return {?}
           */

        }, {
          key: "simulateMediaChanges",
          value: function simulateMediaChanges(queries) {
            var _this19 = this;

            var matches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

            /** @type {?} */
            var toMediaQuery =
            /**
            * @param {?} query
            * @return {?}
            */
            function toMediaQuery(query) {
              /** @type {?} */
              var locator = _this19.breakpoints;
              /** @type {?} */

              var bp = locator.findByAlias(query) || locator.findByQuery(query);
              return bp ? bp.mediaQuery : query;
            };
            /** @type {?} */


            var emitChangeEvent =
            /**
            * @param {?} query
            * @return {?}
            */
            function emitChangeEvent(query) {
              return _this19.emitChangeEvent(matches, query);
            };

            queries.map(toMediaQuery).forEach(emitChangeEvent);
          }
          /**
           * Replace current registry with simulated registry...
           * Note: this is required since MediaQueryList::matches is 'readOnly'
           * @private
           * @param {?} queries
           * @param {?} matches
           * @return {?}
           */

        }, {
          key: "forceRegistryMatches",
          value: function forceRegistryMatches(queries, matches) {
            /** @type {?} */
            var registry = new Map();
            queries.forEach(
            /**
            * @param {?} query
            * @return {?}
            */
            function (query) {
              registry.set(query,
              /** @type {?} */
              {
                matches: matches
              });
            });
            this.matchMedia.registry = registry;
          }
          /**
           * Save current MatchMedia::registry items.
           * @private
           * @return {?}
           */

        }, {
          key: "cacheRegistryMatches",
          value: function cacheRegistryMatches() {
            /** @type {?} */
            var target = this.originalRegistry;
            target.clear();
            this.matchMedia.registry.forEach(
            /**
            * @param {?} value
            * @param {?} key
            * @return {?}
            */
            function (value, key) {
              target.set(key, value);
            });
            this.hasCachedRegistryMatches = true;
          }
          /**
           * Restore original, 'true' registry
           * @private
           * @return {?}
           */

        }, {
          key: "restoreRegistryMatches",
          value: function restoreRegistryMatches() {
            /** @type {?} */
            var target = this.matchMedia.registry;
            target.clear();
            this.originalRegistry.forEach(
            /**
            * @param {?} value
            * @param {?} key
            * @return {?}
            */
            function (value, key) {
              target.set(key, value);
            });
            this.originalRegistry.clear();
            this.hasCachedRegistryMatches = false;
          }
          /**
           * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver
           * @private
           * @param {?} matches
           * @param {?} query
           * @return {?}
           */

        }, {
          key: "emitChangeEvent",
          value: function emitChangeEvent(matches, query) {
            this.matchMedia.source.next(new _MediaChange(matches, query));
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "currentActivations",
          get: function get() {
            return this.matchMedia.activations;
          }
        }]);

        return _MediaTrigger;
      }();

      _MediaTrigger.ɵfac = function MediaTrigger_Factory(t) {
        return new (t || _MediaTrigger)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_BreakPointRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](MatchMedia), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_LAYOUT_CONFIG), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT));
      };
      /** @nocollapse */


      _MediaTrigger.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function MediaTrigger_Factory() {
          return new _MediaTrigger((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_BreakPointRegistry), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(MatchMedia), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_LAYOUT_CONFIG), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT));
        },
        token: _MediaTrigger,
        providedIn: "root"
      });
      /** @nocollapse */

      _MediaTrigger.ctorParameters = function () {
        return [{
          type: _BreakPointRegistry
        }, {
          type: MatchMedia
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_LAYOUT_CONFIG]
          }]
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
          }]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_MediaTrigger, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _BreakPointRegistry
          }, {
            type: MatchMedia
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_LAYOUT_CONFIG]
            }]
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
            }]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT]
            }]
          }];
        }, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: core/media-trigger/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/utils/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: utils/auto-prefixer.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Applies CSS prefixes to appropriate style keys.
       *
       * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.
       *    {
       *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10
       *      display: flex;             NEW, Spec - Firefox, Chrome, Opera
       *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7
       *      // display: -ms-flexbox;   TWEENER - IE 10
       *      // display: -moz-flexbox;  OLD - Firefox
       *    }
       * @param {?} target
       * @return {?}
       */


      function applyCssPrefixes(target) {
        for (var key in target) {
          /** @type {?} */
          var value = target[key] || '';

          switch (key) {
            case 'display':
              if (value === 'flex') {
                target['display'] = ['-webkit-flex', 'flex'];
              } else if (value === 'inline-flex') {
                target['display'] = ['-webkit-inline-flex', 'inline-flex'];
              } else {
                target['display'] = value;
              }

              break;

            case 'align-items':
            case 'align-self':
            case 'align-content':
            case 'flex':
            case 'flex-basis':
            case 'flex-flow':
            case 'flex-grow':
            case 'flex-shrink':
            case 'flex-wrap':
            case 'justify-content':
              target['-webkit-' + key] = value;
              break;

            case 'flex-direction':
              value = value || 'row';
              target['-webkit-flex-direction'] = value;
              target['flex-direction'] = value;
              break;

            case 'order':
              target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;
              break;
          }
        }

        return target;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/style-utils/style-utils.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _StyleUtils = /*#__PURE__*/function () {
        /**
         * @param {?} _serverStylesheet
         * @param {?} _serverModuleLoaded
         * @param {?} _platformId
         * @param {?} layoutConfig
         */
        function _StyleUtils(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {
          _classCallCheck(this, _StyleUtils);

          this._serverStylesheet = _serverStylesheet;
          this._serverModuleLoaded = _serverModuleLoaded;
          this._platformId = _platformId;
          this.layoutConfig = layoutConfig;
        }
        /**
         * Applies styles given via string pair or object map to the directive element
         * @param {?} element
         * @param {?} style
         * @param {?=} value
         * @return {?}
         */


        _createClass(_StyleUtils, [{
          key: "applyStyleToElement",
          value: function applyStyleToElement(element, style) {
            var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

            /** @type {?} */
            var styles = {};

            if (typeof style === 'string') {
              styles[style] = value;
              style = styles;
            }

            styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);

            this._applyMultiValueStyleToElement(styles, element);
          }
          /**
           * Applies styles given via string pair or object map to the directive's element
           * @param {?} style
           * @param {?=} elements
           * @return {?}
           */

        }, {
          key: "applyStyleToElements",
          value: function applyStyleToElements(style) {
            var _this20 = this;

            var elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

            /** @type {?} */
            var styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);
            elements.forEach(
            /**
            * @param {?} el
            * @return {?}
            */
            function (el) {
              _this20._applyMultiValueStyleToElement(styles, el);
            });
          }
          /**
           * Determine the DOM element's Flexbox flow (flex-direction)
           *
           * Check inline style first then check computed (stylesheet) style
           * @param {?} target
           * @return {?}
           */

        }, {
          key: "getFlowDirection",
          value: function getFlowDirection(target) {
            /** @type {?} */
            var query = 'flex-direction';
            /** @type {?} */

            var value = this.lookupStyle(target, query);
            /** @type {?} */

            var hasInlineValue = this.lookupInlineStyle(target, query) || (0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformServer)(this._platformId) && this._serverModuleLoaded ? value : '';
            return [value || 'row', hasInlineValue];
          }
          /**
           * @param {?} target
           * @return {?}
           */

        }, {
          key: "hasWrap",
          value: function hasWrap(target) {
            /** @type {?} */
            var query = 'flex-wrap';
            return this.lookupStyle(target, query) === 'wrap';
          }
          /**
           * Find the DOM element's raw attribute value (if any)
           * @param {?} element
           * @param {?} attribute
           * @return {?}
           */

        }, {
          key: "lookupAttributeValue",
          value: function lookupAttributeValue(element, attribute) {
            return element.getAttribute(attribute) || '';
          }
          /**
           * Find the DOM element's inline style value (if any)
           * @param {?} element
           * @param {?} styleName
           * @return {?}
           */

        }, {
          key: "lookupInlineStyle",
          value: function lookupInlineStyle(element, styleName) {
            return (0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(this._platformId) ? element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);
          }
          /**
           * Determine the inline or inherited CSS style
           * NOTE: platform-server has no implementation for getComputedStyle
           * @param {?} element
           * @param {?} styleName
           * @param {?=} inlineOnly
           * @return {?}
           */

        }, {
          key: "lookupStyle",
          value: function lookupStyle(element, styleName) {
            var inlineOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            /** @type {?} */
            var value = '';

            if (element) {
              /** @type {?} */
              var immediateValue = value = this.lookupInlineStyle(element, styleName);

              if (!immediateValue) {
                if ((0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(this._platformId)) {
                  if (!inlineOnly) {
                    value = getComputedStyle(element).getPropertyValue(styleName);
                  }
                } else {
                  if (this._serverModuleLoaded) {
                    value = this._serverStylesheet.getStyleForElement(element, styleName);
                  }
                }
              }
            } // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;
            //       in which case getComputedStyle() should determine a valid value.


            return value ? value.trim() : '';
          }
          /**
           * Applies the styles to the element. The styles object map may contain an array of values
           * Each value will be added as element style
           * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones
           * @private
           * @param {?} styles
           * @param {?} element
           * @return {?}
           */

        }, {
          key: "_applyMultiValueStyleToElement",
          value: function _applyMultiValueStyleToElement(styles, element) {
            var _this21 = this;

            Object.keys(styles).sort().forEach(
            /**
            * @param {?} key
            * @return {?}
            */
            function (key) {
              /** @type {?} */
              var el = styles[key];
              /** @type {?} */

              var values = Array.isArray(el) ? el : [el];
              values.sort();

              var _iterator = _createForOfIteratorHelper(values),
                  _step;

              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  var value = _step.value;
                  value = value ? value + '' : '';

                  if ((0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(_this21._platformId) || !_this21._serverModuleLoaded) {
                    (0, _angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(_this21._platformId) ? element.style.setProperty(key, value) : _this21._setServerStyle(element, key, value);
                  } else {
                    _this21._serverStylesheet.addStyleToElement(element, key, value);
                  }
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
            });
          }
          /**
           * @private
           * @param {?} element
           * @param {?} styleName
           * @param {?=} styleValue
           * @return {?}
           */

        }, {
          key: "_setServerStyle",
          value: function _setServerStyle(element, styleName, styleValue) {
            styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
            /** @type {?} */

            var styleMap = this._readStyleAttribute(element);

            styleMap[styleName] = styleValue || '';

            this._writeStyleAttribute(element, styleMap);
          }
          /**
           * @private
           * @param {?} element
           * @param {?} styleName
           * @return {?}
           */

        }, {
          key: "_getServerStyle",
          value: function _getServerStyle(element, styleName) {
            /** @type {?} */
            var styleMap = this._readStyleAttribute(element);

            return styleMap[styleName] || '';
          }
          /**
           * @private
           * @param {?} element
           * @return {?}
           */

        }, {
          key: "_readStyleAttribute",
          value: function _readStyleAttribute(element) {
            /** @type {?} */
            var styleMap = {};
            /** @type {?} */

            var styleAttribute = element.getAttribute('style');

            if (styleAttribute) {
              /** @type {?} */
              var styleList = styleAttribute.split(/;+/g);

              for (var i = 0; i < styleList.length; i++) {
                /** @type {?} */
                var style = styleList[i].trim();

                if (style.length > 0) {
                  /** @type {?} */
                  var colonIndex = style.indexOf(':');

                  if (colonIndex === -1) {
                    throw new Error("Invalid CSS style: ".concat(style));
                  }
                  /** @type {?} */


                  var name = style.substr(0, colonIndex).trim();
                  styleMap[name] = style.substr(colonIndex + 1).trim();
                }
              }
            }

            return styleMap;
          }
          /**
           * @private
           * @param {?} element
           * @param {?} styleMap
           * @return {?}
           */

        }, {
          key: "_writeStyleAttribute",
          value: function _writeStyleAttribute(element, styleMap) {
            /** @type {?} */
            var styleAttrValue = '';

            for (var key in styleMap) {
              /** @type {?} */
              var newValue = styleMap[key];

              if (newValue) {
                styleAttrValue += key + ':' + styleMap[key] + ';';
              }
            }

            element.setAttribute('style', styleAttrValue);
          }
        }]);

        return _StyleUtils;
      }();

      _StyleUtils.ɵfac = function StyleUtils_Factory(t) {
        return new (t || _StyleUtils)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_StylesheetMap), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_SERVER_TOKEN), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_LAYOUT_CONFIG));
      };
      /** @nocollapse */


      _StyleUtils.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function StyleUtils_Factory() {
          return new _StyleUtils((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_StylesheetMap), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_SERVER_TOKEN), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_LAYOUT_CONFIG));
        },
        token: _StyleUtils,
        providedIn: "root"
      });
      /** @nocollapse */

      _StyleUtils.ctorParameters = function () {
        return [{
          type: _StylesheetMap
        }, {
          type: Boolean,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_SERVER_TOKEN]
          }]
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
          }]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_LAYOUT_CONFIG]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_StyleUtils, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _StylesheetMap
          }, {
            type: Boolean,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_SERVER_TOKEN]
            }]
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
            }]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_LAYOUT_CONFIG]
            }]
          }];
        }, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: core/style-builder/style-builder.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * A class that encapsulates CSS style generation for common directives
       * @abstract
       */


      var _StyleBuilder = /*#__PURE__*/function () {
        function _StyleBuilder() {
          _classCallCheck(this, _StyleBuilder);

          /**
           * Whether to cache the generated output styles
           */
          this.shouldCache = true;
        }
        /**
         * Run a side effect computation given the input string and the computed styles
         * from the build task and the host configuration object
         * NOTE: This should be a no-op unless an algorithm is provided in a subclass
         * @param {?} _input
         * @param {?} _styles
         * @param {?=} _parent
         * @return {?}
         */


        _createClass(_StyleBuilder, [{
          key: "sideEffect",
          value: function sideEffect(_input, _styles, _parent) {}
        }]);

        return _StyleBuilder;
      }();
      /**
       * @fileoverview added by tsickle
       * Generated from: core/basis-validator/basis-validator.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * The flex API permits 3 or 1 parts of the value:
       *    - `flex-grow flex-shrink flex-basis`, or
       *    - `flex-basis`
       * @param {?} basis
       * @param {?=} grow
       * @param {?=} shrink
       * @return {?}
       */


      function _validateBasis(basis) {
        var grow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';
        var shrink = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '1';

        /** @type {?} */
        var parts = [grow, shrink, basis];
        /** @type {?} */

        var j = basis.indexOf('calc');

        if (j > 0) {
          parts[2] = _validateCalcValue(basis.substring(j).trim());
          /** @type {?} */

          var matches = basis.substr(0, j).trim().split(' ');

          if (matches.length == 2) {
            parts[0] = matches[0];
            parts[1] = matches[1];
          }
        } else if (j == 0) {
          parts[2] = _validateCalcValue(basis.trim());
        } else {
          /** @type {?} */
          var _matches = basis.split(' ');

          parts = _matches.length === 3 ? _matches : [grow, shrink, basis];
        }

        return parts;
      }
      /**
       * Calc expressions require whitespace before & after any expression operators
       * This is a simple, crude whitespace padding solution.
       *   - '3 3 calc(15em + 20px)'
       *   - calc(100% / 7 * 2)
       *   - 'calc(15em + 20px)'
       *   - 'calc(15em+20px)'
       *   - '37px'
       *   = '43%'
       * @param {?} calc
       * @return {?}
       */


      function _validateCalcValue(calc) {
        return calc.replace(/[\s]/g, '').replace(/[\/\*\+\-]/g, ' $& ');
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/media-marshaller/media-marshaller.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * MediaMarshaller - register responsive values from directives and
       *                   trigger them based on media query events
       */


      var _MediaMarshaller = /*#__PURE__*/function () {
        /**
         * @param {?} matchMedia
         * @param {?} breakpoints
         * @param {?} hook
         */
        function _MediaMarshaller(matchMedia, breakpoints, hook) {
          _classCallCheck(this, _MediaMarshaller);

          this.matchMedia = matchMedia;
          this.breakpoints = breakpoints;
          this.hook = hook;
          this.activatedBreakpoints = [];
          this.elementMap = new Map();
          this.elementKeyMap = new WeakMap();
          this.watcherMap = new WeakMap(); // special triggers to update elements
          // special triggers to update elements

          this.updateMap = new WeakMap(); // callback functions to update styles
          // callback functions to update styles

          this.clearMap = new WeakMap(); // callback functions to clear styles
          // callback functions to clear styles

          this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
          this.observeActivations();
        }
        /**
         * @return {?}
         */


        _createClass(_MediaMarshaller, [{
          key: "activatedAlias",
          get: function get() {
            return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';
          }
          /**
           * Update styles on breakpoint activates or deactivates
           * @param {?} mc
           * @return {?}
           */

        }, {
          key: "onMediaChange",
          value: function onMediaChange(mc) {
            /** @type {?} */
            var bp = this.findByQuery(mc.mediaQuery);

            if (bp) {
              mc = _mergeAlias(mc, bp);

              if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {
                this.activatedBreakpoints.push(bp);
                this.activatedBreakpoints.sort(_sortDescendingPriority);
                this.updateStyles();
              } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {
                // Remove the breakpoint when it's deactivated
                this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);
                this.activatedBreakpoints.sort(_sortDescendingPriority);
                this.updateStyles();
              }
            }
          }
          /**
           * initialize the marshaller with necessary elements for delegation on an element
           * @param {?} element
           * @param {?} key
           * @param {?=} updateFn optional callback so that custom bp directives don't have to re-provide this
           * @param {?=} clearFn optional callback so that custom bp directives don't have to re-provide this
           * @param {?=} extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)
           * @return {?}
           */

        }, {
          key: "init",
          value: function init(element, key, updateFn, clearFn) {
            var extraTriggers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
            initBuilderMap(this.updateMap, element, key, updateFn);
            initBuilderMap(this.clearMap, element, key, clearFn);
            this.buildElementKeyMap(element, key);
            this.watchExtraTriggers(element, key, extraTriggers);
          }
          /**
           * get the value for an element and key and optionally a given breakpoint
           * @param {?} element
           * @param {?} key
           * @param {?=} bp
           * @return {?}
           */

        }, {
          key: "getValue",
          value: function getValue(element, key, bp) {
            /** @type {?} */
            var bpMap = this.elementMap.get(element);

            if (bpMap) {
              /** @type {?} */
              var values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);

              if (values) {
                return values.get(key);
              }
            }

            return undefined;
          }
          /**
           * whether the element has values for a given key
           * @param {?} element
           * @param {?} key
           * @return {?}
           */

        }, {
          key: "hasValue",
          value: function hasValue(element, key) {
            /** @type {?} */
            var bpMap = this.elementMap.get(element);

            if (bpMap) {
              /** @type {?} */
              var values = this.getActivatedValues(bpMap, key);

              if (values) {
                return values.get(key) !== undefined || false;
              }
            }

            return false;
          }
          /**
           * Set the value for an input on a directive
           * @param {?} element the element in question
           * @param {?} key the type of the directive (e.g. flex, layout-gap, etc)
           * @param {?} val the value for the breakpoint
           * @param {?} bp the breakpoint suffix (empty string = default)
           * @return {?}
           */

        }, {
          key: "setValue",
          value: function setValue(element, key, val, bp) {
            /** @type {?} */
            var bpMap = this.elementMap.get(element);

            if (!bpMap) {
              bpMap = new Map().set(bp, new Map().set(key, val));
              this.elementMap.set(element, bpMap);
            } else {
              /** @type {?} */
              var values = (bpMap.get(bp) || new Map()).set(key, val);
              bpMap.set(bp, values);
              this.elementMap.set(element, bpMap);
            }
            /** @type {?} */


            var value = this.getValue(element, key);

            if (value !== undefined) {
              this.updateElement(element, key, value);
            }
          }
          /**
           * Track element value changes for a specific key
           * @param {?} element
           * @param {?} key
           * @return {?}
           */

        }, {
          key: "trackValue",
          value: function trackValue(element, key) {
            return this.subject.asObservable().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(
            /**
            * @param {?} v
            * @return {?}
            */
            function (v) {
              return v.element === element && v.key === key;
            }));
          }
          /**
           * update all styles for all elements on the current breakpoint
           * @return {?}
           */

        }, {
          key: "updateStyles",
          value: function updateStyles() {
            var _this22 = this;

            this.elementMap.forEach(
            /**
            * @param {?} bpMap
            * @param {?} el
            * @return {?}
            */
            function (bpMap, el) {
              /** @type {?} */
              var keyMap = new Set(
              /** @type {?} */
              _this22.elementKeyMap.get(el));
              /** @type {?} */

              var valueMap = _this22.getActivatedValues(bpMap);

              if (valueMap) {
                valueMap.forEach(
                /**
                * @param {?} v
                * @param {?} k
                * @return {?}
                */
                function (v, k) {
                  _this22.updateElement(el, k, v);

                  keyMap["delete"](k);
                });
              }

              keyMap.forEach(
              /**
              * @param {?} k
              * @return {?}
              */
              function (k) {
                valueMap = _this22.getActivatedValues(bpMap, k);

                if (valueMap) {
                  /** @type {?} */
                  var value = valueMap.get(k);

                  _this22.updateElement(el, k, value);
                } else {
                  _this22.clearElement(el, k);
                }
              });
            });
          }
          /**
           * clear the styles for a given element
           * @param {?} element
           * @param {?} key
           * @return {?}
           */

        }, {
          key: "clearElement",
          value: function clearElement(element, key) {
            /** @type {?} */
            var builders = this.clearMap.get(element);

            if (builders) {
              /** @type {?} */
              var clearFn =
              /** @type {?} */
              builders.get(key);

              if (!!clearFn) {
                clearFn();
                this.subject.next({
                  element: element,
                  key: key,
                  value: ''
                });
              }
            }
          }
          /**
           * update a given element with the activated values for a given key
           * @param {?} element
           * @param {?} key
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateElement",
          value: function updateElement(element, key, value) {
            /** @type {?} */
            var builders = this.updateMap.get(element);

            if (builders) {
              /** @type {?} */
              var updateFn =
              /** @type {?} */
              builders.get(key);

              if (!!updateFn) {
                updateFn(value);
                this.subject.next({
                  element: element,
                  key: key,
                  value: value
                });
              }
            }
          }
          /**
           * release all references to a given element
           * @param {?} element
           * @return {?}
           */

        }, {
          key: "releaseElement",
          value: function releaseElement(element) {
            /** @type {?} */
            var watcherMap = this.watcherMap.get(element);

            if (watcherMap) {
              watcherMap.forEach(
              /**
              * @param {?} s
              * @return {?}
              */
              function (s) {
                return s.unsubscribe();
              });
              this.watcherMap["delete"](element);
            }
            /** @type {?} */


            var elementMap = this.elementMap.get(element);

            if (elementMap) {
              elementMap.forEach(
              /**
              * @param {?} _
              * @param {?} s
              * @return {?}
              */
              function (_, s) {
                return elementMap["delete"](s);
              });
              this.elementMap["delete"](element);
            }
          }
          /**
           * trigger an update for a given element and key (e.g. layout)
           * @param {?} element
           * @param {?=} key
           * @return {?}
           */

        }, {
          key: "triggerUpdate",
          value: function triggerUpdate(element, key) {
            var _this23 = this;

            /** @type {?} */
            var bpMap = this.elementMap.get(element);

            if (bpMap) {
              /** @type {?} */
              var valueMap = this.getActivatedValues(bpMap, key);

              if (valueMap) {
                if (key) {
                  this.updateElement(element, key, valueMap.get(key));
                } else {
                  valueMap.forEach(
                  /**
                  * @param {?} v
                  * @param {?} k
                  * @return {?}
                  */
                  function (v, k) {
                    return _this23.updateElement(element, k, v);
                  });
                }
              }
            }
          }
          /**
           * Cross-reference for HTMLElement with directive key
           * @private
           * @param {?} element
           * @param {?} key
           * @return {?}
           */

        }, {
          key: "buildElementKeyMap",
          value: function buildElementKeyMap(element, key) {
            /** @type {?} */
            var keyMap = this.elementKeyMap.get(element);

            if (!keyMap) {
              keyMap = new Set();
              this.elementKeyMap.set(element, keyMap);
            }

            keyMap.add(key);
          }
          /**
           * Other triggers that should force style updates:
           * - directionality
           * - layout changes
           * - mutationobserver updates
           * @private
           * @param {?} element
           * @param {?} key
           * @param {?} triggers
           * @return {?}
           */

        }, {
          key: "watchExtraTriggers",
          value: function watchExtraTriggers(element, key, triggers) {
            var _this24 = this;

            if (triggers && triggers.length) {
              /** @type {?} */
              var watchers = this.watcherMap.get(element);

              if (!watchers) {
                watchers = new Map();
                this.watcherMap.set(element, watchers);
              }
              /** @type {?} */


              var subscription = watchers.get(key);

              if (!subscription) {
                /** @type {?} */
                var newSubscription = (0, rxjs__WEBPACK_IMPORTED_MODULE_6__.merge).apply(void 0, _toConsumableArray(triggers)).subscribe(
                /**
                * @return {?}
                */
                function () {
                  /** @type {?} */
                  var currentValue = _this24.getValue(element, key);

                  _this24.updateElement(element, key, currentValue);
                });
                watchers.set(key, newSubscription);
              }
            }
          }
          /**
           * Breakpoint locator by mediaQuery
           * @private
           * @param {?} query
           * @return {?}
           */

        }, {
          key: "findByQuery",
          value: function findByQuery(query) {
            return this.breakpoints.findByQuery(query);
          }
          /**
           * get the fallback breakpoint for a given element, starting with the current breakpoint
           * @private
           * @param {?} bpMap
           * @param {?=} key
           * @return {?}
           */

        }, {
          key: "getActivatedValues",
          value: function getActivatedValues(bpMap, key) {
            for (var i = 0; i < this.activatedBreakpoints.length; i++) {
              /** @type {?} */
              var activatedBp = this.activatedBreakpoints[i];
              /** @type {?} */

              var valueMap = bpMap.get(activatedBp.alias);

              if (valueMap) {
                if (key === undefined || valueMap.has(key) && valueMap.get(key) != null) {
                  return valueMap;
                }
              }
            }
            /** @type {?} */


            var lastHope = bpMap.get('');
            return key === undefined || lastHope && lastHope.has(key) ? lastHope : undefined;
          }
          /**
           * Watch for mediaQuery breakpoint activations
           * @private
           * @return {?}
           */

        }, {
          key: "observeActivations",
          value: function observeActivations() {
            /** @type {?} */
            var target =
            /** @type {?} */

            /** @type {?} */
            this;
            /** @type {?} */

            var queries = this.breakpoints.items.map(
            /**
            * @param {?} bp
            * @return {?}
            */
            function (bp) {
              return bp.mediaQuery;
            });
            this.matchMedia.observe(this.hook.withPrintQuery(queries)).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.tap)(this.hook.interceptEvents(target)), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(this.hook.blockPropagation())).subscribe(this.onMediaChange.bind(this));
          }
        }]);

        return _MediaMarshaller;
      }();

      _MediaMarshaller.ɵfac = function MediaMarshaller_Factory(t) {
        return new (t || _MediaMarshaller)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](MatchMedia), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_BreakPointRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_PrintHook));
      };
      /** @nocollapse */


      _MediaMarshaller.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function MediaMarshaller_Factory() {
          return new _MediaMarshaller((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(MatchMedia), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_BreakPointRegistry), (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_PrintHook));
        },
        token: _MediaMarshaller,
        providedIn: "root"
      });
      /** @nocollapse */

      _MediaMarshaller.ctorParameters = function () {
        return [{
          type: MatchMedia
        }, {
          type: _BreakPointRegistry
        }, {
          type: _PrintHook
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_MediaMarshaller, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: MatchMedia
          }, {
            type: _BreakPointRegistry
          }, {
            type: _PrintHook
          }];
        }, null);
      })();
      /**
       * @param {?} map
       * @param {?} element
       * @param {?} key
       * @param {?=} input
       * @return {?}
       */


      function initBuilderMap(map$$1, element, key, input) {
        if (input !== undefined) {
          /** @type {?} */
          var oldMap = map$$1.get(element);

          if (!oldMap) {
            oldMap = new Map();
            map$$1.set(element, oldMap);
          }

          oldMap.set(key, input);
        }
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: core/public-api.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: core/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */
      //# sourceMappingURL=core.js.map

      /***/

    },

    /***/
    8030:
    /*!****************************************************************************!*\
      !*** ./node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/extended.js ***!
      \****************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ExtendedModule": function ExtendedModule() {
          return (
            /* binding */
            _ExtendedModule
          );
        },

        /* harmony export */
        "ClassDirective": function ClassDirective() {
          return (
            /* binding */
            _ClassDirective
          );
        },

        /* harmony export */
        "DefaultClassDirective": function DefaultClassDirective() {
          return (
            /* binding */
            _DefaultClassDirective
          );
        },

        /* harmony export */
        "ImgSrcStyleBuilder": function ImgSrcStyleBuilder() {
          return (
            /* binding */
            _ImgSrcStyleBuilder
          );
        },

        /* harmony export */
        "ImgSrcDirective": function ImgSrcDirective() {
          return (
            /* binding */
            _ImgSrcDirective
          );
        },

        /* harmony export */
        "DefaultImgSrcDirective": function DefaultImgSrcDirective() {
          return (
            /* binding */
            _DefaultImgSrcDirective
          );
        },

        /* harmony export */
        "ShowHideStyleBuilder": function ShowHideStyleBuilder() {
          return (
            /* binding */
            _ShowHideStyleBuilder
          );
        },

        /* harmony export */
        "ShowHideDirective": function ShowHideDirective() {
          return (
            /* binding */
            _ShowHideDirective
          );
        },

        /* harmony export */
        "DefaultShowHideDirective": function DefaultShowHideDirective() {
          return (
            /* binding */
            _DefaultShowHideDirective
          );
        },

        /* harmony export */
        "StyleDirective": function StyleDirective() {
          return (
            /* binding */
            _StyleDirective
          );
        },

        /* harmony export */
        "DefaultStyleDirective": function DefaultStyleDirective() {
          return (
            /* binding */
            _DefaultStyleDirective
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      7716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      8583);
      /* harmony import */


      var _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/flex-layout/core */
      7736);
      /* harmony import */


      var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/cdk/coercion */
      9490);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs/operators */
      6782);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/platform-browser */
      9075);
      /**
       * @license
       * Copyright Google LLC All Rights Reserved.
       *
       * Use of this source code is governed by an MIT-style license that can be
       * found in the LICENSE file at https://angular.io/license
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: extended/img-src/img-src.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _ImgSrcStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_) {
        _inherits(_ImgSrcStyleBuilder, _angular_flex_layout_);

        var _super2 = _createSuper(_ImgSrcStyleBuilder);

        function _ImgSrcStyleBuilder() {
          _classCallCheck(this, _ImgSrcStyleBuilder);

          return _super2.apply(this, arguments);
        }

        _createClass(_ImgSrcStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} url
           * @return {?}
           */
          function buildStyles(url) {
            return {
              'content': url ? "url(".concat(url, ")") : ''
            };
          }
        }]);

        return _ImgSrcStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _ImgSrcStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵImgSrcStyleBuilder_BaseFactory;
        return function ImgSrcStyleBuilder_Factory(t) {
          return (ɵImgSrcStyleBuilder_BaseFactory || (ɵImgSrcStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_ImgSrcStyleBuilder)))(t || _ImgSrcStyleBuilder);
        };
      }();
      /** @nocollapse */


      _ImgSrcStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function ImgSrcStyleBuilder_Factory() {
          return new _ImgSrcStyleBuilder();
        },
        token: _ImgSrcStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_ImgSrcStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var _ImgSrcDirective = /*#__PURE__*/function (_angular_flex_layout_2) {
        _inherits(_ImgSrcDirective, _angular_flex_layout_2);

        var _super3 = _createSuper(_ImgSrcDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         * @param {?} platformId
         * @param {?} serverModuleLoaded
         */
        function _ImgSrcDirective(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {
          var _this25;

          _classCallCheck(this, _ImgSrcDirective);

          _this25 = _super3.call(this, elementRef, styleBuilder, styler, marshal);
          _this25.platformId = platformId;
          _this25.serverModuleLoaded = serverModuleLoaded;
          _this25.DIRECTIVE_KEY = 'img-src';
          _this25.defaultSrc = '';
          _this25.styleCache = imgSrcCache;

          _this25.init();

          _this25.setValue(_this25.nativeElement.getAttribute('src') || '', '');

          if ((0, _angular_common__WEBPACK_IMPORTED_MODULE_2__.isPlatformServer)(_this25.platformId) && _this25.serverModuleLoaded) {
            _this25.nativeElement.setAttribute('src', '');
          }

          return _this25;
        }
        /**
         * @param {?} val
         * @return {?}
         */


        _createClass(_ImgSrcDirective, [{
          key: "src",
          set: function set(val) {
            this.defaultSrc = val;
            this.setValue(this.defaultSrc, '');
          }
          /**
           * Use the [responsively] activated input value to update
           * the host img src attribute or assign a default `img.src=''`
           * if the src has not been defined.
           *
           * Do nothing to standard `<img src="">` usages, only when responsive
           * keys are present do we actually call `setAttribute()`
           * @protected
           * @param {?=} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            /** @type {?} */
            var url = value || this.defaultSrc;

            if ((0, _angular_common__WEBPACK_IMPORTED_MODULE_2__.isPlatformServer)(this.platformId) && this.serverModuleLoaded) {
              this.addStyles(url);
            } else {
              this.nativeElement.setAttribute('src', url);
            }
          }
        }]);

        return _ImgSrcDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _ImgSrcDirective.ɵfac = function ImgSrcDirective_Factory(t) {
        return new (t || _ImgSrcDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ImgSrcStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN));
      };

      _ImgSrcDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _ImgSrcDirective,
        inputs: {
          src: "src"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _ImgSrcDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _ImgSrcStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
          }]
        }, {
          type: Boolean,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
          }]
        }];
      };

      _ImgSrcDirective.propDecorators = {
        src: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['src']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_ImgSrcDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _ImgSrcStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
            }]
          }, {
            type: Boolean,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
            }]
          }];
        }, {
          src: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['src']
          }]
        });
      })();
      /** @type {?} */


      var imgSrcCache = new Map();
      /** @type {?} */

      var inputs = ['src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl', 'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl', 'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'];
      /** @type {?} */

      var selector = "\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n";
      /**
       * This directive provides a responsive API for the HTML <img> 'src' attribute
       * and will update the img.src property upon each responsive activation.
       *
       * e.g.
       *      <img src="defaultScene.jpg" src.xs="mobileScene.jpg"></img>
       *
       * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/
       */

      var _DefaultImgSrcDirective = /*#__PURE__*/function (_ImgSrcDirective2) {
        _inherits(_DefaultImgSrcDirective, _ImgSrcDirective2);

        var _super4 = _createSuper(_DefaultImgSrcDirective);

        function _DefaultImgSrcDirective() {
          var _this26;

          _classCallCheck(this, _DefaultImgSrcDirective);

          _this26 = _super4.apply(this, arguments);
          _this26.inputs = inputs;
          return _this26;
        }

        return _DefaultImgSrcDirective;
      }(_ImgSrcDirective);

      _DefaultImgSrcDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultImgSrcDirective_BaseFactory;
        return function DefaultImgSrcDirective_Factory(t) {
          return (ɵDefaultImgSrcDirective_BaseFactory || (ɵDefaultImgSrcDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultImgSrcDirective)))(t || _DefaultImgSrcDirective);
        };
      }();

      _DefaultImgSrcDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultImgSrcDirective,
        selectors: [["img", "src.xs", ""], ["img", "src.sm", ""], ["img", "src.md", ""], ["img", "src.lg", ""], ["img", "src.xl", ""], ["img", "src.lt-sm", ""], ["img", "src.lt-md", ""], ["img", "src.lt-lg", ""], ["img", "src.lt-xl", ""], ["img", "src.gt-xs", ""], ["img", "src.gt-sm", ""], ["img", "src.gt-md", ""], ["img", "src.gt-lg", ""]],
        inputs: {
          "src.xs": "src.xs",
          "src.sm": "src.sm",
          "src.md": "src.md",
          "src.lg": "src.lg",
          "src.xl": "src.xl",
          "src.lt-sm": "src.lt-sm",
          "src.lt-md": "src.lt-md",
          "src.lt-lg": "src.lt-lg",
          "src.lt-xl": "src.lt-xl",
          "src.gt-xs": "src.gt-xs",
          "src.gt-sm": "src.gt-sm",
          "src.gt-md": "src.gt-md",
          "src.gt-lg": "src.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultImgSrcDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector,
            inputs: inputs
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: extended/class/class.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _ClassDirective = /*#__PURE__*/function (_angular_flex_layout_3) {
        _inherits(_ClassDirective, _angular_flex_layout_3);

        var _super5 = _createSuper(_ClassDirective);

        /**
         * @param {?} elementRef
         * @param {?} styler
         * @param {?} marshal
         * @param {?} iterableDiffers
         * @param {?} keyValueDiffers
         * @param {?} renderer2
         * @param {?} ngClassInstance
         */
        function _ClassDirective(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {
          var _this27;

          _classCallCheck(this, _ClassDirective);

          _this27 = _super5.call(this, elementRef,
          /** @type {?} */
          null, styler, marshal);
          _this27.ngClassInstance = ngClassInstance;
          _this27.DIRECTIVE_KEY = 'ngClass';

          if (!_this27.ngClassInstance) {
            // Create an instance NgClass Directive instance only if `ngClass=""` has NOT been defined on
            // the same host element; since the responsive variations may be defined...
            _this27.ngClassInstance = new _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);
          }

          _this27.init();

          _this27.setValue('', '');

          return _this27;
        }
        /**
         * Capture class assignments so we cache the default classes
         * which are merged with activated styles and used as fallbacks.
         * @param {?} val
         * @return {?}
         */


        _createClass(_ClassDirective, [{
          key: "klass",
          set: function set(val) {
            this.ngClassInstance.klass = val;
            this.setValue(val, '');
          }
          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.ngClassInstance.ngClass = value;
            this.ngClassInstance.ngDoCheck();
          } // ******************************************************************
          // Lifecycle Hooks
          // ******************************************************************

          /**
           * For ChangeDetectionStrategy.onPush and ngOnChanges() updates
           * @return {?}
           */

        }, {
          key: "ngDoCheck",
          value: function ngDoCheck() {
            this.ngClassInstance.ngDoCheck();
          }
        }]);

        return _ClassDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _ClassDirective.ɵfac = function ClassDirective_Factory(t) {
        return new (t || _ClassDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDiffers), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgClass, 10));
      };

      _ClassDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _ClassDirective,
        inputs: {
          klass: ["class", "klass"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _ClassDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDiffers
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2
        }, {
          type: _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgClass,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Self
          }]
        }];
      };

      _ClassDirective.propDecorators = {
        klass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['class']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_ClassDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDiffers
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2
          }, {
            type: _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgClass,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Self
            }]
          }];
        }, {
          klass: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['class']
          }]
        });
      })();
      /** @type {?} */


      var inputs$1 = ['ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl', 'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl', 'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'];
      /** @type {?} */

      var selector$1 = "\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n";
      /**
       * Directive to add responsive support for ngClass.
       * This maintains the core functionality of 'ngClass' and adds responsive API
       * Note: this class is a no-op when rendered on the server
       */

      var _DefaultClassDirective = /*#__PURE__*/function (_ClassDirective2) {
        _inherits(_DefaultClassDirective, _ClassDirective2);

        var _super6 = _createSuper(_DefaultClassDirective);

        function _DefaultClassDirective() {
          var _this28;

          _classCallCheck(this, _DefaultClassDirective);

          _this28 = _super6.apply(this, arguments);
          _this28.inputs = inputs$1;
          return _this28;
        }

        return _DefaultClassDirective;
      }(_ClassDirective);

      _DefaultClassDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultClassDirective_BaseFactory;
        return function DefaultClassDirective_Factory(t) {
          return (ɵDefaultClassDirective_BaseFactory || (ɵDefaultClassDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultClassDirective)))(t || _DefaultClassDirective);
        };
      }();

      _DefaultClassDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultClassDirective,
        selectors: [["", "ngClass", ""], ["", "ngClass.xs", ""], ["", "ngClass.sm", ""], ["", "ngClass.md", ""], ["", "ngClass.lg", ""], ["", "ngClass.xl", ""], ["", "ngClass.lt-sm", ""], ["", "ngClass.lt-md", ""], ["", "ngClass.lt-lg", ""], ["", "ngClass.lt-xl", ""], ["", "ngClass.gt-xs", ""], ["", "ngClass.gt-sm", ""], ["", "ngClass.gt-md", ""], ["", "ngClass.gt-lg", ""]],
        inputs: {
          ngClass: "ngClass",
          "ngClass.xs": "ngClass.xs",
          "ngClass.sm": "ngClass.sm",
          "ngClass.md": "ngClass.md",
          "ngClass.lg": "ngClass.lg",
          "ngClass.xl": "ngClass.xl",
          "ngClass.lt-sm": "ngClass.lt-sm",
          "ngClass.lt-md": "ngClass.lt-md",
          "ngClass.lt-lg": "ngClass.lt-lg",
          "ngClass.lt-xl": "ngClass.lt-xl",
          "ngClass.gt-xs": "ngClass.gt-xs",
          "ngClass.gt-sm": "ngClass.gt-sm",
          "ngClass.gt-md": "ngClass.gt-md",
          "ngClass.gt-lg": "ngClass.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultClassDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$1,
            inputs: inputs$1
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: extended/show-hide/show-hide.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _ShowHideStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_4) {
        _inherits(_ShowHideStyleBuilder, _angular_flex_layout_4);

        var _super7 = _createSuper(_ShowHideStyleBuilder);

        function _ShowHideStyleBuilder() {
          _classCallCheck(this, _ShowHideStyleBuilder);

          return _super7.apply(this, arguments);
        }

        _createClass(_ShowHideStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} show
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(show, parent) {
            /** @type {?} */
            var shouldShow = show === 'true';
            return {
              'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none'
            };
          }
        }]);

        return _ShowHideStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _ShowHideStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵShowHideStyleBuilder_BaseFactory;
        return function ShowHideStyleBuilder_Factory(t) {
          return (ɵShowHideStyleBuilder_BaseFactory || (ɵShowHideStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_ShowHideStyleBuilder)))(t || _ShowHideStyleBuilder);
        };
      }();
      /** @nocollapse */


      _ShowHideStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function ShowHideStyleBuilder_Factory() {
          return new _ShowHideStyleBuilder();
        },
        token: _ShowHideStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_ShowHideStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var _ShowHideDirective = /*#__PURE__*/function (_angular_flex_layout_5) {
        _inherits(_ShowHideDirective, _angular_flex_layout_5);

        var _super8 = _createSuper(_ShowHideDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         * @param {?} layoutConfig
         * @param {?} platformId
         * @param {?} serverModuleLoaded
         */
        function _ShowHideDirective(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {
          var _this29;

          _classCallCheck(this, _ShowHideDirective);

          _this29 = _super8.call(this, elementRef, styleBuilder, styler, marshal);
          _this29.layoutConfig = layoutConfig;
          _this29.platformId = platformId;
          _this29.serverModuleLoaded = serverModuleLoaded;
          _this29.DIRECTIVE_KEY = 'show-hide';
          /**
           * Original DOM Element CSS display style
           */

          _this29.display = '';
          _this29.hasLayout = false;
          _this29.hasFlexChild = false;
          return _this29;
        } // *********************************************
        // Lifecycle Methods
        // *********************************************

        /**
         * @return {?}
         */


        _createClass(_ShowHideDirective, [{
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            this.trackExtraTriggers();
            /** @type {?} */

            var children = Array.from(this.nativeElement.children);

            for (var i = 0; i < children.length; i++) {
              if (this.marshal.hasValue(
              /** @type {?} */
              children[i], 'flex')) {
                this.hasFlexChild = true;
                break;
              }
            }

            if (DISPLAY_MAP.has(this.nativeElement)) {
              this.display =
              /** @type {?} */
              DISPLAY_MAP.get(this.nativeElement);
            } else {
              this.display = this.getDisplayStyle();
              DISPLAY_MAP.set(this.nativeElement, this.display);
            }

            this.init(); // set the default to show unless explicitly overridden

            /** @type {?} */

            var defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');

            if (defaultValue === undefined || defaultValue === '') {
              this.setValue(true, '');
            } else {
              this.triggerUpdate();
            }
          }
          /**
           * On changes to any \@Input properties...
           * Default to use the non-responsive Input value ('fxShow')
           * Then conditionally override with the mq-activated Input's current value
           * @param {?} changes
           * @return {?}
           */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            var _this30 = this;

            Object.keys(changes).forEach(
            /**
            * @param {?} key
            * @return {?}
            */
            function (key) {
              if (_this30.inputs.indexOf(key) !== -1) {
                /** @type {?} */
                var inputKey = key.split('.');
                /** @type {?} */

                var bp = inputKey.slice(1).join('.');
                /** @type {?} */

                var inputValue = changes[key].currentValue;
                /** @type {?} */

                var shouldShow = inputValue !== '' ? inputValue !== 0 ? (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__.coerceBooleanProperty)(inputValue) : false : true;

                if (inputKey[0] === 'fxHide') {
                  shouldShow = !shouldShow;
                }

                _this30.setValue(shouldShow, bp);
              }
            });
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           *  Watch for these extra triggers to update fxShow, fxHide stylings
           * @protected
           * @return {?}
           */

        }, {
          key: "trackExtraTriggers",
          value: function trackExtraTriggers() {
            var _this31 = this;

            this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');
            ['layout', 'layout-align'].forEach(
            /**
            * @param {?} key
            * @return {?}
            */
            function (key) {
              _this31.marshal.trackValue(_this31.nativeElement, key).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.takeUntil)(_this31.destroySubject)).subscribe(_this31.triggerUpdate.bind(_this31));
            });
          }
          /**
           * Override accessor to the current HTMLElement's `display` style
           * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'
           * unless it was already explicitly specified inline or in a CSS stylesheet.
           * @protected
           * @return {?}
           */

        }, {
          key: "getDisplayStyle",
          value: function getDisplayStyle() {
            return this.hasLayout || this.hasFlexChild && this.layoutConfig.addFlexToParent ? 'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);
          }
          /**
           * Validate the visibility value and then update the host's inline display style
           * @protected
           * @param {?=} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue() {
            var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            if (value === '') {
              return;
            }
            /** @type {?} */


            var isServer = (0, _angular_common__WEBPACK_IMPORTED_MODULE_2__.isPlatformServer)(this.platformId);
            this.addStyles(value ? 'true' : 'false', {
              display: this.display,
              isServer: isServer
            });

            if (isServer && this.serverModuleLoaded) {
              this.nativeElement.style.setProperty('display', '');
            }

            this.marshal.triggerUpdate(
            /** @type {?} */
            this.parentElement, 'layout-gap');
          }
        }]);

        return _ShowHideDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _ShowHideDirective.ɵfac = function ShowHideDirective_Factory(t) {
        return new (t || _ShowHideDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ShowHideStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN));
      };

      _ShowHideDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _ShowHideDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]]
      });
      /** @nocollapse */

      _ShowHideDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _ShowHideStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG]
          }]
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
          }]
        }, {
          type: Boolean,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_ShowHideDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _ShowHideStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG]
            }]
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
            }]
          }, {
            type: Boolean,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
            }]
          }];
        }, null);
      })();
      /** @type {?} */


      var DISPLAY_MAP = new WeakMap();
      /** @type {?} */

      var inputs$2 = ['fxShow', 'fxShow.print', 'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl', 'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl', 'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg', 'fxHide', 'fxHide.print', 'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl', 'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl', 'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'];
      /** @type {?} */

      var selector$2 = "\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n";
      /**
       * 'show' Layout API directive
       */

      var _DefaultShowHideDirective = /*#__PURE__*/function (_ShowHideDirective2) {
        _inherits(_DefaultShowHideDirective, _ShowHideDirective2);

        var _super9 = _createSuper(_DefaultShowHideDirective);

        function _DefaultShowHideDirective() {
          var _this32;

          _classCallCheck(this, _DefaultShowHideDirective);

          _this32 = _super9.apply(this, arguments);
          _this32.inputs = inputs$2;
          return _this32;
        }

        return _DefaultShowHideDirective;
      }(_ShowHideDirective);

      _DefaultShowHideDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultShowHideDirective_BaseFactory;
        return function DefaultShowHideDirective_Factory(t) {
          return (ɵDefaultShowHideDirective_BaseFactory || (ɵDefaultShowHideDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultShowHideDirective)))(t || _DefaultShowHideDirective);
        };
      }();

      _DefaultShowHideDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultShowHideDirective,
        selectors: [["", "fxShow", ""], ["", "fxShow.print", ""], ["", "fxShow.xs", ""], ["", "fxShow.sm", ""], ["", "fxShow.md", ""], ["", "fxShow.lg", ""], ["", "fxShow.xl", ""], ["", "fxShow.lt-sm", ""], ["", "fxShow.lt-md", ""], ["", "fxShow.lt-lg", ""], ["", "fxShow.lt-xl", ""], ["", "fxShow.gt-xs", ""], ["", "fxShow.gt-sm", ""], ["", "fxShow.gt-md", ""], ["", "fxShow.gt-lg", ""], ["", "fxHide", ""], ["", "fxHide.print", ""], ["", "fxHide.xs", ""], ["", "fxHide.sm", ""], ["", "fxHide.md", ""], ["", "fxHide.lg", ""], ["", "fxHide.xl", ""], ["", "fxHide.lt-sm", ""], ["", "fxHide.lt-md", ""], ["", "fxHide.lt-lg", ""], ["", "fxHide.lt-xl", ""], ["", "fxHide.gt-xs", ""], ["", "fxHide.gt-sm", ""], ["", "fxHide.gt-md", ""], ["", "fxHide.gt-lg", ""]],
        inputs: {
          fxShow: "fxShow",
          "fxShow.print": "fxShow.print",
          "fxShow.xs": "fxShow.xs",
          "fxShow.sm": "fxShow.sm",
          "fxShow.md": "fxShow.md",
          "fxShow.lg": "fxShow.lg",
          "fxShow.xl": "fxShow.xl",
          "fxShow.lt-sm": "fxShow.lt-sm",
          "fxShow.lt-md": "fxShow.lt-md",
          "fxShow.lt-lg": "fxShow.lt-lg",
          "fxShow.lt-xl": "fxShow.lt-xl",
          "fxShow.gt-xs": "fxShow.gt-xs",
          "fxShow.gt-sm": "fxShow.gt-sm",
          "fxShow.gt-md": "fxShow.gt-md",
          "fxShow.gt-lg": "fxShow.gt-lg",
          fxHide: "fxHide",
          "fxHide.print": "fxHide.print",
          "fxHide.xs": "fxHide.xs",
          "fxHide.sm": "fxHide.sm",
          "fxHide.md": "fxHide.md",
          "fxHide.lg": "fxHide.lg",
          "fxHide.xl": "fxHide.xl",
          "fxHide.lt-sm": "fxHide.lt-sm",
          "fxHide.lt-md": "fxHide.lt-md",
          "fxHide.lt-lg": "fxHide.lt-lg",
          "fxHide.lt-xl": "fxHide.lt-xl",
          "fxHide.gt-xs": "fxHide.gt-xs",
          "fxHide.gt-sm": "fxHide.gt-sm",
          "fxHide.gt-md": "fxHide.gt-md",
          "fxHide.gt-lg": "fxHide.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultShowHideDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$2,
            inputs: inputs$2
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: extended/style/style-transforms.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * NgStyle allowed inputs
       */


      var NgStyleKeyValue =
      /**
       * @param {?} key
       * @param {?} value
       * @param {?=} noQuotes
       */
      function NgStyleKeyValue(key, value) {
        var noQuotes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

        _classCallCheck(this, NgStyleKeyValue);

        this.key = key;
        this.value = value;
        this.key = noQuotes ? key.replace(/['"]/g, '').trim() : key.trim();
        this.value = noQuotes ? value.replace(/['"]/g, '').trim() : value.trim();
        this.value = this.value.replace(/;/, '');
      };
      /**
       * @param {?} target
       * @return {?}
       */


      function getType(target) {
        /** @type {?} */
        var what = typeof target;

        if (what === 'object') {
          return target.constructor === Array ? 'array' : target.constructor === Set ? 'set' : 'object';
        }

        return what;
      }
      /**
       * Split string of key:value pairs into Array of k-v pairs
       * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]
       * @param {?} source
       * @param {?=} delimiter
       * @return {?}
       */


      function buildRawList(source) {
        var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ';';
        return String(source).trim().split(delimiter).map(
        /**
        * @param {?} val
        * @return {?}
        */
        function (val) {
          return val.trim();
        }).filter(
        /**
        * @param {?} val
        * @return {?}
        */
        function (val) {
          return val !== '';
        });
      }
      /**
       * Convert array of key:value strings to a iterable map object
       * @param {?} styles
       * @param {?=} sanitize
       * @return {?}
       */


      function buildMapFromList(styles, sanitize) {
        /** @type {?} */
        var sanitizeValue =
        /**
        * @param {?} it
        * @return {?}
        */
        function sanitizeValue(it) {
          if (sanitize) {
            it.value = sanitize(it.value);
          }

          return it;
        };

        return styles.map(stringToKeyValue).filter(
        /**
        * @param {?} entry
        * @return {?}
        */
        function (entry) {
          return !!entry;
        }).map(sanitizeValue).reduce(keyValuesToMap,
        /** @type {?} */
        {});
      }
      /**
       * Convert Set<string> or raw Object to an iterable NgStyleMap
       * @param {?} source
       * @param {?=} sanitize
       * @return {?}
       */


      function buildMapFromSet(source, sanitize) {
        /** @type {?} */
        var list = [];

        if (getType(source) === 'set') {
          /** @type {?} */
          source.forEach(
          /**
          * @param {?} entry
          * @return {?}
          */
          function (entry) {
            return list.push(entry);
          });
        } else {
          Object.keys(source).forEach(
          /**
          * @param {?} key
          * @return {?}
          */
          function (key) {
            list.push("".concat(key, ":").concat(
            /** @type {?} */
            source[key]));
          });
        }

        return buildMapFromList(list, sanitize);
      }
      /**
       * Convert 'key:value' -> [key, value]
       * @param {?} it
       * @return {?}
       */


      function stringToKeyValue(it) {
        var _it$split = it.split(':'),
            _it$split2 = _toArray(_it$split),
            key = _it$split2[0],
            vals = _it$split2.slice(1);

        return new NgStyleKeyValue(key, vals.join(':'));
      }
      /**
       * Convert [ [key,value] ] -> { key : value }
       * @param {?} map
       * @param {?} entry
       * @return {?}
       */


      function keyValuesToMap(map, entry) {
        if (!!entry.key) {
          map[entry.key] = entry.value;
        }

        return map;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: extended/style/style.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _StyleDirective = /*#__PURE__*/function (_angular_flex_layout_6) {
        _inherits(_StyleDirective, _angular_flex_layout_6);

        var _super10 = _createSuper(_StyleDirective);

        /**
         * @param {?} elementRef
         * @param {?} styler
         * @param {?} marshal
         * @param {?} sanitizer
         * @param {?} differs
         * @param {?} renderer2
         * @param {?} ngStyleInstance
         * @param {?} serverLoaded
         * @param {?} platformId
         */
        function _StyleDirective(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {
          var _this33;

          _classCallCheck(this, _StyleDirective);

          _this33 = _super10.call(this, elementRef,
          /** @type {?} */
          null, styler, marshal);
          _this33.sanitizer = sanitizer;
          _this33.ngStyleInstance = ngStyleInstance;
          _this33.DIRECTIVE_KEY = 'ngStyle';

          if (!_this33.ngStyleInstance) {
            // Create an instance NgStyle Directive instance only if `ngStyle=""` has NOT been
            // defined on the same host element; since the responsive variations may be defined...
            _this33.ngStyleInstance = new _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgStyle(elementRef, differs, renderer2);
          }

          _this33.init();
          /** @type {?} */


          var styles = _this33.nativeElement.getAttribute('style') || '';
          _this33.fallbackStyles = _this33.buildStyleMap(styles);
          _this33.isServer = serverLoaded && (0, _angular_common__WEBPACK_IMPORTED_MODULE_2__.isPlatformServer)(platformId);
          return _this33;
        }
        /**
         * Add generated styles
         * @protected
         * @param {?} value
         * @return {?}
         */


        _createClass(_StyleDirective, [{
          key: "updateWithValue",
          value: function updateWithValue(value) {
            /** @type {?} */
            var styles = this.buildStyleMap(value);
            this.ngStyleInstance.ngStyle = Object.assign(Object.assign({}, this.fallbackStyles), styles);

            if (this.isServer) {
              this.applyStyleToElement(styles);
            }

            this.ngStyleInstance.ngDoCheck();
          }
          /**
           * Remove generated styles
           * @protected
           * @return {?}
           */

        }, {
          key: "clearStyles",
          value: function clearStyles() {
            this.ngStyleInstance.ngStyle = this.fallbackStyles;
            this.ngStyleInstance.ngDoCheck();
          }
          /**
           * Convert raw strings to ngStyleMap; which is required by ngStyle
           * NOTE: Raw string key-value pairs MUST be delimited by `;`
           *       Comma-delimiters are not supported due to complexities of
           *       possible style values such as `rgba(x,x,x,x)` and others
           * @protected
           * @param {?} styles
           * @return {?}
           */

        }, {
          key: "buildStyleMap",
          value: function buildStyleMap(styles) {
            var _this34 = this;

            // Always safe-guard (aka sanitize) style property values

            /** @type {?} */
            var sanitizer =
            /**
            * @param {?} val
            * @return {?}
            */
            function sanitizer(val) {
              return _this34.sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_1__.SecurityContext.STYLE, val) || '';
            };

            if (styles) {
              switch (getType(styles)) {
                case 'string':
                  return buildMapFromList$1(buildRawList(styles), sanitizer);

                case 'array':
                  return buildMapFromList$1(
                  /** @type {?} */
                  styles, sanitizer);

                case 'set':
                  return buildMapFromSet(styles, sanitizer);

                default:
                  return buildMapFromSet(styles, sanitizer);
              }
            }

            return {};
          } // ******************************************************************
          // Lifecycle Hooks
          // ******************************************************************

          /**
           * For ChangeDetectionStrategy.onPush and ngOnChanges() updates
           * @return {?}
           */

        }, {
          key: "ngDoCheck",
          value: function ngDoCheck() {
            this.ngStyleInstance.ngDoCheck();
          }
        }]);

        return _StyleDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _StyleDirective.ɵfac = function StyleDirective_Factory(t) {
        return new (t || _StyleDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__.DomSanitizer), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgStyle, 10), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID));
      };

      _StyleDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _StyleDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _StyleDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }, {
          type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__.DomSanitizer
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2
        }, {
          type: _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgStyle,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Self
          }]
        }, {
          type: Boolean,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
          }]
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_StyleDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }, {
            type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__.DomSanitizer
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.KeyValueDiffers
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2
          }, {
            type: _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgStyle,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Self
            }]
          }, {
            type: Boolean,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
            }]
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID]
            }]
          }];
        }, null);
      })();
      /** @type {?} */


      var inputs$3 = ['ngStyle', 'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl', 'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl', 'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'];
      /** @type {?} */

      var selector$3 = "\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n";
      /**
       * Directive to add responsive support for ngStyle.
       *
       */

      var _DefaultStyleDirective = /*#__PURE__*/function (_StyleDirective2) {
        _inherits(_DefaultStyleDirective, _StyleDirective2);

        var _super11 = _createSuper(_DefaultStyleDirective);

        function _DefaultStyleDirective() {
          var _this35;

          _classCallCheck(this, _DefaultStyleDirective);

          _this35 = _super11.apply(this, arguments);
          _this35.inputs = inputs$3;
          return _this35;
        }

        return _DefaultStyleDirective;
      }(_StyleDirective);

      _DefaultStyleDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultStyleDirective_BaseFactory;
        return function DefaultStyleDirective_Factory(t) {
          return (ɵDefaultStyleDirective_BaseFactory || (ɵDefaultStyleDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultStyleDirective)))(t || _DefaultStyleDirective);
        };
      }();

      _DefaultStyleDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultStyleDirective,
        selectors: [["", "ngStyle", ""], ["", "ngStyle.xs", ""], ["", "ngStyle.sm", ""], ["", "ngStyle.md", ""], ["", "ngStyle.lg", ""], ["", "ngStyle.xl", ""], ["", "ngStyle.lt-sm", ""], ["", "ngStyle.lt-md", ""], ["", "ngStyle.lt-lg", ""], ["", "ngStyle.lt-xl", ""], ["", "ngStyle.gt-xs", ""], ["", "ngStyle.gt-sm", ""], ["", "ngStyle.gt-md", ""], ["", "ngStyle.gt-lg", ""]],
        inputs: {
          ngStyle: "ngStyle",
          "ngStyle.xs": "ngStyle.xs",
          "ngStyle.sm": "ngStyle.sm",
          "ngStyle.md": "ngStyle.md",
          "ngStyle.lg": "ngStyle.lg",
          "ngStyle.xl": "ngStyle.xl",
          "ngStyle.lt-sm": "ngStyle.lt-sm",
          "ngStyle.lt-md": "ngStyle.lt-md",
          "ngStyle.lt-lg": "ngStyle.lt-lg",
          "ngStyle.lt-xl": "ngStyle.lt-xl",
          "ngStyle.gt-xs": "ngStyle.gt-xs",
          "ngStyle.gt-sm": "ngStyle.gt-sm",
          "ngStyle.gt-md": "ngStyle.gt-md",
          "ngStyle.gt-lg": "ngStyle.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultStyleDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$3,
            inputs: inputs$3
          }]
        }], null, null);
      })();
      /**
       * Build a styles map from a list of styles, while sanitizing bad values first
       * @param {?} styles
       * @param {?=} sanitize
       * @return {?}
       */


      function buildMapFromList$1(styles, sanitize) {
        /** @type {?} */
        var sanitizeValue =
        /**
        * @param {?} it
        * @return {?}
        */
        function sanitizeValue(it) {
          if (sanitize) {
            it.value = sanitize(it.value);
          }

          return it;
        };

        return styles.map(stringToKeyValue).filter(
        /**
        * @param {?} entry
        * @return {?}
        */
        function (entry) {
          return !!entry;
        }).map(sanitizeValue).reduce(keyValuesToMap,
        /** @type {?} */
        {});
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: extended/module.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var ALL_DIRECTIVES = [_DefaultShowHideDirective, _DefaultClassDirective, _DefaultStyleDirective, _DefaultImgSrcDirective];
      /**
       * *****************************************************************
       * Define module for the Extended API
       * *****************************************************************
       */

      var _ExtendedModule = function _ExtendedModule() {
        _classCallCheck(this, _ExtendedModule);
      };

      _ExtendedModule.ɵfac = function ExtendedModule_Factory(t) {
        return new (t || _ExtendedModule)();
      };

      _ExtendedModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: _ExtendedModule
      });
      _ExtendedModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        imports: [[_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_ExtendedModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
          args: [{
            imports: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule],
            declarations: [].concat(ALL_DIRECTIVES),
            exports: [].concat(ALL_DIRECTIVES)
          }]
        }], null, null);
      })();

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](_ExtendedModule, {
          declarations: function declarations() {
            return [_DefaultShowHideDirective, _DefaultClassDirective, _DefaultStyleDirective, _DefaultImgSrcDirective];
          },
          imports: function imports() {
            return [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule];
          },
          exports: function exports() {
            return [_DefaultShowHideDirective, _DefaultClassDirective, _DefaultStyleDirective, _DefaultImgSrcDirective];
          }
        });
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: extended/public-api.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: extended/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */
      //# sourceMappingURL=extended.js.map

      /***/

    },

    /***/
    5830:
    /*!*******************************************************************************!*\
      !*** ./node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/flex-layout.js ***!
      \*******************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ɵMatchMedia": function ɵMatchMedia() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__["ɵMatchMedia"]
          );
        },

        /* harmony export */
        "ɵMockMatchMedia": function ɵMockMatchMedia() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__["ɵMockMatchMedia"]
          );
        },

        /* harmony export */
        "ɵMockMatchMediaProvider": function ɵMockMatchMediaProvider() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__["ɵMockMatchMediaProvider"]
          );
        },

        /* harmony export */
        "CoreModule": function CoreModule() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule
          );
        },

        /* harmony export */
        "removeStyles": function removeStyles() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.removeStyles
          );
        },

        /* harmony export */
        "BROWSER_PROVIDER": function BROWSER_PROVIDER() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BROWSER_PROVIDER
          );
        },

        /* harmony export */
        "CLASS_NAME": function CLASS_NAME() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CLASS_NAME
          );
        },

        /* harmony export */
        "MediaChange": function MediaChange() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaChange
          );
        },

        /* harmony export */
        "StylesheetMap": function StylesheetMap() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StylesheetMap
          );
        },

        /* harmony export */
        "DEFAULT_CONFIG": function DEFAULT_CONFIG() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CONFIG
          );
        },

        /* harmony export */
        "LAYOUT_CONFIG": function LAYOUT_CONFIG() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG
          );
        },

        /* harmony export */
        "SERVER_TOKEN": function SERVER_TOKEN() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN
          );
        },

        /* harmony export */
        "BREAKPOINT": function BREAKPOINT() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BREAKPOINT
          );
        },

        /* harmony export */
        "mergeAlias": function mergeAlias() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.mergeAlias
          );
        },

        /* harmony export */
        "BaseDirective2": function BaseDirective2() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2
          );
        },

        /* harmony export */
        "DEFAULT_BREAKPOINTS": function DEFAULT_BREAKPOINTS() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_BREAKPOINTS
          );
        },

        /* harmony export */
        "ScreenTypes": function ScreenTypes() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTypes
          );
        },

        /* harmony export */
        "ORIENTATION_BREAKPOINTS": function ORIENTATION_BREAKPOINTS() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.ORIENTATION_BREAKPOINTS
          );
        },

        /* harmony export */
        "BreakPointRegistry": function BreakPointRegistry() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BreakPointRegistry
          );
        },

        /* harmony export */
        "BREAKPOINTS": function BREAKPOINTS() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BREAKPOINTS
          );
        },

        /* harmony export */
        "MediaObserver": function MediaObserver() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaObserver
          );
        },

        /* harmony export */
        "MediaTrigger": function MediaTrigger() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaTrigger
          );
        },

        /* harmony export */
        "sortDescendingPriority": function sortDescendingPriority() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.sortDescendingPriority
          );
        },

        /* harmony export */
        "sortAscendingPriority": function sortAscendingPriority() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.sortAscendingPriority
          );
        },

        /* harmony export */
        "coerceArray": function coerceArray() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.coerceArray
          );
        },

        /* harmony export */
        "StyleUtils": function StyleUtils() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          );
        },

        /* harmony export */
        "StyleBuilder": function StyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder
          );
        },

        /* harmony export */
        "validateBasis": function validateBasis() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.validateBasis
          );
        },

        /* harmony export */
        "MediaMarshaller": function MediaMarshaller() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          );
        },

        /* harmony export */
        "BREAKPOINT_PRINT": function BREAKPOINT_PRINT() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BREAKPOINT_PRINT
          );
        },

        /* harmony export */
        "PrintHook": function PrintHook() {
          return (
            /* reexport safe */
            _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.PrintHook
          );
        },

        /* harmony export */
        "ExtendedModule": function ExtendedModule() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ExtendedModule
          );
        },

        /* harmony export */
        "ClassDirective": function ClassDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ClassDirective
          );
        },

        /* harmony export */
        "DefaultClassDirective": function DefaultClassDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.DefaultClassDirective
          );
        },

        /* harmony export */
        "ImgSrcStyleBuilder": function ImgSrcStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ImgSrcStyleBuilder
          );
        },

        /* harmony export */
        "ImgSrcDirective": function ImgSrcDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ImgSrcDirective
          );
        },

        /* harmony export */
        "DefaultImgSrcDirective": function DefaultImgSrcDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.DefaultImgSrcDirective
          );
        },

        /* harmony export */
        "ShowHideStyleBuilder": function ShowHideStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ShowHideStyleBuilder
          );
        },

        /* harmony export */
        "ShowHideDirective": function ShowHideDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ShowHideDirective
          );
        },

        /* harmony export */
        "DefaultShowHideDirective": function DefaultShowHideDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.DefaultShowHideDirective
          );
        },

        /* harmony export */
        "StyleDirective": function StyleDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.StyleDirective
          );
        },

        /* harmony export */
        "DefaultStyleDirective": function DefaultStyleDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.DefaultStyleDirective
          );
        },

        /* harmony export */
        "FlexModule": function FlexModule() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexModule
          );
        },

        /* harmony export */
        "FlexStyleBuilder": function FlexStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexStyleBuilder
          );
        },

        /* harmony export */
        "FlexDirective": function FlexDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexDirective
          );
        },

        /* harmony export */
        "DefaultFlexDirective": function DefaultFlexDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.DefaultFlexDirective
          );
        },

        /* harmony export */
        "FlexAlignStyleBuilder": function FlexAlignStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexAlignStyleBuilder
          );
        },

        /* harmony export */
        "FlexAlignDirective": function FlexAlignDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexAlignDirective
          );
        },

        /* harmony export */
        "DefaultFlexAlignDirective": function DefaultFlexAlignDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.DefaultFlexAlignDirective
          );
        },

        /* harmony export */
        "FlexFillStyleBuilder": function FlexFillStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexFillStyleBuilder
          );
        },

        /* harmony export */
        "FlexFillDirective": function FlexFillDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexFillDirective
          );
        },

        /* harmony export */
        "FlexOffsetStyleBuilder": function FlexOffsetStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexOffsetStyleBuilder
          );
        },

        /* harmony export */
        "FlexOffsetDirective": function FlexOffsetDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexOffsetDirective
          );
        },

        /* harmony export */
        "DefaultFlexOffsetDirective": function DefaultFlexOffsetDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.DefaultFlexOffsetDirective
          );
        },

        /* harmony export */
        "FlexOrderStyleBuilder": function FlexOrderStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexOrderStyleBuilder
          );
        },

        /* harmony export */
        "FlexOrderDirective": function FlexOrderDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexOrderDirective
          );
        },

        /* harmony export */
        "DefaultFlexOrderDirective": function DefaultFlexOrderDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.DefaultFlexOrderDirective
          );
        },

        /* harmony export */
        "LayoutStyleBuilder": function LayoutStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.LayoutStyleBuilder
          );
        },

        /* harmony export */
        "LayoutDirective": function LayoutDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.LayoutDirective
          );
        },

        /* harmony export */
        "DefaultLayoutDirective": function DefaultLayoutDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.DefaultLayoutDirective
          );
        },

        /* harmony export */
        "LayoutAlignStyleBuilder": function LayoutAlignStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.LayoutAlignStyleBuilder
          );
        },

        /* harmony export */
        "LayoutAlignDirective": function LayoutAlignDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.LayoutAlignDirective
          );
        },

        /* harmony export */
        "DefaultLayoutAlignDirective": function DefaultLayoutAlignDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.DefaultLayoutAlignDirective
          );
        },

        /* harmony export */
        "LayoutGapStyleBuilder": function LayoutGapStyleBuilder() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.LayoutGapStyleBuilder
          );
        },

        /* harmony export */
        "LayoutGapDirective": function LayoutGapDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.LayoutGapDirective
          );
        },

        /* harmony export */
        "DefaultLayoutGapDirective": function DefaultLayoutGapDirective() {
          return (
            /* reexport safe */
            _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.DefaultLayoutGapDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatef": function ɵgrid_privatef() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatef"]
          );
        },

        /* harmony export */
        "ɵgrid_privatee": function ɵgrid_privatee() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatee"]
          );
        },

        /* harmony export */
        "ɵgrid_privated": function ɵgrid_privated() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privated"]
          );
        },

        /* harmony export */
        "ɵgrid_privatei": function ɵgrid_privatei() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatei"]
          );
        },

        /* harmony export */
        "ɵgrid_privateh": function ɵgrid_privateh() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privateh"]
          );
        },

        /* harmony export */
        "ɵgrid_privateg": function ɵgrid_privateg() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privateg"]
          );
        },

        /* harmony export */
        "ɵgrid_privatel": function ɵgrid_privatel() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatel"]
          );
        },

        /* harmony export */
        "ɵgrid_privatek": function ɵgrid_privatek() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatek"]
          );
        },

        /* harmony export */
        "ɵgrid_privatej": function ɵgrid_privatej() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatej"]
          );
        },

        /* harmony export */
        "ɵgrid_privateo": function ɵgrid_privateo() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privateo"]
          );
        },

        /* harmony export */
        "ɵgrid_privaten": function ɵgrid_privaten() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privaten"]
          );
        },

        /* harmony export */
        "ɵgrid_privatem": function ɵgrid_privatem() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatem"]
          );
        },

        /* harmony export */
        "ɵgrid_privater": function ɵgrid_privater() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privater"]
          );
        },

        /* harmony export */
        "ɵgrid_privateq": function ɵgrid_privateq() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privateq"]
          );
        },

        /* harmony export */
        "ɵgrid_privatep": function ɵgrid_privatep() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatep"]
          );
        },

        /* harmony export */
        "ɵgrid_privateu": function ɵgrid_privateu() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privateu"]
          );
        },

        /* harmony export */
        "ɵgrid_privatet": function ɵgrid_privatet() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatet"]
          );
        },

        /* harmony export */
        "ɵgrid_privates": function ɵgrid_privates() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privates"]
          );
        },

        /* harmony export */
        "ɵgrid_privatex": function ɵgrid_privatex() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatex"]
          );
        },

        /* harmony export */
        "ɵgrid_privatew": function ɵgrid_privatew() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatew"]
          );
        },

        /* harmony export */
        "ɵgrid_privatev": function ɵgrid_privatev() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatev"]
          );
        },

        /* harmony export */
        "ɵgrid_privateba": function ɵgrid_privateba() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privateba"]
          );
        },

        /* harmony export */
        "ɵgrid_privatez": function ɵgrid_privatez() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatez"]
          );
        },

        /* harmony export */
        "ɵgrid_privatey": function ɵgrid_privatey() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatey"]
          );
        },

        /* harmony export */
        "ɵgrid_privatec": function ɵgrid_privatec() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatec"]
          );
        },

        /* harmony export */
        "ɵgrid_privateb": function ɵgrid_privateb() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privateb"]
          );
        },

        /* harmony export */
        "ɵgrid_privatea": function ɵgrid_privatea() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatea"]
          );
        },

        /* harmony export */
        "ɵgrid_privatebd": function ɵgrid_privatebd() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatebd"]
          );
        },

        /* harmony export */
        "ɵgrid_privatebc": function ɵgrid_privatebc() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatebc"]
          );
        },

        /* harmony export */
        "ɵgrid_privatebb": function ɵgrid_privatebb() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatebb"]
          );
        },

        /* harmony export */
        "ɵgrid_privatebg": function ɵgrid_privatebg() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatebg"]
          );
        },

        /* harmony export */
        "ɵgrid_privatebf": function ɵgrid_privatebf() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatebf"]
          );
        },

        /* harmony export */
        "ɵgrid_privatebe": function ɵgrid_privatebe() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__["ɵgrid_privatebe"]
          );
        },

        /* harmony export */
        "GridModule": function GridModule() {
          return (
            /* reexport safe */
            _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__.GridModule
          );
        },

        /* harmony export */
        "VERSION": function VERSION() {
          return (
            /* binding */
            _VERSION
          );
        },

        /* harmony export */
        "FlexLayoutModule": function FlexLayoutModule() {
          return (
            /* binding */
            _FlexLayoutModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      7716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/common */
      8583);
      /* harmony import */


      var _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/flex-layout/core */
      7736);
      /* harmony import */


      var _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/flex-layout/extended */
      8030);
      /* harmony import */


      var _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/flex-layout/flex */
      5618);
      /* harmony import */


      var _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/flex-layout/grid */
      4568);
      /**
       * @license
       * Copyright Google LLC All Rights Reserved.
       *
       * Use of this source code is governed by an MIT-style license that can be
       * found in the LICENSE file at https://angular.io/license
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: version.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Current version of Angular Flex-Layout.
       * @type {?}
       */


      var _VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.Version('12.0.0-beta.34');
      /**
       * @fileoverview added by tsickle
       * Generated from: module.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * FlexLayoutModule -- the main import for all utilities in the Angular Layout library
       * * Will automatically provide Flex, Grid, and Extended modules for use in the application
       * * Can be configured using the static withConfig method, options viewable on the Wiki's
       *   Configuration page
       */


      var _FlexLayoutModule = /*#__PURE__*/function () {
        /**
         * @param {?} serverModuleLoaded
         * @param {?} platformId
         */
        function _FlexLayoutModule(serverModuleLoaded, platformId) {
          _classCallCheck(this, _FlexLayoutModule);

          if ((0, _angular_common__WEBPACK_IMPORTED_MODULE_5__.isPlatformServer)(platformId) && !serverModuleLoaded) {
            console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');
          }
        }
        /**
         * Initialize the FlexLayoutModule with a set of config options,
         * which sets the corresponding tokens accordingly
         * @param {?} configOptions
         * @param {?=} breakpoints
         * @return {?}
         */


        _createClass(_FlexLayoutModule, null, [{
          key: "withConfig",
          value: function withConfig(configOptions) {
            var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
            return {
              ngModule: _FlexLayoutModule,
              providers: configOptions.serverLoaded ? [{
                provide: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG,
                useValue: Object.assign(Object.assign({}, _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CONFIG), configOptions)
              }, {
                provide: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BREAKPOINT,
                useValue: breakpoints,
                multi: true
              }, {
                provide: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN,
                useValue: true
              }] : [{
                provide: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG,
                useValue: Object.assign(Object.assign({}, _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CONFIG), configOptions)
              }, {
                provide: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BREAKPOINT,
                useValue: breakpoints,
                multi: true
              }]
            };
          }
        }]);

        return _FlexLayoutModule;
      }();

      _FlexLayoutModule.ɵfac = function FlexLayoutModule_Factory(t) {
        return new (t || _FlexLayoutModule)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__.PLATFORM_ID));
      };

      _FlexLayoutModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({
        type: _FlexLayoutModule
      });
      _FlexLayoutModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({
        imports: [[_angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexModule, _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ExtendedModule, _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__.GridModule], _angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexModule, _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ExtendedModule, _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__.GridModule]
      });
      /** @nocollapse */

      _FlexLayoutModule.ctorParameters = function () {
        return [{
          type: Boolean,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject,
            args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
          }]
        }, {
          type: Object,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject,
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_4__.PLATFORM_ID]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](_FlexLayoutModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.NgModule,
          args: [{
            imports: [_angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexModule, _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ExtendedModule, _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__.GridModule],
            exports: [_angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexModule, _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ExtendedModule, _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__.GridModule]
          }]
        }], function () {
          return [{
            type: Boolean,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject,
              args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.SERVER_TOKEN]
            }]
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_4__.PLATFORM_ID]
            }]
          }];
        }, null);
      })();

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](_FlexLayoutModule, {
          imports: function imports() {
            return [_angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexModule, _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ExtendedModule, _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__.GridModule];
          },
          exports: function exports() {
            return [_angular_flex_layout_flex__WEBPACK_IMPORTED_MODULE_2__.FlexModule, _angular_flex_layout_extended__WEBPACK_IMPORTED_MODULE_1__.ExtendedModule, _angular_flex_layout_grid__WEBPACK_IMPORTED_MODULE_3__.GridModule];
          }
        });
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: public-api.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */
      //# sourceMappingURL=flex-layout.js.map

      /***/

    },

    /***/
    5618:
    /*!************************************************************************!*\
      !*** ./node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/flex.js ***!
      \************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "FlexModule": function FlexModule() {
          return (
            /* binding */
            _FlexModule
          );
        },

        /* harmony export */
        "FlexStyleBuilder": function FlexStyleBuilder() {
          return (
            /* binding */
            _FlexStyleBuilder
          );
        },

        /* harmony export */
        "FlexDirective": function FlexDirective() {
          return (
            /* binding */
            _FlexDirective
          );
        },

        /* harmony export */
        "DefaultFlexDirective": function DefaultFlexDirective() {
          return (
            /* binding */
            _DefaultFlexDirective
          );
        },

        /* harmony export */
        "FlexAlignStyleBuilder": function FlexAlignStyleBuilder() {
          return (
            /* binding */
            _FlexAlignStyleBuilder
          );
        },

        /* harmony export */
        "FlexAlignDirective": function FlexAlignDirective() {
          return (
            /* binding */
            _FlexAlignDirective
          );
        },

        /* harmony export */
        "DefaultFlexAlignDirective": function DefaultFlexAlignDirective() {
          return (
            /* binding */
            _DefaultFlexAlignDirective
          );
        },

        /* harmony export */
        "FlexFillStyleBuilder": function FlexFillStyleBuilder() {
          return (
            /* binding */
            _FlexFillStyleBuilder
          );
        },

        /* harmony export */
        "FlexFillDirective": function FlexFillDirective() {
          return (
            /* binding */
            _FlexFillDirective
          );
        },

        /* harmony export */
        "FlexOffsetStyleBuilder": function FlexOffsetStyleBuilder() {
          return (
            /* binding */
            _FlexOffsetStyleBuilder
          );
        },

        /* harmony export */
        "FlexOffsetDirective": function FlexOffsetDirective() {
          return (
            /* binding */
            _FlexOffsetDirective
          );
        },

        /* harmony export */
        "DefaultFlexOffsetDirective": function DefaultFlexOffsetDirective() {
          return (
            /* binding */
            _DefaultFlexOffsetDirective
          );
        },

        /* harmony export */
        "FlexOrderStyleBuilder": function FlexOrderStyleBuilder() {
          return (
            /* binding */
            _FlexOrderStyleBuilder
          );
        },

        /* harmony export */
        "FlexOrderDirective": function FlexOrderDirective() {
          return (
            /* binding */
            _FlexOrderDirective
          );
        },

        /* harmony export */
        "DefaultFlexOrderDirective": function DefaultFlexOrderDirective() {
          return (
            /* binding */
            _DefaultFlexOrderDirective
          );
        },

        /* harmony export */
        "LayoutStyleBuilder": function LayoutStyleBuilder() {
          return (
            /* binding */
            _LayoutStyleBuilder
          );
        },

        /* harmony export */
        "LayoutDirective": function LayoutDirective() {
          return (
            /* binding */
            _LayoutDirective
          );
        },

        /* harmony export */
        "DefaultLayoutDirective": function DefaultLayoutDirective() {
          return (
            /* binding */
            _DefaultLayoutDirective
          );
        },

        /* harmony export */
        "LayoutAlignStyleBuilder": function LayoutAlignStyleBuilder() {
          return (
            /* binding */
            _LayoutAlignStyleBuilder
          );
        },

        /* harmony export */
        "LayoutAlignDirective": function LayoutAlignDirective() {
          return (
            /* binding */
            _LayoutAlignDirective
          );
        },

        /* harmony export */
        "DefaultLayoutAlignDirective": function DefaultLayoutAlignDirective() {
          return (
            /* binding */
            _DefaultLayoutAlignDirective
          );
        },

        /* harmony export */
        "LayoutGapStyleBuilder": function LayoutGapStyleBuilder() {
          return (
            /* binding */
            _LayoutGapStyleBuilder
          );
        },

        /* harmony export */
        "LayoutGapDirective": function LayoutGapDirective() {
          return (
            /* binding */
            _LayoutGapDirective
          );
        },

        /* harmony export */
        "DefaultLayoutGapDirective": function DefaultLayoutGapDirective() {
          return (
            /* binding */
            _DefaultLayoutGapDirective
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      7716);
      /* harmony import */


      var _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/flex-layout/core */
      7736);
      /* harmony import */


      var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/cdk/bidi */
      946);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      9765);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      6782);
      /**
       * @license
       * Copyright Google LLC All Rights Reserved.
       *
       * Use of this source code is governed by an MIT-style license that can be
       * found in the LICENSE file at https://angular.io/license
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: utils/layout-validator.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @license
       * Copyright Google LLC All Rights Reserved.
       *
       * Use of this source code is governed by an MIT-style license that can be
       * found in the LICENSE file at https://angular.io/license
       * @type {?}
       */


      var INLINE = 'inline';
      /** @type {?} */

      var LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];
      /**
       * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles
       * @param {?} value
       * @return {?}
       */

      function buildLayoutCSS(value) {
        var _validateValue3 = validateValue(value),
            _validateValue4 = _slicedToArray(_validateValue3, 3),
            direction = _validateValue4[0],
            wrap = _validateValue4[1],
            isInline = _validateValue4[2];

        return buildCSS(direction, wrap, isInline);
      }
      /**
       * Validate the value to be one of the acceptable value options
       * Use default fallback of 'row'
       * @param {?} value
       * @return {?}
       */


      function validateValue(value) {
        value = value ? value.toLowerCase() : '';

        var _value$split3 = value.split(' '),
            _value$split4 = _slicedToArray(_value$split3, 3),
            direction = _value$split4[0],
            wrap = _value$split4[1],
            inline = _value$split4[2]; // First value must be the `flex-direction`


        if (!LAYOUT_VALUES.find(
        /**
        * @param {?} x
        * @return {?}
        */
        function (x) {
          return x === direction;
        })) {
          direction = LAYOUT_VALUES[0];
        }

        if (wrap === INLINE) {
          wrap = inline !== INLINE ? inline : '';
          inline = INLINE;
        }

        return [direction, validateWrapValue(wrap), !!inline];
      }
      /**
       * Determine if the validated, flex-direction value specifies
       * a horizontal/row flow.
       * @param {?} value
       * @return {?}
       */


      function isFlowHorizontal(value) {
        var _validateValue5 = validateValue(value),
            _validateValue6 = _slicedToArray(_validateValue5, 1),
            flow = _validateValue6[0];

        return flow.indexOf('row') > -1;
      }
      /**
       * Convert layout-wrap='<value>' to expected flex-wrap style
       * @param {?} value
       * @return {?}
       */


      function validateWrapValue(value) {
        if (!!value) {
          switch (value.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
            case 'reverse-wrap':
              value = 'wrap-reverse';
              break;

            case 'no':
            case 'none':
            case 'nowrap':
              value = 'nowrap';
              break;
            // All other values fallback to 'wrap'

            default:
              value = 'wrap';
              break;
          }
        }

        return value;
      }
      /**
       * Build the CSS that should be assigned to the element instance
       * BUG:
       *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.
       *      Use height instead if possible; height : <xxx>vh;
       *
       *  This way any padding or border specified on the child elements are
       *  laid out and drawn inside that element's specified width and height.
       * @param {?} direction
       * @param {?=} wrap
       * @param {?=} inline
       * @return {?}
       */


      function buildCSS(direction) {
        var wrap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var inline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        return {
          'display': inline ? 'inline-flex' : 'flex',
          'box-sizing': 'border-box',
          'flex-direction': direction,
          'flex-wrap': !!wrap ? wrap : null
        };
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/layout/layout.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _LayoutStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_7) {
        _inherits(_LayoutStyleBuilder, _angular_flex_layout_7);

        var _super12 = _createSuper(_LayoutStyleBuilder);

        function _LayoutStyleBuilder() {
          _classCallCheck(this, _LayoutStyleBuilder);

          return _super12.apply(this, arguments);
        }

        _createClass(_LayoutStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @return {?}
           */
          function buildStyles(input) {
            return buildLayoutCSS(input);
          }
        }]);

        return _LayoutStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _LayoutStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵLayoutStyleBuilder_BaseFactory;
        return function LayoutStyleBuilder_Factory(t) {
          return (ɵLayoutStyleBuilder_BaseFactory || (ɵLayoutStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_LayoutStyleBuilder)))(t || _LayoutStyleBuilder);
        };
      }();
      /** @nocollapse */


      _LayoutStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function LayoutStyleBuilder_Factory() {
          return new _LayoutStyleBuilder();
        },
        token: _LayoutStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_LayoutStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();
      /** @type {?} */


      var inputs = ['fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md', 'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md', 'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm', 'fxLayout.gt-md', 'fxLayout.gt-lg'];
      /** @type {?} */

      var selector = "\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n";
      /**
       * 'layout' flexbox styling directive
       * Defines the positioning flow direction for the child elements: row or column
       * Optional values: column or row (default)
       * @see https://css-tricks.com/almanac/properties/f/flex-direction/
       *
       */

      var _LayoutDirective = /*#__PURE__*/function (_angular_flex_layout_8) {
        _inherits(_LayoutDirective, _angular_flex_layout_8);

        var _super13 = _createSuper(_LayoutDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function _LayoutDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this36;

          _classCallCheck(this, _LayoutDirective);

          _this36 = _super13.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this36.DIRECTIVE_KEY = 'layout';
          _this36.styleCache = layoutCache;

          _this36.init();

          return _this36;
        }

        return _LayoutDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _LayoutDirective.ɵfac = function LayoutDirective_Factory(t) {
        return new (t || _LayoutDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_LayoutStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      _LayoutDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _LayoutDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _LayoutDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _LayoutStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_LayoutDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _LayoutStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();

      var _DefaultLayoutDirective = /*#__PURE__*/function (_LayoutDirective2) {
        _inherits(_DefaultLayoutDirective, _LayoutDirective2);

        var _super14 = _createSuper(_DefaultLayoutDirective);

        function _DefaultLayoutDirective() {
          var _this37;

          _classCallCheck(this, _DefaultLayoutDirective);

          _this37 = _super14.apply(this, arguments);
          _this37.inputs = inputs;
          return _this37;
        }

        return _DefaultLayoutDirective;
      }(_LayoutDirective);

      _DefaultLayoutDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultLayoutDirective_BaseFactory;
        return function DefaultLayoutDirective_Factory(t) {
          return (ɵDefaultLayoutDirective_BaseFactory || (ɵDefaultLayoutDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultLayoutDirective)))(t || _DefaultLayoutDirective);
        };
      }();

      _DefaultLayoutDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultLayoutDirective,
        selectors: [["", "fxLayout", ""], ["", "fxLayout.xs", ""], ["", "fxLayout.sm", ""], ["", "fxLayout.md", ""], ["", "fxLayout.lg", ""], ["", "fxLayout.xl", ""], ["", "fxLayout.lt-sm", ""], ["", "fxLayout.lt-md", ""], ["", "fxLayout.lt-lg", ""], ["", "fxLayout.lt-xl", ""], ["", "fxLayout.gt-xs", ""], ["", "fxLayout.gt-sm", ""], ["", "fxLayout.gt-md", ""], ["", "fxLayout.gt-lg", ""]],
        inputs: {
          fxLayout: "fxLayout",
          "fxLayout.xs": "fxLayout.xs",
          "fxLayout.sm": "fxLayout.sm",
          "fxLayout.md": "fxLayout.md",
          "fxLayout.lg": "fxLayout.lg",
          "fxLayout.xl": "fxLayout.xl",
          "fxLayout.lt-sm": "fxLayout.lt-sm",
          "fxLayout.lt-md": "fxLayout.lt-md",
          "fxLayout.lt-lg": "fxLayout.lt-lg",
          "fxLayout.lt-xl": "fxLayout.lt-xl",
          "fxLayout.gt-xs": "fxLayout.gt-xs",
          "fxLayout.gt-sm": "fxLayout.gt-sm",
          "fxLayout.gt-md": "fxLayout.gt-md",
          "fxLayout.gt-lg": "fxLayout.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultLayoutDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector,
            inputs: inputs
          }]
        }], null, null);
      })();
      /** @type {?} */


      var layoutCache = new Map();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/layout-gap/layout-gap.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */

      var CLEAR_MARGIN_CSS = {
        'margin-left': null,
        'margin-right': null,
        'margin-top': null,
        'margin-bottom': null
      };

      var _LayoutGapStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_9) {
        _inherits(_LayoutGapStyleBuilder, _angular_flex_layout_9);

        var _super15 = _createSuper(_LayoutGapStyleBuilder);

        /**
         * @param {?} _styler
         */
        function _LayoutGapStyleBuilder(_styler) {
          var _this38;

          _classCallCheck(this, _LayoutGapStyleBuilder);

          _this38 = _super15.call(this);
          _this38._styler = _styler;
          return _this38;
        }
        /**
         * @param {?} gapValue
         * @param {?} parent
         * @return {?}
         */


        _createClass(_LayoutGapStyleBuilder, [{
          key: "buildStyles",
          value: function buildStyles(gapValue, parent) {
            if (gapValue.endsWith(GRID_SPECIFIER)) {
              gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER)); // Add the margin to the host element

              return buildGridMargin(gapValue, parent.directionality);
            } else {
              return {};
            }
          }
          /**
           * @param {?} gapValue
           * @param {?} _styles
           * @param {?} parent
           * @return {?}
           */

        }, {
          key: "sideEffect",
          value: function sideEffect(gapValue, _styles, parent) {
            /** @type {?} */
            var items = parent.items;

            if (gapValue.endsWith(GRID_SPECIFIER)) {
              gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER)); // For each `element` children, set the padding

              /** @type {?} */

              var paddingStyles = buildGridPadding(gapValue, parent.directionality);

              this._styler.applyStyleToElements(paddingStyles, parent.items);
            } else {
              /** @type {?} */
              var lastItem =
              /** @type {?} */
              items.pop(); // For each `element` children EXCEPT the last,
              // set the margin right/bottom styles...

              /** @type {?} */

              var gapCss = buildGapCSS(gapValue, parent);

              this._styler.applyStyleToElements(gapCss, items); // Clear all gaps for all visible elements


              this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);
            }
          }
        }]);

        return _LayoutGapStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _LayoutGapStyleBuilder.ɵfac = function LayoutGapStyleBuilder_Factory(t) {
        return new (t || _LayoutGapStyleBuilder)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils));
      };
      /** @nocollapse */


      _LayoutGapStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function LayoutGapStyleBuilder_Factory() {
          return new _LayoutGapStyleBuilder((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils));
        },
        token: _LayoutGapStyleBuilder,
        providedIn: "root"
      });
      /** @nocollapse */

      _LayoutGapStyleBuilder.ctorParameters = function () {
        return [{
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_LayoutGapStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }];
        }, null);
      })();
      /** @type {?} */


      var inputs$1 = ['fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md', 'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md', 'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm', 'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'];
      /** @type {?} */

      var selector$1 = "\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n";
      /**
       * 'layout-padding' styling directive
       *  Defines padding of child elements in a layout container
       */

      var _LayoutGapDirective = /*#__PURE__*/function (_angular_flex_layout_10) {
        _inherits(_LayoutGapDirective, _angular_flex_layout_10);

        var _super16 = _createSuper(_LayoutGapDirective);

        /**
         * @param {?} elRef
         * @param {?} zone
         * @param {?} directionality
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function _LayoutGapDirective(elRef, zone, directionality, styleUtils, styleBuilder, marshal) {
          var _this39;

          _classCallCheck(this, _LayoutGapDirective);

          _this39 = _super16.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this39.zone = zone;
          _this39.directionality = directionality;
          _this39.styleUtils = styleUtils;
          _this39.layout = 'row'; // default flex-direction
          // default flex-direction

          _this39.DIRECTIVE_KEY = 'layout-gap';
          _this39.observerSubject = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
          /** @type {?} */

          var extraTriggers = [_this39.directionality.change, _this39.observerSubject.asObservable()];

          _this39.init(extraTriggers);

          _this39.marshal.trackValue(_this39.nativeElement, 'layout').pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.takeUntil)(_this39.destroySubject)).subscribe(_this39.onLayoutChange.bind(_assertThisInitialized(_this39)));

          return _this39;
        }
        /**
         * Special accessor to query for all child 'element' nodes regardless of type, class, etc
         * @protected
         * @return {?}
         */


        _createClass(_LayoutGapDirective, [{
          key: "childrenNodes",
          get: function get() {
            /** @type {?} */
            var obj = this.nativeElement.children;
            /** @type {?} */

            var buffer = []; // iterate backwards ensuring that length is an UInt32

            for (var i = obj.length; i--;) {
              buffer[i] = obj[i];
            }

            return buffer;
          } // *********************************************
          // Lifecycle Methods
          // *********************************************

          /**
           * @return {?}
           */

        }, {
          key: "ngAfterContentInit",
          value: function ngAfterContentInit() {
            this.buildChildObservable();
            this.triggerUpdate();
          }
          /**
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            _get(_getPrototypeOf(_LayoutGapDirective.prototype), "ngOnDestroy", this).call(this);

            if (this.observer) {
              this.observer.disconnect();
            }
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * Cache the parent container 'flex-direction' and update the 'margin' styles
           * @protected
           * @param {?} matcher
           * @return {?}
           */

        }, {
          key: "onLayoutChange",
          value: function onLayoutChange(matcher) {
            var _this40 = this;

            /** @type {?} */
            var layout = matcher.value; // Make sure to filter out 'wrap' option

            /** @type {?} */

            var direction = layout.split(' ');
            this.layout = direction[0];

            if (!LAYOUT_VALUES.find(
            /**
            * @param {?} x
            * @return {?}
            */
            function (x) {
              return x === _this40.layout;
            })) {
              this.layout = 'row';
            }

            this.triggerUpdate();
          }
          /**
           *
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            var _this41 = this;

            // Gather all non-hidden Element nodes

            /** @type {?} */
            var items = this.childrenNodes.filter(
            /**
            * @param {?} el
            * @return {?}
            */
            function (el) {
              return el.nodeType === 1 && _this41.willDisplay(el);
            }).sort(
            /**
            * @param {?} a
            * @param {?} b
            * @return {?}
            */
            function (a, b) {
              /** @type {?} */
              var orderA = +_this41.styler.lookupStyle(a, 'order');
              /** @type {?} */

              var orderB = +_this41.styler.lookupStyle(b, 'order');

              if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {
                return 0;
              } else {
                return orderA > orderB ? 1 : -1;
              }
            });

            if (items.length > 0) {
              /** @type {?} */
              var directionality = this.directionality.value;
              /** @type {?} */

              var layout = this.layout;

              if (layout === 'row' && directionality === 'rtl') {
                this.styleCache = layoutGapCacheRowRtl;
              } else if (layout === 'row' && directionality !== 'rtl') {
                this.styleCache = layoutGapCacheRowLtr;
              } else if (layout === 'column' && directionality === 'rtl') {
                this.styleCache = layoutGapCacheColumnRtl;
              } else if (layout === 'column' && directionality !== 'rtl') {
                this.styleCache = layoutGapCacheColumnLtr;
              }

              this.addStyles(value, {
                directionality: directionality,
                items: items,
                layout: layout
              });
            }
          }
          /**
           * We need to override clearStyles because in most cases mru isn't populated
           * @protected
           * @return {?}
           */

        }, {
          key: "clearStyles",
          value: function clearStyles() {
            /** @type {?} */
            var gridMode = Object.keys(this.mru).length > 0;
            /** @type {?} */

            var childrenStyle = gridMode ? 'padding' : getMarginType(this.directionality.value, this.layout); // If there are styles on the parent remove them

            if (gridMode) {
              _get(_getPrototypeOf(_LayoutGapDirective.prototype), "clearStyles", this).call(this);
            } // Then remove the children styles too


            this.styleUtils.applyStyleToElements(_defineProperty({}, childrenStyle, ''), this.childrenNodes);
          }
          /**
           * Determine if an element will show or hide based on current activation
           * @protected
           * @param {?} source
           * @return {?}
           */

        }, {
          key: "willDisplay",
          value: function willDisplay(source) {
            /** @type {?} */
            var value = this.marshal.getValue(source, 'show-hide');
            return value === true || value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none';
          }
          /**
           * @protected
           * @return {?}
           */

        }, {
          key: "buildChildObservable",
          value: function buildChildObservable() {
            var _this42 = this;

            this.zone.runOutsideAngular(
            /**
            * @return {?}
            */
            function () {
              if (typeof MutationObserver !== 'undefined') {
                _this42.observer = new MutationObserver(
                /**
                * @param {?} mutations
                * @return {?}
                */
                function (mutations) {
                  /** @type {?} */
                  var validatedChanges =
                  /**
                  * @param {?} it
                  * @return {?}
                  */
                  function validatedChanges(it) {
                    return it.addedNodes && it.addedNodes.length > 0 || it.removedNodes && it.removedNodes.length > 0;
                  }; // update gap styles only for child 'added' or 'removed' events


                  if (mutations.some(validatedChanges)) {
                    _this42.observerSubject.next();
                  }
                });

                _this42.observer.observe(_this42.nativeElement, {
                  childList: true
                });
              }
            });
          }
        }]);

        return _LayoutGapDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _LayoutGapDirective.ɵfac = function LayoutGapDirective_Factory(t) {
        return new (t || _LayoutGapDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.Directionality), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_LayoutGapStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      _LayoutGapDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _LayoutGapDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _LayoutGapDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone
        }, {
          type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.Directionality
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _LayoutGapStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_LayoutGapDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone
          }, {
            type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.Directionality
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _LayoutGapStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();

      var _DefaultLayoutGapDirective = /*#__PURE__*/function (_LayoutGapDirective2) {
        _inherits(_DefaultLayoutGapDirective, _LayoutGapDirective2);

        var _super17 = _createSuper(_DefaultLayoutGapDirective);

        function _DefaultLayoutGapDirective() {
          var _this43;

          _classCallCheck(this, _DefaultLayoutGapDirective);

          _this43 = _super17.apply(this, arguments);
          _this43.inputs = inputs$1;
          return _this43;
        }

        return _DefaultLayoutGapDirective;
      }(_LayoutGapDirective);

      _DefaultLayoutGapDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultLayoutGapDirective_BaseFactory;
        return function DefaultLayoutGapDirective_Factory(t) {
          return (ɵDefaultLayoutGapDirective_BaseFactory || (ɵDefaultLayoutGapDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultLayoutGapDirective)))(t || _DefaultLayoutGapDirective);
        };
      }();

      _DefaultLayoutGapDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultLayoutGapDirective,
        selectors: [["", "fxLayoutGap", ""], ["", "fxLayoutGap.xs", ""], ["", "fxLayoutGap.sm", ""], ["", "fxLayoutGap.md", ""], ["", "fxLayoutGap.lg", ""], ["", "fxLayoutGap.xl", ""], ["", "fxLayoutGap.lt-sm", ""], ["", "fxLayoutGap.lt-md", ""], ["", "fxLayoutGap.lt-lg", ""], ["", "fxLayoutGap.lt-xl", ""], ["", "fxLayoutGap.gt-xs", ""], ["", "fxLayoutGap.gt-sm", ""], ["", "fxLayoutGap.gt-md", ""], ["", "fxLayoutGap.gt-lg", ""]],
        inputs: {
          fxLayoutGap: "fxLayoutGap",
          "fxLayoutGap.xs": "fxLayoutGap.xs",
          "fxLayoutGap.sm": "fxLayoutGap.sm",
          "fxLayoutGap.md": "fxLayoutGap.md",
          "fxLayoutGap.lg": "fxLayoutGap.lg",
          "fxLayoutGap.xl": "fxLayoutGap.xl",
          "fxLayoutGap.lt-sm": "fxLayoutGap.lt-sm",
          "fxLayoutGap.lt-md": "fxLayoutGap.lt-md",
          "fxLayoutGap.lt-lg": "fxLayoutGap.lt-lg",
          "fxLayoutGap.lt-xl": "fxLayoutGap.lt-xl",
          "fxLayoutGap.gt-xs": "fxLayoutGap.gt-xs",
          "fxLayoutGap.gt-sm": "fxLayoutGap.gt-sm",
          "fxLayoutGap.gt-md": "fxLayoutGap.gt-md",
          "fxLayoutGap.gt-lg": "fxLayoutGap.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultLayoutGapDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$1,
            inputs: inputs$1
          }]
        }], null, null);
      })();
      /** @type {?} */


      var layoutGapCacheRowRtl = new Map();
      /** @type {?} */

      var layoutGapCacheColumnRtl = new Map();
      /** @type {?} */

      var layoutGapCacheRowLtr = new Map();
      /** @type {?} */

      var layoutGapCacheColumnLtr = new Map();
      /** @type {?} */

      var GRID_SPECIFIER = ' grid';
      /**
       * @param {?} value
       * @param {?} directionality
       * @return {?}
       */

      function buildGridPadding(value, directionality) {
        var _value$split5 = value.split(' '),
            _value$split6 = _slicedToArray(_value$split5, 2),
            between = _value$split6[0],
            below = _value$split6[1];
        /** @type {?} */


        var bottom = below || between;
        /** @type {?} */

        var paddingRight = '0px';
        /** @type {?} */

        var paddingBottom = bottom;
        /** @type {?} */

        var paddingLeft = '0px';

        if (directionality === 'rtl') {
          paddingLeft = between;
        } else {
          paddingRight = between;
        }

        return {
          'padding': "0px ".concat(paddingRight, " ").concat(paddingBottom, " ").concat(paddingLeft)
        };
      }
      /**
       * @param {?} value
       * @param {?} directionality
       * @return {?}
       */


      function buildGridMargin(value, directionality) {
        var _value$split7 = value.split(' '),
            _value$split8 = _slicedToArray(_value$split7, 2),
            between = _value$split8[0],
            below = _value$split8[1];
        /** @type {?} */


        var bottom = below || between;
        /** @type {?} */

        var minus =
        /**
        * @param {?} str
        * @return {?}
        */
        function minus(str) {
          return "-".concat(str);
        };
        /** @type {?} */


        var marginRight = '0px';
        /** @type {?} */

        var marginBottom = minus(bottom);
        /** @type {?} */

        var marginLeft = '0px';

        if (directionality === 'rtl') {
          marginLeft = minus(between);
        } else {
          marginRight = minus(between);
        }

        return {
          'margin': "0px ".concat(marginRight, " ").concat(marginBottom, " ").concat(marginLeft)
        };
      }
      /**
       * @param {?} directionality
       * @param {?} layout
       * @return {?}
       */


      function getMarginType(directionality, layout) {
        switch (layout) {
          case 'column':
            return 'margin-bottom';

          case 'column-reverse':
            return 'margin-top';

          case 'row':
            return directionality === 'rtl' ? 'margin-left' : 'margin-right';

          case 'row-reverse':
            return directionality === 'rtl' ? 'margin-right' : 'margin-left';

          default:
            return directionality === 'rtl' ? 'margin-left' : 'margin-right';
        }
      }
      /**
       * @param {?} gapValue
       * @param {?} parent
       * @return {?}
       */


      function buildGapCSS(gapValue, parent) {
        /** @type {?} */
        var key = getMarginType(parent.directionality, parent.layout);
        /** @type {?} */

        var margins = Object.assign({}, CLEAR_MARGIN_CSS);
        margins[key] = gapValue;
        return margins;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: utils/object-extend.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * Extends an object with the *enumerable* and *own* properties of one or more source objects,
       * similar to Object.assign.
       *
       * @param {?} dest The object which will have properties copied to it.
       * @param {...?} sources The source objects from which properties will be copied.
       * @return {?}
       */


      function extendObject(dest) {
        if (dest == null) {
          throw TypeError('Cannot convert undefined or null to object');
        }

        for (var _len2 = arguments.length, sources = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          sources[_key2 - 1] = arguments[_key2];
        }

        for (var _i3 = 0, _sources2 = sources; _i3 < _sources2.length; _i3++) {
          var source = _sources2[_i3];

          if (source != null) {
            for (var key in source) {
              if (source.hasOwnProperty(key)) {
                dest[key] = source[key];
              }
            }
          }
        }

        return dest;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/flex/flex.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _FlexStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_11) {
        _inherits(_FlexStyleBuilder, _angular_flex_layout_11);

        var _super18 = _createSuper(_FlexStyleBuilder);

        /**
         * @param {?} layoutConfig
         */
        function _FlexStyleBuilder(layoutConfig) {
          var _this44;

          _classCallCheck(this, _FlexStyleBuilder);

          _this44 = _super18.call(this);
          _this44.layoutConfig = layoutConfig;
          return _this44;
        }
        /**
         * @param {?} input
         * @param {?} parent
         * @return {?}
         */


        _createClass(_FlexStyleBuilder, [{
          key: "buildStyles",
          value: function buildStyles(input, parent) {
            var _input$split = input.split(' '),
                _input$split2 = _toArray(_input$split),
                grow = _input$split2[0],
                shrink = _input$split2[1],
                basisParts = _input$split2.slice(2);
            /** @type {?} */


            var basis = basisParts.join(' '); // The flex-direction of this element's flex container. Defaults to 'row'.

            /** @type {?} */

            var direction = parent.direction.indexOf('column') > -1 ? 'column' : 'row';
            /** @type {?} */

            var max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';
            /** @type {?} */

            var min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';
            /** @type {?} */

            var hasCalc = String(basis).indexOf('calc') > -1;
            /** @type {?} */

            var usingCalc = hasCalc || basis === 'auto';
            /** @type {?} */

            var isPercent = String(basis).indexOf('%') > -1 && !hasCalc;
            /** @type {?} */

            var hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 || String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 || String(basis).indexOf('vh') > -1;
            /** @type {?} */

            var isValue = hasCalc || hasUnits;
            grow = grow == '0' ? 0 : grow;
            shrink = shrink == '0' ? 0 : shrink; // make box inflexible when shrink and grow are both zero
            // should not set a min when the grow is zero
            // should not set a max when the shrink is zero

            /** @type {?} */

            var isFixed = !grow && !shrink;
            /** @type {?} */

            var css = {}; // flex-basis allows you to specify the initial/starting main-axis size of the element,
            // before anything else is computed. It can either be a percentage or an absolute value.
            // It is, however, not the breaking point for flex-grow/shrink properties
            //
            // flex-grow can be seen as this:
            //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.
            //   1: (Default value). Stretch; will be the same size to all other flex items on
            //       the same row since they have a default value of 1.
            //   ≥2 (integer n): Stretch. Will be n times the size of other elements
            //      with 'flex-grow: 1' on the same row.
            // Use `null` to clear existing styles.

            /** @type {?} */

            var clearStyles = {
              'max-width': null,
              'max-height': null,
              'min-width': null,
              'min-height': null
            };

            switch (basis || '') {
              case '':
                /** @type {?} */
                var useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;
                basis = direction === 'row' ? '0%' : useColumnBasisZero ? '0.000000001px' : 'auto';
                break;

              case 'initial': // default

              case 'nogrow':
                grow = 0;
                basis = 'auto';
                break;

              case 'grow':
                basis = '100%';
                break;

              case 'noshrink':
                shrink = 0;
                basis = 'auto';
                break;

              case 'auto':
                break;

              case 'none':
                grow = 0;
                shrink = 0;
                basis = 'auto';
                break;

              default:
                // Defaults to percentage sizing unless `px` is explicitly set
                if (!isValue && !isPercent && !isNaN(
                /** @type {?} */
                basis)) {
                  basis = basis + '%';
                } // Fix for issue 280


                if (basis === '0%') {
                  isValue = true;
                }

                if (basis === '0px') {
                  basis = '0%';
                } // fix issue #5345


                if (hasCalc) {
                  css = extendObject(clearStyles, {
                    'flex-grow': grow,
                    'flex-shrink': shrink,
                    'flex-basis': isValue ? basis : '100%'
                  });
                } else {
                  css = extendObject(clearStyles, {
                    'flex': "".concat(grow, " ").concat(shrink, " ").concat(isValue ? basis : '100%')
                  });
                }

                break;
            }

            if (!(css['flex'] || css['flex-grow'])) {
              if (hasCalc) {
                css = extendObject(clearStyles, {
                  'flex-grow': grow,
                  'flex-shrink': shrink,
                  'flex-basis': basis
                });
              } else {
                css = extendObject(clearStyles, {
                  'flex': "".concat(grow, " ").concat(shrink, " ").concat(basis)
                });
              }
            } // Fix for issues 277, 534, and 728


            if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {
              css[min] = isFixed || isValue && grow ? basis : null;
              css[max] = isFixed || !usingCalc && shrink ? basis : null;
            } // Fix for issue 528


            if (!css[min] && !css[max]) {
              if (hasCalc) {
                css = extendObject(clearStyles, {
                  'flex-grow': grow,
                  'flex-shrink': shrink,
                  'flex-basis': basis
                });
              } else {
                css = extendObject(clearStyles, {
                  'flex': "".concat(grow, " ").concat(shrink, " ").concat(basis)
                });
              }
            } else {
              // Fix for issue 660
              if (parent.hasWrap) {
                css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ? hasCalc ? css[max] : "".concat(grow, " ").concat(shrink, " ").concat(css[max]) : hasCalc ? css[min] : "".concat(grow, " ").concat(shrink, " ").concat(css[min]);
              }
            }

            return (
              /** @type {?} */
              extendObject(css, {
                'box-sizing': 'border-box'
              })
            );
          }
        }]);

        return _FlexStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _FlexStyleBuilder.ɵfac = function FlexStyleBuilder_Factory(t) {
        return new (t || _FlexStyleBuilder)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG));
      };
      /** @nocollapse */


      _FlexStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function FlexStyleBuilder_Factory() {
          return new _FlexStyleBuilder((0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG));
        },
        token: _FlexStyleBuilder,
        providedIn: "root"
      });
      /** @nocollapse */

      _FlexStyleBuilder.ctorParameters = function () {
        return [{
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG]
          }]
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG]
            }]
          }];
        }, null);
      })();
      /** @type {?} */


      var inputs$2 = ['fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md', 'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md', 'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm', 'fxFlex.gt-md', 'fxFlex.gt-lg'];
      /** @type {?} */

      var selector$2 = "\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n";
      /**
       * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.
       * Corresponds to the css `flex` shorthand property.
       *
       * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/
       */

      var _FlexDirective = /*#__PURE__*/function (_angular_flex_layout_12) {
        _inherits(_FlexDirective, _angular_flex_layout_12);

        var _super19 = _createSuper(_FlexDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} layoutConfig
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function _FlexDirective(elRef, styleUtils, layoutConfig, styleBuilder, marshal) {
          var _this45;

          _classCallCheck(this, _FlexDirective);

          _this45 = _super19.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this45.layoutConfig = layoutConfig;
          _this45.marshal = marshal;
          _this45.DIRECTIVE_KEY = 'flex';
          _this45.direction = undefined;
          _this45.wrap = undefined;
          _this45.flexGrow = '1';
          _this45.flexShrink = '1';

          _this45.init();

          return _this45;
        }
        /**
         * @return {?}
         */


        _createClass(_FlexDirective, [{
          key: "shrink",
          get: function get() {
            return this.flexShrink;
          }
          /**
           * @param {?} value
           * @return {?}
           */
          ,
          set: function set(value) {
            this.flexShrink = value || '1';
            this.triggerReflow();
          }
          /**
           * @return {?}
           */

        }, {
          key: "grow",
          get: function get() {
            return this.flexGrow;
          }
          /**
           * @param {?} value
           * @return {?}
           */
          ,
          set: function set(value) {
            this.flexGrow = value || '1';
            this.triggerReflow();
          }
          /**
           * @return {?}
           */

        }, {
          key: "ngOnInit",
          value: function ngOnInit() {
            if (this.parentElement) {
              this.marshal.trackValue(this.parentElement, 'layout').pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.takeUntil)(this.destroySubject)).subscribe(this.onLayoutChange.bind(this));
              this.marshal.trackValue(this.nativeElement, 'layout-align').pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.takeUntil)(this.destroySubject)).subscribe(this.triggerReflow.bind(this));
            }
          }
          /**
           * Caches the parent container's 'flex-direction' and updates the element's style.
           * Used as a handler for layout change events from the parent flex container.
           * @protected
           * @param {?} matcher
           * @return {?}
           */

        }, {
          key: "onLayoutChange",
          value: function onLayoutChange(matcher) {
            /** @type {?} */
            var layout = matcher.value;
            /** @type {?} */

            var layoutParts = layout.split(' ');
            this.direction = layoutParts[0];
            this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';
            this.triggerUpdate();
          }
          /**
           * Input to this is exclusively the basis input value
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            /** @type {?} */
            var addFlexToParent = this.layoutConfig.addFlexToParent !== false;

            if (this.direction === undefined) {
              this.direction = this.getFlexFlowDirection(
              /** @type {?} */
              this.parentElement, addFlexToParent);
            }

            if (this.wrap === undefined) {
              this.wrap = this.hasWrap(
              /** @type {?} */
              this.parentElement);
            }
            /** @type {?} */


            var direction = this.direction;
            /** @type {?} */

            var isHorizontal = direction.startsWith('row');
            /** @type {?} */

            var hasWrap = this.wrap;

            if (isHorizontal && hasWrap) {
              this.styleCache = flexRowWrapCache;
            } else if (isHorizontal && !hasWrap) {
              this.styleCache = flexRowCache;
            } else if (!isHorizontal && hasWrap) {
              this.styleCache = flexColumnWrapCache;
            } else if (!isHorizontal && !hasWrap) {
              this.styleCache = flexColumnCache;
            }
            /** @type {?} */


            var basis = String(value).replace(';', '');
            /** @type {?} */

            var parts = (0, _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.validateBasis)(basis, this.flexGrow, this.flexShrink);
            this.addStyles(parts.join(' '), {
              direction: direction,
              hasWrap: hasWrap
            });
          }
          /**
           * Trigger a style reflow, usually based on a shrink/grow input event
           * @protected
           * @return {?}
           */

        }, {
          key: "triggerReflow",
          value: function triggerReflow() {
            /** @type {?} */
            var activatedValue = this.activatedValue;

            if (activatedValue !== undefined) {
              /** @type {?} */
              var parts = (0, _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.validateBasis)(activatedValue + '', this.flexGrow, this.flexShrink);
              this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));
            }
          }
        }]);

        return _FlexDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _FlexDirective.ɵfac = function FlexDirective_Factory(t) {
        return new (t || _FlexDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_FlexStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      _FlexDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _FlexDirective,
        inputs: {
          shrink: ["fxShrink", "shrink"],
          grow: ["fxGrow", "grow"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _FlexDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
            args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG]
          }]
        }, {
          type: _FlexStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      _FlexDirective.propDecorators = {
        shrink: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['fxShrink']
        }],
        grow: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['fxGrow']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
              args: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.LAYOUT_CONFIG]
            }]
          }, {
            type: _FlexStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          shrink: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['fxShrink']
          }],
          grow: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['fxGrow']
          }]
        });
      })();

      var _DefaultFlexDirective = /*#__PURE__*/function (_FlexDirective2) {
        _inherits(_DefaultFlexDirective, _FlexDirective2);

        var _super20 = _createSuper(_DefaultFlexDirective);

        function _DefaultFlexDirective() {
          var _this46;

          _classCallCheck(this, _DefaultFlexDirective);

          _this46 = _super20.apply(this, arguments);
          _this46.inputs = inputs$2;
          return _this46;
        }

        return _DefaultFlexDirective;
      }(_FlexDirective);

      _DefaultFlexDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultFlexDirective_BaseFactory;
        return function DefaultFlexDirective_Factory(t) {
          return (ɵDefaultFlexDirective_BaseFactory || (ɵDefaultFlexDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultFlexDirective)))(t || _DefaultFlexDirective);
        };
      }();

      _DefaultFlexDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultFlexDirective,
        selectors: [["", "fxFlex", ""], ["", "fxFlex.xs", ""], ["", "fxFlex.sm", ""], ["", "fxFlex.md", ""], ["", "fxFlex.lg", ""], ["", "fxFlex.xl", ""], ["", "fxFlex.lt-sm", ""], ["", "fxFlex.lt-md", ""], ["", "fxFlex.lt-lg", ""], ["", "fxFlex.lt-xl", ""], ["", "fxFlex.gt-xs", ""], ["", "fxFlex.gt-sm", ""], ["", "fxFlex.gt-md", ""], ["", "fxFlex.gt-lg", ""]],
        inputs: {
          fxFlex: "fxFlex",
          "fxFlex.xs": "fxFlex.xs",
          "fxFlex.sm": "fxFlex.sm",
          "fxFlex.md": "fxFlex.md",
          "fxFlex.lg": "fxFlex.lg",
          "fxFlex.xl": "fxFlex.xl",
          "fxFlex.lt-sm": "fxFlex.lt-sm",
          "fxFlex.lt-md": "fxFlex.lt-md",
          "fxFlex.lt-lg": "fxFlex.lt-lg",
          "fxFlex.lt-xl": "fxFlex.lt-xl",
          "fxFlex.gt-xs": "fxFlex.gt-xs",
          "fxFlex.gt-sm": "fxFlex.gt-sm",
          "fxFlex.gt-md": "fxFlex.gt-md",
          "fxFlex.gt-lg": "fxFlex.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultFlexDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            inputs: inputs$2,
            selector: selector$2
          }]
        }], null, null);
      })();
      /** @type {?} */


      var flexRowCache = new Map();
      /** @type {?} */

      var flexColumnCache = new Map();
      /** @type {?} */

      var flexRowWrapCache = new Map();
      /** @type {?} */

      var flexColumnWrapCache = new Map();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/flex-order/flex-order.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      var _FlexOrderStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_13) {
        _inherits(_FlexOrderStyleBuilder, _angular_flex_layout_13);

        var _super21 = _createSuper(_FlexOrderStyleBuilder);

        function _FlexOrderStyleBuilder() {
          _classCallCheck(this, _FlexOrderStyleBuilder);

          return _super21.apply(this, arguments);
        }

        _createClass(_FlexOrderStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} value
           * @return {?}
           */
          function buildStyles(value) {
            return {
              order: value && parseInt(value, 10) || ''
            };
          }
        }]);

        return _FlexOrderStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _FlexOrderStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵFlexOrderStyleBuilder_BaseFactory;
        return function FlexOrderStyleBuilder_Factory(t) {
          return (ɵFlexOrderStyleBuilder_BaseFactory || (ɵFlexOrderStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_FlexOrderStyleBuilder)))(t || _FlexOrderStyleBuilder);
        };
      }();
      /** @nocollapse */


      _FlexOrderStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function FlexOrderStyleBuilder_Factory() {
          return new _FlexOrderStyleBuilder();
        },
        token: _FlexOrderStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexOrderStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();
      /** @type {?} */


      var inputs$3 = ['fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md', 'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md', 'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm', 'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'];
      /** @type {?} */

      var selector$3 = "\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n";
      /**
       * 'flex-order' flexbox styling directive
       * Configures the positional ordering of the element in a sorted layout container
       * @see https://css-tricks.com/almanac/properties/o/order/
       */

      var _FlexOrderDirective = /*#__PURE__*/function (_angular_flex_layout_14) {
        _inherits(_FlexOrderDirective, _angular_flex_layout_14);

        var _super22 = _createSuper(_FlexOrderDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function _FlexOrderDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this47;

          _classCallCheck(this, _FlexOrderDirective);

          _this47 = _super22.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this47.DIRECTIVE_KEY = 'flex-order';
          _this47.styleCache = flexOrderCache;

          _this47.init();

          return _this47;
        }

        return _FlexOrderDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _FlexOrderDirective.ɵfac = function FlexOrderDirective_Factory(t) {
        return new (t || _FlexOrderDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_FlexOrderStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      _FlexOrderDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _FlexOrderDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _FlexOrderDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _FlexOrderStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexOrderDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _FlexOrderStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();
      /** @type {?} */


      var flexOrderCache = new Map();

      var _DefaultFlexOrderDirective = /*#__PURE__*/function (_FlexOrderDirective2) {
        _inherits(_DefaultFlexOrderDirective, _FlexOrderDirective2);

        var _super23 = _createSuper(_DefaultFlexOrderDirective);

        function _DefaultFlexOrderDirective() {
          var _this48;

          _classCallCheck(this, _DefaultFlexOrderDirective);

          _this48 = _super23.apply(this, arguments);
          _this48.inputs = inputs$3;
          return _this48;
        }

        return _DefaultFlexOrderDirective;
      }(_FlexOrderDirective);

      _DefaultFlexOrderDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultFlexOrderDirective_BaseFactory;
        return function DefaultFlexOrderDirective_Factory(t) {
          return (ɵDefaultFlexOrderDirective_BaseFactory || (ɵDefaultFlexOrderDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultFlexOrderDirective)))(t || _DefaultFlexOrderDirective);
        };
      }();

      _DefaultFlexOrderDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultFlexOrderDirective,
        selectors: [["", "fxFlexOrder", ""], ["", "fxFlexOrder.xs", ""], ["", "fxFlexOrder.sm", ""], ["", "fxFlexOrder.md", ""], ["", "fxFlexOrder.lg", ""], ["", "fxFlexOrder.xl", ""], ["", "fxFlexOrder.lt-sm", ""], ["", "fxFlexOrder.lt-md", ""], ["", "fxFlexOrder.lt-lg", ""], ["", "fxFlexOrder.lt-xl", ""], ["", "fxFlexOrder.gt-xs", ""], ["", "fxFlexOrder.gt-sm", ""], ["", "fxFlexOrder.gt-md", ""], ["", "fxFlexOrder.gt-lg", ""]],
        inputs: {
          fxFlexOrder: "fxFlexOrder",
          "fxFlexOrder.xs": "fxFlexOrder.xs",
          "fxFlexOrder.sm": "fxFlexOrder.sm",
          "fxFlexOrder.md": "fxFlexOrder.md",
          "fxFlexOrder.lg": "fxFlexOrder.lg",
          "fxFlexOrder.xl": "fxFlexOrder.xl",
          "fxFlexOrder.lt-sm": "fxFlexOrder.lt-sm",
          "fxFlexOrder.lt-md": "fxFlexOrder.lt-md",
          "fxFlexOrder.lt-lg": "fxFlexOrder.lt-lg",
          "fxFlexOrder.lt-xl": "fxFlexOrder.lt-xl",
          "fxFlexOrder.gt-xs": "fxFlexOrder.gt-xs",
          "fxFlexOrder.gt-sm": "fxFlexOrder.gt-sm",
          "fxFlexOrder.gt-md": "fxFlexOrder.gt-md",
          "fxFlexOrder.gt-lg": "fxFlexOrder.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultFlexOrderDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$3,
            inputs: inputs$3
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/flex-offset/flex-offset.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var _FlexOffsetStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_15) {
        _inherits(_FlexOffsetStyleBuilder, _angular_flex_layout_15);

        var _super24 = _createSuper(_FlexOffsetStyleBuilder);

        function _FlexOffsetStyleBuilder() {
          _classCallCheck(this, _FlexOffsetStyleBuilder);

          return _super24.apply(this, arguments);
        }

        _createClass(_FlexOffsetStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} offset
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(offset, parent) {
            if (offset === '') {
              offset = '0';
            }
            /** @type {?} */


            var isPercent = String(offset).indexOf('%') > -1;
            /** @type {?} */

            var isPx = String(offset).indexOf('px') > -1;

            if (!isPx && !isPercent && !isNaN(+offset)) {
              offset = offset + '%';
            }
            /** @type {?} */


            var horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';
            /** @type {?} */

            var styles = isFlowHorizontal(parent.layout) ? _defineProperty({}, horizontalLayoutKey, "".concat(offset)) : {
              'margin-top': "".concat(offset)
            };
            return styles;
          }
        }]);

        return _FlexOffsetStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _FlexOffsetStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵFlexOffsetStyleBuilder_BaseFactory;
        return function FlexOffsetStyleBuilder_Factory(t) {
          return (ɵFlexOffsetStyleBuilder_BaseFactory || (ɵFlexOffsetStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_FlexOffsetStyleBuilder)))(t || _FlexOffsetStyleBuilder);
        };
      }();
      /** @nocollapse */


      _FlexOffsetStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function FlexOffsetStyleBuilder_Factory() {
          return new _FlexOffsetStyleBuilder();
        },
        token: _FlexOffsetStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexOffsetStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();
      /** @type {?} */


      var inputs$4 = ['fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md', 'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md', 'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm', 'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'];
      /** @type {?} */

      var selector$4 = "\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n";
      /**
       * 'flex-offset' flexbox styling directive
       * Configures the 'margin-left' of the element in a layout container
       */

      var _FlexOffsetDirective = /*#__PURE__*/function (_angular_flex_layout_16) {
        _inherits(_FlexOffsetDirective, _angular_flex_layout_16);

        var _super25 = _createSuper(_FlexOffsetDirective);

        /**
         * @param {?} elRef
         * @param {?} directionality
         * @param {?} styleBuilder
         * @param {?} marshal
         * @param {?} styler
         */
        function _FlexOffsetDirective(elRef, directionality, styleBuilder, marshal, styler) {
          var _this49;

          _classCallCheck(this, _FlexOffsetDirective);

          _this49 = _super25.call(this, elRef, styleBuilder, styler, marshal);
          _this49.directionality = directionality;
          _this49.DIRECTIVE_KEY = 'flex-offset';

          _this49.init([_this49.directionality.change]); // Parent DOM `layout-gap` with affect the nested child with `flex-offset`


          if (_this49.parentElement) {
            _this49.marshal.trackValue(_this49.parentElement, 'layout-gap').pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.takeUntil)(_this49.destroySubject)).subscribe(_this49.triggerUpdate.bind(_assertThisInitialized(_this49)));
          }

          return _this49;
        } // *********************************************
        // Protected methods
        // *********************************************

        /**
         * Using the current fxFlexOffset value, update the inline CSS
         * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',
         *       otherwise `margin-top` is used for the offset.
         * @protected
         * @param {?=} value
         * @return {?}
         */


        _createClass(_FlexOffsetDirective, [{
          key: "updateWithValue",
          value: function updateWithValue() {
            var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
            // The flex-direction of this element's flex container. Defaults to 'row'.

            /** @type {?} */
            var layout = this.getFlexFlowDirection(
            /** @type {?} */
            this.parentElement, true);
            /** @type {?} */

            var isRtl = this.directionality.value === 'rtl';

            if (layout === 'row' && isRtl) {
              this.styleCache = flexOffsetCacheRowRtl;
            } else if (layout === 'row' && !isRtl) {
              this.styleCache = flexOffsetCacheRowLtr;
            } else if (layout === 'column' && isRtl) {
              this.styleCache = flexOffsetCacheColumnRtl;
            } else if (layout === 'column' && !isRtl) {
              this.styleCache = flexOffsetCacheColumnLtr;
            }

            this.addStyles(value + '', {
              layout: layout,
              isRtl: isRtl
            });
          }
        }]);

        return _FlexOffsetDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _FlexOffsetDirective.ɵfac = function FlexOffsetDirective_Factory(t) {
        return new (t || _FlexOffsetDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.Directionality), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_FlexOffsetStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils));
      };

      _FlexOffsetDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _FlexOffsetDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _FlexOffsetDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.Directionality
        }, {
          type: _FlexOffsetStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexOffsetDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.Directionality
          }, {
            type: _FlexOffsetStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }];
        }, null);
      })();

      var _DefaultFlexOffsetDirective = /*#__PURE__*/function (_FlexOffsetDirective2) {
        _inherits(_DefaultFlexOffsetDirective, _FlexOffsetDirective2);

        var _super26 = _createSuper(_DefaultFlexOffsetDirective);

        function _DefaultFlexOffsetDirective() {
          var _this50;

          _classCallCheck(this, _DefaultFlexOffsetDirective);

          _this50 = _super26.apply(this, arguments);
          _this50.inputs = inputs$4;
          return _this50;
        }

        return _DefaultFlexOffsetDirective;
      }(_FlexOffsetDirective);

      _DefaultFlexOffsetDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultFlexOffsetDirective_BaseFactory;
        return function DefaultFlexOffsetDirective_Factory(t) {
          return (ɵDefaultFlexOffsetDirective_BaseFactory || (ɵDefaultFlexOffsetDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultFlexOffsetDirective)))(t || _DefaultFlexOffsetDirective);
        };
      }();

      _DefaultFlexOffsetDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultFlexOffsetDirective,
        selectors: [["", "fxFlexOffset", ""], ["", "fxFlexOffset.xs", ""], ["", "fxFlexOffset.sm", ""], ["", "fxFlexOffset.md", ""], ["", "fxFlexOffset.lg", ""], ["", "fxFlexOffset.xl", ""], ["", "fxFlexOffset.lt-sm", ""], ["", "fxFlexOffset.lt-md", ""], ["", "fxFlexOffset.lt-lg", ""], ["", "fxFlexOffset.lt-xl", ""], ["", "fxFlexOffset.gt-xs", ""], ["", "fxFlexOffset.gt-sm", ""], ["", "fxFlexOffset.gt-md", ""], ["", "fxFlexOffset.gt-lg", ""]],
        inputs: {
          fxFlexOffset: "fxFlexOffset",
          "fxFlexOffset.xs": "fxFlexOffset.xs",
          "fxFlexOffset.sm": "fxFlexOffset.sm",
          "fxFlexOffset.md": "fxFlexOffset.md",
          "fxFlexOffset.lg": "fxFlexOffset.lg",
          "fxFlexOffset.xl": "fxFlexOffset.xl",
          "fxFlexOffset.lt-sm": "fxFlexOffset.lt-sm",
          "fxFlexOffset.lt-md": "fxFlexOffset.lt-md",
          "fxFlexOffset.lt-lg": "fxFlexOffset.lt-lg",
          "fxFlexOffset.lt-xl": "fxFlexOffset.lt-xl",
          "fxFlexOffset.gt-xs": "fxFlexOffset.gt-xs",
          "fxFlexOffset.gt-sm": "fxFlexOffset.gt-sm",
          "fxFlexOffset.gt-md": "fxFlexOffset.gt-md",
          "fxFlexOffset.gt-lg": "fxFlexOffset.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultFlexOffsetDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$4,
            inputs: inputs$4
          }]
        }], null, null);
      })();
      /** @type {?} */


      var flexOffsetCacheRowRtl = new Map();
      /** @type {?} */

      var flexOffsetCacheColumnRtl = new Map();
      /** @type {?} */

      var flexOffsetCacheRowLtr = new Map();
      /** @type {?} */

      var flexOffsetCacheColumnLtr = new Map();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/flex-align/flex-align.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      var _FlexAlignStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_17) {
        _inherits(_FlexAlignStyleBuilder, _angular_flex_layout_17);

        var _super27 = _createSuper(_FlexAlignStyleBuilder);

        function _FlexAlignStyleBuilder() {
          _classCallCheck(this, _FlexAlignStyleBuilder);

          return _super27.apply(this, arguments);
        }

        _createClass(_FlexAlignStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @return {?}
           */
          function buildStyles(input) {
            input = input || 'stretch';
            /** @type {?} */

            var styles = {}; // Cross-axis

            switch (input) {
              case 'start':
                styles['align-self'] = 'flex-start';
                break;

              case 'end':
                styles['align-self'] = 'flex-end';
                break;

              default:
                styles['align-self'] = input;
                break;
            }

            return styles;
          }
        }]);

        return _FlexAlignStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _FlexAlignStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵFlexAlignStyleBuilder_BaseFactory;
        return function FlexAlignStyleBuilder_Factory(t) {
          return (ɵFlexAlignStyleBuilder_BaseFactory || (ɵFlexAlignStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_FlexAlignStyleBuilder)))(t || _FlexAlignStyleBuilder);
        };
      }();
      /** @nocollapse */


      _FlexAlignStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function FlexAlignStyleBuilder_Factory() {
          return new _FlexAlignStyleBuilder();
        },
        token: _FlexAlignStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexAlignStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();
      /** @type {?} */


      var inputs$5 = ['fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md', 'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md', 'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm', 'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'];
      /** @type {?} */

      var selector$5 = "\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n";
      /**
       * 'flex-align' flexbox styling directive
       * Allows element-specific overrides for cross-axis alignments in a layout container
       * @see https://css-tricks.com/almanac/properties/a/align-self/
       */

      var _FlexAlignDirective = /*#__PURE__*/function (_angular_flex_layout_18) {
        _inherits(_FlexAlignDirective, _angular_flex_layout_18);

        var _super28 = _createSuper(_FlexAlignDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function _FlexAlignDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this51;

          _classCallCheck(this, _FlexAlignDirective);

          _this51 = _super28.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this51.DIRECTIVE_KEY = 'flex-align';
          _this51.styleCache = flexAlignCache;

          _this51.init();

          return _this51;
        }

        return _FlexAlignDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _FlexAlignDirective.ɵfac = function FlexAlignDirective_Factory(t) {
        return new (t || _FlexAlignDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_FlexAlignStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      _FlexAlignDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _FlexAlignDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _FlexAlignDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _FlexAlignStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexAlignDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _FlexAlignStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();
      /** @type {?} */


      var flexAlignCache = new Map();

      var _DefaultFlexAlignDirective = /*#__PURE__*/function (_FlexAlignDirective2) {
        _inherits(_DefaultFlexAlignDirective, _FlexAlignDirective2);

        var _super29 = _createSuper(_DefaultFlexAlignDirective);

        function _DefaultFlexAlignDirective() {
          var _this52;

          _classCallCheck(this, _DefaultFlexAlignDirective);

          _this52 = _super29.apply(this, arguments);
          _this52.inputs = inputs$5;
          return _this52;
        }

        return _DefaultFlexAlignDirective;
      }(_FlexAlignDirective);

      _DefaultFlexAlignDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultFlexAlignDirective_BaseFactory;
        return function DefaultFlexAlignDirective_Factory(t) {
          return (ɵDefaultFlexAlignDirective_BaseFactory || (ɵDefaultFlexAlignDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultFlexAlignDirective)))(t || _DefaultFlexAlignDirective);
        };
      }();

      _DefaultFlexAlignDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultFlexAlignDirective,
        selectors: [["", "fxFlexAlign", ""], ["", "fxFlexAlign.xs", ""], ["", "fxFlexAlign.sm", ""], ["", "fxFlexAlign.md", ""], ["", "fxFlexAlign.lg", ""], ["", "fxFlexAlign.xl", ""], ["", "fxFlexAlign.lt-sm", ""], ["", "fxFlexAlign.lt-md", ""], ["", "fxFlexAlign.lt-lg", ""], ["", "fxFlexAlign.lt-xl", ""], ["", "fxFlexAlign.gt-xs", ""], ["", "fxFlexAlign.gt-sm", ""], ["", "fxFlexAlign.gt-md", ""], ["", "fxFlexAlign.gt-lg", ""]],
        inputs: {
          fxFlexAlign: "fxFlexAlign",
          "fxFlexAlign.xs": "fxFlexAlign.xs",
          "fxFlexAlign.sm": "fxFlexAlign.sm",
          "fxFlexAlign.md": "fxFlexAlign.md",
          "fxFlexAlign.lg": "fxFlexAlign.lg",
          "fxFlexAlign.xl": "fxFlexAlign.xl",
          "fxFlexAlign.lt-sm": "fxFlexAlign.lt-sm",
          "fxFlexAlign.lt-md": "fxFlexAlign.lt-md",
          "fxFlexAlign.lt-lg": "fxFlexAlign.lt-lg",
          "fxFlexAlign.lt-xl": "fxFlexAlign.lt-xl",
          "fxFlexAlign.gt-xs": "fxFlexAlign.gt-xs",
          "fxFlexAlign.gt-sm": "fxFlexAlign.gt-sm",
          "fxFlexAlign.gt-md": "fxFlexAlign.gt-md",
          "fxFlexAlign.gt-lg": "fxFlexAlign.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultFlexAlignDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$5,
            inputs: inputs$5
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/flex-fill/flex-fill.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var FLEX_FILL_CSS = {
        'margin': 0,
        'width': '100%',
        'height': '100%',
        'min-width': '100%',
        'min-height': '100%'
      };

      var _FlexFillStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_19) {
        _inherits(_FlexFillStyleBuilder, _angular_flex_layout_19);

        var _super30 = _createSuper(_FlexFillStyleBuilder);

        function _FlexFillStyleBuilder() {
          _classCallCheck(this, _FlexFillStyleBuilder);

          return _super30.apply(this, arguments);
        }

        _createClass(_FlexFillStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} _input
           * @return {?}
           */
          function buildStyles(_input) {
            return FLEX_FILL_CSS;
          }
        }]);

        return _FlexFillStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _FlexFillStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵFlexFillStyleBuilder_BaseFactory;
        return function FlexFillStyleBuilder_Factory(t) {
          return (ɵFlexFillStyleBuilder_BaseFactory || (ɵFlexFillStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_FlexFillStyleBuilder)))(t || _FlexFillStyleBuilder);
        };
      }();
      /** @nocollapse */


      _FlexFillStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function FlexFillStyleBuilder_Factory() {
          return new _FlexFillStyleBuilder();
        },
        token: _FlexFillStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexFillStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();
      /**
       * 'fxFill' flexbox styling directive
       *  Maximizes width and height of element in a layout container
       *
       *  NOTE: fxFill is NOT responsive API!!
       */


      var _FlexFillDirective = /*#__PURE__*/function (_angular_flex_layout_20) {
        _inherits(_FlexFillDirective, _angular_flex_layout_20);

        var _super31 = _createSuper(_FlexFillDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function _FlexFillDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this53;

          _classCallCheck(this, _FlexFillDirective);

          _this53 = _super31.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this53.styleCache = flexFillCache;

          _this53.addStyles('');

          return _this53;
        }

        return _FlexFillDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _FlexFillDirective.ɵfac = function FlexFillDirective_Factory(t) {
        return new (t || _FlexFillDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_FlexFillStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      _FlexFillDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _FlexFillDirective,
        selectors: [["", "fxFill", ""], ["", "fxFlexFill", ""]],
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _FlexFillDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _FlexFillStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexFillDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: "[fxFill], [fxFlexFill]"
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _FlexFillStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();
      /** @type {?} */


      var flexFillCache = new Map();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/layout-align/layout-align.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      var _LayoutAlignStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_21) {
        _inherits(_LayoutAlignStyleBuilder, _angular_flex_layout_21);

        var _super32 = _createSuper(_LayoutAlignStyleBuilder);

        function _LayoutAlignStyleBuilder() {
          _classCallCheck(this, _LayoutAlignStyleBuilder);

          return _super32.apply(this, arguments);
        }

        _createClass(_LayoutAlignStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} align
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(align, parent) {
            /** @type {?} */
            var css = {};

            var _align$split = align.split(' '),
                _align$split2 = _slicedToArray(_align$split, 2),
                mainAxis = _align$split2[0],
                crossAxis = _align$split2[1]; // Main axis


            switch (mainAxis) {
              case 'center':
                css['justify-content'] = 'center';
                break;

              case 'space-around':
                css['justify-content'] = 'space-around';
                break;

              case 'space-between':
                css['justify-content'] = 'space-between';
                break;

              case 'space-evenly':
                css['justify-content'] = 'space-evenly';
                break;

              case 'end':
              case 'flex-end':
                css['justify-content'] = 'flex-end';
                break;

              case 'start':
              case 'flex-start':
              default:
                css['justify-content'] = 'flex-start'; // default main axis

                break;
            } // Cross-axis


            switch (crossAxis) {
              case 'start':
              case 'flex-start':
                css['align-items'] = css['align-content'] = 'flex-start';
                break;

              case 'center':
                css['align-items'] = css['align-content'] = 'center';
                break;

              case 'end':
              case 'flex-end':
                css['align-items'] = css['align-content'] = 'flex-end';
                break;

              case 'space-between':
                css['align-content'] = 'space-between';
                css['align-items'] = 'stretch';
                break;

              case 'space-around':
                css['align-content'] = 'space-around';
                css['align-items'] = 'stretch';
                break;

              case 'baseline':
                css['align-content'] = 'stretch';
                css['align-items'] = 'baseline';
                break;

              case 'stretch':
              default:
                // 'stretch'
                css['align-items'] = css['align-content'] = 'stretch'; // default cross axis

                break;
            }

            return (
              /** @type {?} */
              extendObject(css, {
                'display': parent.inline ? 'inline-flex' : 'flex',
                'flex-direction': parent.layout,
                'box-sizing': 'border-box',
                'max-width': crossAxis === 'stretch' ? !isFlowHorizontal(parent.layout) ? '100%' : null : null,
                'max-height': crossAxis === 'stretch' ? isFlowHorizontal(parent.layout) ? '100%' : null : null
              })
            );
          }
        }]);

        return _LayoutAlignStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      _LayoutAlignStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵLayoutAlignStyleBuilder_BaseFactory;
        return function LayoutAlignStyleBuilder_Factory(t) {
          return (ɵLayoutAlignStyleBuilder_BaseFactory || (ɵLayoutAlignStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_LayoutAlignStyleBuilder)))(t || _LayoutAlignStyleBuilder);
        };
      }();
      /** @nocollapse */


      _LayoutAlignStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function LayoutAlignStyleBuilder_Factory() {
          return new _LayoutAlignStyleBuilder();
        },
        token: _LayoutAlignStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_LayoutAlignStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();
      /** @type {?} */


      var inputs$6 = ['fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md', 'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md', 'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm', 'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'];
      /** @type {?} */

      var selector$6 = "\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n";
      /**
       * 'layout-align' flexbox styling directive
       *  Defines positioning of child elements along main and cross axis in a layout container
       *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs
       *
       * @see https://css-tricks.com/almanac/properties/j/justify-content/
       * @see https://css-tricks.com/almanac/properties/a/align-items/
       * @see https://css-tricks.com/almanac/properties/a/align-content/
       */

      var _LayoutAlignDirective = /*#__PURE__*/function (_angular_flex_layout_22) {
        _inherits(_LayoutAlignDirective, _angular_flex_layout_22);

        var _super33 = _createSuper(_LayoutAlignDirective);

        // default inline value

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function _LayoutAlignDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this54;

          _classCallCheck(this, _LayoutAlignDirective);

          _this54 = _super33.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this54.DIRECTIVE_KEY = 'layout-align';
          _this54.layout = 'row'; // default flex-direction
          // default flex-direction

          _this54.inline = false; // default inline value

          _this54.init();

          _this54.marshal.trackValue(_this54.nativeElement, 'layout').pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.takeUntil)(_this54.destroySubject)).subscribe(_this54.onLayoutChange.bind(_assertThisInitialized(_this54)));

          return _this54;
        } // *********************************************
        // Protected methods
        // *********************************************

        /**
         *
         * @protected
         * @param {?} value
         * @return {?}
         */


        _createClass(_LayoutAlignDirective, [{
          key: "updateWithValue",
          value: function updateWithValue(value) {
            /** @type {?} */
            var layout = this.layout || 'row';
            /** @type {?} */

            var inline = this.inline;

            if (layout === 'row' && inline) {
              this.styleCache = layoutAlignHorizontalInlineCache;
            } else if (layout === 'row' && !inline) {
              this.styleCache = layoutAlignHorizontalCache;
            } else if (layout === 'row-reverse' && inline) {
              this.styleCache = layoutAlignHorizontalRevInlineCache;
            } else if (layout === 'row-reverse' && !inline) {
              this.styleCache = layoutAlignHorizontalRevCache;
            } else if (layout === 'column' && inline) {
              this.styleCache = layoutAlignVerticalInlineCache;
            } else if (layout === 'column' && !inline) {
              this.styleCache = layoutAlignVerticalCache;
            } else if (layout === 'column-reverse' && inline) {
              this.styleCache = layoutAlignVerticalRevInlineCache;
            } else if (layout === 'column-reverse' && !inline) {
              this.styleCache = layoutAlignVerticalRevCache;
            }

            this.addStyles(value, {
              layout: layout,
              inline: inline
            });
          }
          /**
           * Cache the parent container 'flex-direction' and update the 'flex' styles
           * @protected
           * @param {?} matcher
           * @return {?}
           */

        }, {
          key: "onLayoutChange",
          value: function onLayoutChange(matcher) {
            var _this55 = this;

            /** @type {?} */
            var layoutKeys = matcher.value.split(' ');
            this.layout = layoutKeys[0];
            this.inline = matcher.value.includes('inline');

            if (!LAYOUT_VALUES.find(
            /**
            * @param {?} x
            * @return {?}
            */
            function (x) {
              return x === _this55.layout;
            })) {
              this.layout = 'row';
            }

            this.triggerUpdate();
          }
        }]);

        return _LayoutAlignDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      _LayoutAlignDirective.ɵfac = function LayoutAlignDirective_Factory(t) {
        return new (t || _LayoutAlignDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_LayoutAlignStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      _LayoutAlignDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _LayoutAlignDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      _LayoutAlignDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _LayoutAlignStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_LayoutAlignDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _LayoutAlignStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();

      var _DefaultLayoutAlignDirective = /*#__PURE__*/function (_LayoutAlignDirective2) {
        _inherits(_DefaultLayoutAlignDirective, _LayoutAlignDirective2);

        var _super34 = _createSuper(_DefaultLayoutAlignDirective);

        function _DefaultLayoutAlignDirective() {
          var _this56;

          _classCallCheck(this, _DefaultLayoutAlignDirective);

          _this56 = _super34.apply(this, arguments);
          _this56.inputs = inputs$6;
          return _this56;
        }

        return _DefaultLayoutAlignDirective;
      }(_LayoutAlignDirective);

      _DefaultLayoutAlignDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultLayoutAlignDirective_BaseFactory;
        return function DefaultLayoutAlignDirective_Factory(t) {
          return (ɵDefaultLayoutAlignDirective_BaseFactory || (ɵDefaultLayoutAlignDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](_DefaultLayoutAlignDirective)))(t || _DefaultLayoutAlignDirective);
        };
      }();

      _DefaultLayoutAlignDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: _DefaultLayoutAlignDirective,
        selectors: [["", "fxLayoutAlign", ""], ["", "fxLayoutAlign.xs", ""], ["", "fxLayoutAlign.sm", ""], ["", "fxLayoutAlign.md", ""], ["", "fxLayoutAlign.lg", ""], ["", "fxLayoutAlign.xl", ""], ["", "fxLayoutAlign.lt-sm", ""], ["", "fxLayoutAlign.lt-md", ""], ["", "fxLayoutAlign.lt-lg", ""], ["", "fxLayoutAlign.lt-xl", ""], ["", "fxLayoutAlign.gt-xs", ""], ["", "fxLayoutAlign.gt-sm", ""], ["", "fxLayoutAlign.gt-md", ""], ["", "fxLayoutAlign.gt-lg", ""]],
        inputs: {
          fxLayoutAlign: "fxLayoutAlign",
          "fxLayoutAlign.xs": "fxLayoutAlign.xs",
          "fxLayoutAlign.sm": "fxLayoutAlign.sm",
          "fxLayoutAlign.md": "fxLayoutAlign.md",
          "fxLayoutAlign.lg": "fxLayoutAlign.lg",
          "fxLayoutAlign.xl": "fxLayoutAlign.xl",
          "fxLayoutAlign.lt-sm": "fxLayoutAlign.lt-sm",
          "fxLayoutAlign.lt-md": "fxLayoutAlign.lt-md",
          "fxLayoutAlign.lt-lg": "fxLayoutAlign.lt-lg",
          "fxLayoutAlign.lt-xl": "fxLayoutAlign.lt-xl",
          "fxLayoutAlign.gt-xs": "fxLayoutAlign.gt-xs",
          "fxLayoutAlign.gt-sm": "fxLayoutAlign.gt-sm",
          "fxLayoutAlign.gt-md": "fxLayoutAlign.gt-md",
          "fxLayoutAlign.gt-lg": "fxLayoutAlign.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_DefaultLayoutAlignDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$6,
            inputs: inputs$6
          }]
        }], null, null);
      })();
      /** @type {?} */


      var layoutAlignHorizontalCache = new Map();
      /** @type {?} */

      var layoutAlignVerticalCache = new Map();
      /** @type {?} */

      var layoutAlignHorizontalRevCache = new Map();
      /** @type {?} */

      var layoutAlignVerticalRevCache = new Map();
      /** @type {?} */

      var layoutAlignHorizontalInlineCache = new Map();
      /** @type {?} */

      var layoutAlignVerticalInlineCache = new Map();
      /** @type {?} */

      var layoutAlignHorizontalRevInlineCache = new Map();
      /** @type {?} */

      var layoutAlignVerticalRevInlineCache = new Map();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/module.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */

      var ALL_DIRECTIVES = [_DefaultLayoutDirective, _DefaultLayoutGapDirective, _DefaultLayoutAlignDirective, _DefaultFlexOrderDirective, _DefaultFlexOffsetDirective, _FlexFillDirective, _DefaultFlexAlignDirective, _DefaultFlexDirective];
      /**
       * *****************************************************************
       * Define module for the Flex API
       * *****************************************************************
       */

      var _FlexModule = function _FlexModule() {
        _classCallCheck(this, _FlexModule);
      };

      _FlexModule.ɵfac = function FlexModule_Factory(t) {
        return new (t || _FlexModule)();
      };

      _FlexModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: _FlexModule
      });
      _FlexModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        imports: [[_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule, _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.BidiModule]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_FlexModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
          args: [{
            imports: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule, _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.BidiModule],
            declarations: [].concat(ALL_DIRECTIVES),
            exports: [].concat(ALL_DIRECTIVES)
          }]
        }], null, null);
      })();

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](_FlexModule, {
          declarations: function declarations() {
            return [_DefaultLayoutDirective, _DefaultLayoutGapDirective, _DefaultLayoutAlignDirective, _DefaultFlexOrderDirective, _DefaultFlexOffsetDirective, _FlexFillDirective, _DefaultFlexAlignDirective, _DefaultFlexDirective];
          },
          imports: function imports() {
            return [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule, _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__.BidiModule];
          },
          exports: function exports() {
            return [_DefaultLayoutDirective, _DefaultLayoutGapDirective, _DefaultLayoutAlignDirective, _DefaultFlexOrderDirective, _DefaultFlexOffsetDirective, _FlexFillDirective, _DefaultFlexAlignDirective, _DefaultFlexDirective];
          }
        });
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: flex/public-api.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: flex/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */
      //# sourceMappingURL=flex.js.map

      /***/

    },

    /***/
    4568:
    /*!************************************************************************!*\
      !*** ./node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/grid.js ***!
      \************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "GridModule": function GridModule() {
          return (
            /* binding */
            _GridModule
          );
        },

        /* harmony export */
        "ɵgrid_privatef": function ɵgrid_privatef() {
          return (
            /* binding */
            DefaultGridAlignColumnsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatee": function ɵgrid_privatee() {
          return (
            /* binding */
            GridAlignColumnsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privated": function ɵgrid_privated() {
          return (
            /* binding */
            GridAlignColumnsStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privatei": function ɵgrid_privatei() {
          return (
            /* binding */
            DefaultGridAlignRowsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privateh": function ɵgrid_privateh() {
          return (
            /* binding */
            GridAlignRowsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privateg": function ɵgrid_privateg() {
          return (
            /* binding */
            GridAlignRowsStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privatel": function ɵgrid_privatel() {
          return (
            /* binding */
            DefaultGridAreaDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatek": function ɵgrid_privatek() {
          return (
            /* binding */
            GridAreaDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatej": function ɵgrid_privatej() {
          return (
            /* binding */
            GridAreaStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privateo": function ɵgrid_privateo() {
          return (
            /* binding */
            DefaultGridAreasDirective
          );
        },

        /* harmony export */
        "ɵgrid_privaten": function ɵgrid_privaten() {
          return (
            /* binding */
            GridAreasDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatem": function ɵgrid_privatem() {
          return (
            /* binding */
            GridAreasStyleBuiler
          );
        },

        /* harmony export */
        "ɵgrid_privater": function ɵgrid_privater() {
          return (
            /* binding */
            DefaultGridAutoDirective
          );
        },

        /* harmony export */
        "ɵgrid_privateq": function ɵgrid_privateq() {
          return (
            /* binding */
            GridAutoDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatep": function ɵgrid_privatep() {
          return (
            /* binding */
            GridAutoStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privateu": function ɵgrid_privateu() {
          return (
            /* binding */
            DefaultGridColumnDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatet": function ɵgrid_privatet() {
          return (
            /* binding */
            GridColumnDirective
          );
        },

        /* harmony export */
        "ɵgrid_privates": function ɵgrid_privates() {
          return (
            /* binding */
            GridColumnStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privatex": function ɵgrid_privatex() {
          return (
            /* binding */
            DefaultGridColumnsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatew": function ɵgrid_privatew() {
          return (
            /* binding */
            GridColumnsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatev": function ɵgrid_privatev() {
          return (
            /* binding */
            GridColumnsStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privateba": function ɵgrid_privateba() {
          return (
            /* binding */
            DefaultGridGapDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatez": function ɵgrid_privatez() {
          return (
            /* binding */
            GridGapDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatey": function ɵgrid_privatey() {
          return (
            /* binding */
            GridGapStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privatec": function ɵgrid_privatec() {
          return (
            /* binding */
            DefaultGridAlignDirective
          );
        },

        /* harmony export */
        "ɵgrid_privateb": function ɵgrid_privateb() {
          return (
            /* binding */
            GridAlignDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatea": function ɵgrid_privatea() {
          return (
            /* binding */
            GridAlignStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privatebd": function ɵgrid_privatebd() {
          return (
            /* binding */
            DefaultGridRowDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatebc": function ɵgrid_privatebc() {
          return (
            /* binding */
            GridRowDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatebb": function ɵgrid_privatebb() {
          return (
            /* binding */
            GridRowStyleBuilder
          );
        },

        /* harmony export */
        "ɵgrid_privatebg": function ɵgrid_privatebg() {
          return (
            /* binding */
            DefaultGridRowsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatebf": function ɵgrid_privatebf() {
          return (
            /* binding */
            GridRowsDirective
          );
        },

        /* harmony export */
        "ɵgrid_privatebe": function ɵgrid_privatebe() {
          return (
            /* binding */
            GridRowsStyleBuilder
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      7716);
      /* harmony import */


      var _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/flex-layout/core */
      7736);
      /* harmony import */


      var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/cdk/coercion */
      9490);
      /**
       * @license
       * Copyright Google LLC All Rights Reserved.
       *
       * Use of this source code is governed by an MIT-style license that can be
       * found in the LICENSE file at https://angular.io/license
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: grid/grid-align/grid-align.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var ROW_DEFAULT = 'stretch';
      /** @type {?} */

      var COL_DEFAULT = 'stretch';

      var GridAlignStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_23) {
        _inherits(GridAlignStyleBuilder, _angular_flex_layout_23);

        var _super35 = _createSuper(GridAlignStyleBuilder);

        function GridAlignStyleBuilder() {
          _classCallCheck(this, GridAlignStyleBuilder);

          return _super35.apply(this, arguments);
        }

        _createClass(GridAlignStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @return {?}
           */
          function buildStyles(input) {
            return buildCss(input || ROW_DEFAULT);
          }
        }]);

        return GridAlignStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridAlignStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridAlignStyleBuilder_BaseFactory;
        return function GridAlignStyleBuilder_Factory(t) {
          return (ɵGridAlignStyleBuilder_BaseFactory || (ɵGridAlignStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridAlignStyleBuilder)))(t || GridAlignStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridAlignStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridAlignStyleBuilder_Factory() {
          return new GridAlignStyleBuilder();
        },
        token: GridAlignStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAlignStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridAlignDirective = /*#__PURE__*/function (_angular_flex_layout_24) {
        _inherits(GridAlignDirective, _angular_flex_layout_24);

        var _super36 = _createSuper(GridAlignDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridAlignDirective(elementRef, styleBuilder, styler, marshal) {
          var _this57;

          _classCallCheck(this, GridAlignDirective);

          _this57 = _super36.call(this, elementRef, styleBuilder, styler, marshal);
          _this57.DIRECTIVE_KEY = 'grid-align';
          _this57.styleCache = alignCache;

          _this57.init();

          return _this57;
        }

        return GridAlignDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridAlignDirective.ɵfac = function GridAlignDirective_Factory(t) {
        return new (t || GridAlignDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridAlignStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridAlignDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridAlignDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridAlignDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridAlignStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAlignDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridAlignStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();
      /** @type {?} */


      var alignCache = new Map();
      /** @type {?} */

      var inputs = ['gdGridAlign', 'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl', 'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl', 'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'];
      /** @type {?} */

      var selector = "\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n";
      /**
       * 'align' CSS Grid styling directive for grid children
       *  Defines positioning of child elements along row and column axis in a grid container
       *  Optional values: {row-axis} values or {row-axis column-axis} value pairs
       *
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self
       */

      var DefaultGridAlignDirective = /*#__PURE__*/function (_GridAlignDirective) {
        _inherits(DefaultGridAlignDirective, _GridAlignDirective);

        var _super37 = _createSuper(DefaultGridAlignDirective);

        function DefaultGridAlignDirective() {
          var _this58;

          _classCallCheck(this, DefaultGridAlignDirective);

          _this58 = _super37.apply(this, arguments);
          _this58.inputs = inputs;
          return _this58;
        }

        return DefaultGridAlignDirective;
      }(GridAlignDirective);

      DefaultGridAlignDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridAlignDirective_BaseFactory;
        return function DefaultGridAlignDirective_Factory(t) {
          return (ɵDefaultGridAlignDirective_BaseFactory || (ɵDefaultGridAlignDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridAlignDirective)))(t || DefaultGridAlignDirective);
        };
      }();

      DefaultGridAlignDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridAlignDirective,
        selectors: [["", "gdGridAlign", ""], ["", "gdGridAlign.xs", ""], ["", "gdGridAlign.sm", ""], ["", "gdGridAlign.md", ""], ["", "gdGridAlign.lg", ""], ["", "gdGridAlign.xl", ""], ["", "gdGridAlign.lt-sm", ""], ["", "gdGridAlign.lt-md", ""], ["", "gdGridAlign.lt-lg", ""], ["", "gdGridAlign.lt-xl", ""], ["", "gdGridAlign.gt-xs", ""], ["", "gdGridAlign.gt-sm", ""], ["", "gdGridAlign.gt-md", ""], ["", "gdGridAlign.gt-lg", ""]],
        inputs: {
          gdGridAlign: "gdGridAlign",
          "gdGridAlign.xs": "gdGridAlign.xs",
          "gdGridAlign.sm": "gdGridAlign.sm",
          "gdGridAlign.md": "gdGridAlign.md",
          "gdGridAlign.lg": "gdGridAlign.lg",
          "gdGridAlign.xl": "gdGridAlign.xl",
          "gdGridAlign.lt-sm": "gdGridAlign.lt-sm",
          "gdGridAlign.lt-md": "gdGridAlign.lt-md",
          "gdGridAlign.lt-lg": "gdGridAlign.lt-lg",
          "gdGridAlign.lt-xl": "gdGridAlign.lt-xl",
          "gdGridAlign.gt-xs": "gdGridAlign.gt-xs",
          "gdGridAlign.gt-sm": "gdGridAlign.gt-sm",
          "gdGridAlign.gt-md": "gdGridAlign.gt-md",
          "gdGridAlign.gt-lg": "gdGridAlign.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridAlignDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector,
            inputs: inputs
          }]
        }], null, null);
      })();
      /**
       * @param {?=} align
       * @return {?}
       */


      function buildCss() {
        var align = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

        /** @type {?} */
        var css = {};

        var _align$split3 = align.split(' '),
            _align$split4 = _slicedToArray(_align$split3, 2),
            rowAxis = _align$split4[0],
            columnAxis = _align$split4[1]; // Row axis


        switch (rowAxis) {
          case 'end':
            css['justify-self'] = 'end';
            break;

          case 'center':
            css['justify-self'] = 'center';
            break;

          case 'stretch':
            css['justify-self'] = 'stretch';
            break;

          case 'start':
            css['justify-self'] = 'start';
            break;

          default:
            css['justify-self'] = ROW_DEFAULT; // default row axis

            break;
        } // Column axis


        switch (columnAxis) {
          case 'end':
            css['align-self'] = 'end';
            break;

          case 'center':
            css['align-self'] = 'center';
            break;

          case 'stretch':
            css['align-self'] = 'stretch';
            break;

          case 'start':
            css['align-self'] = 'start';
            break;

          default:
            css['align-self'] = COL_DEFAULT; // default column axis

            break;
        }

        return css;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/align-columns/align-columns.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_MAIN = 'start';
      /** @type {?} */

      var DEFAULT_CROSS = 'stretch';

      var GridAlignColumnsStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_25) {
        _inherits(GridAlignColumnsStyleBuilder, _angular_flex_layout_25);

        var _super38 = _createSuper(GridAlignColumnsStyleBuilder);

        function GridAlignColumnsStyleBuilder() {
          _classCallCheck(this, GridAlignColumnsStyleBuilder);

          return _super38.apply(this, arguments);
        }

        _createClass(GridAlignColumnsStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(input, parent) {
            return buildCss$1(input || "".concat(DEFAULT_MAIN, " ").concat(DEFAULT_CROSS), parent.inline);
          }
        }]);

        return GridAlignColumnsStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridAlignColumnsStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridAlignColumnsStyleBuilder_BaseFactory;
        return function GridAlignColumnsStyleBuilder_Factory(t) {
          return (ɵGridAlignColumnsStyleBuilder_BaseFactory || (ɵGridAlignColumnsStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridAlignColumnsStyleBuilder)))(t || GridAlignColumnsStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridAlignColumnsStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridAlignColumnsStyleBuilder_Factory() {
          return new GridAlignColumnsStyleBuilder();
        },
        token: GridAlignColumnsStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAlignColumnsStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridAlignColumnsDirective = /*#__PURE__*/function (_angular_flex_layout_26) {
        _inherits(GridAlignColumnsDirective, _angular_flex_layout_26);

        var _super39 = _createSuper(GridAlignColumnsDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridAlignColumnsDirective(elementRef, styleBuilder, styler, marshal) {
          var _this59;

          _classCallCheck(this, GridAlignColumnsDirective);

          _this59 = _super39.call(this, elementRef, styleBuilder, styler, marshal);
          _this59.DIRECTIVE_KEY = 'grid-align-columns';
          _this59._inline = false;

          _this59.init();

          return _this59;
        }
        /**
         * @return {?}
         */


        _createClass(GridAlignColumnsDirective, [{
          key: "inline",
          get: function get() {
            return this._inline;
          }
          /**
           * @param {?} val
           * @return {?}
           */
          ,
          set: function set(val) {
            this._inline = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.coerceBooleanProperty)(val);
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;
            this.addStyles(value, {
              inline: this.inline
            });
          }
        }]);

        return GridAlignColumnsDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridAlignColumnsDirective.ɵfac = function GridAlignColumnsDirective_Factory(t) {
        return new (t || GridAlignColumnsDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridAlignColumnsStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridAlignColumnsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridAlignColumnsDirective,
        inputs: {
          inline: ["gdInline", "inline"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridAlignColumnsDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridAlignColumnsStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      GridAlignColumnsDirective.propDecorators = {
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['gdInline']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAlignColumnsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridAlignColumnsStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          inline: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['gdInline']
          }]
        });
      })();
      /** @type {?} */


      var alignColumnsCache = new Map();
      /** @type {?} */

      var alignColumnsInlineCache = new Map();
      /** @type {?} */

      var inputs$1 = ['gdAlignColumns', 'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md', 'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm', 'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl', 'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md', 'gdAlignColumns.gt-lg'];
      /** @type {?} */

      var selector$1 = "\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n";
      /**
       * 'column alignment' CSS Grid styling directive
       * Configures the alignment in the column direction
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21
       */

      var DefaultGridAlignColumnsDirective = /*#__PURE__*/function (_GridAlignColumnsDire) {
        _inherits(DefaultGridAlignColumnsDirective, _GridAlignColumnsDire);

        var _super40 = _createSuper(DefaultGridAlignColumnsDirective);

        function DefaultGridAlignColumnsDirective() {
          var _this60;

          _classCallCheck(this, DefaultGridAlignColumnsDirective);

          _this60 = _super40.apply(this, arguments);
          _this60.inputs = inputs$1;
          return _this60;
        }

        return DefaultGridAlignColumnsDirective;
      }(GridAlignColumnsDirective);

      DefaultGridAlignColumnsDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridAlignColumnsDirective_BaseFactory;
        return function DefaultGridAlignColumnsDirective_Factory(t) {
          return (ɵDefaultGridAlignColumnsDirective_BaseFactory || (ɵDefaultGridAlignColumnsDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridAlignColumnsDirective)))(t || DefaultGridAlignColumnsDirective);
        };
      }();

      DefaultGridAlignColumnsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridAlignColumnsDirective,
        selectors: [["", "gdAlignColumns", ""], ["", "gdAlignColumns.xs", ""], ["", "gdAlignColumns.sm", ""], ["", "gdAlignColumns.md", ""], ["", "gdAlignColumns.lg", ""], ["", "gdAlignColumns.xl", ""], ["", "gdAlignColumns.lt-sm", ""], ["", "gdAlignColumns.lt-md", ""], ["", "gdAlignColumns.lt-lg", ""], ["", "gdAlignColumns.lt-xl", ""], ["", "gdAlignColumns.gt-xs", ""], ["", "gdAlignColumns.gt-sm", ""], ["", "gdAlignColumns.gt-md", ""], ["", "gdAlignColumns.gt-lg", ""]],
        inputs: {
          gdAlignColumns: "gdAlignColumns",
          "gdAlignColumns.xs": "gdAlignColumns.xs",
          "gdAlignColumns.sm": "gdAlignColumns.sm",
          "gdAlignColumns.md": "gdAlignColumns.md",
          "gdAlignColumns.lg": "gdAlignColumns.lg",
          "gdAlignColumns.xl": "gdAlignColumns.xl",
          "gdAlignColumns.lt-sm": "gdAlignColumns.lt-sm",
          "gdAlignColumns.lt-md": "gdAlignColumns.lt-md",
          "gdAlignColumns.lt-lg": "gdAlignColumns.lt-lg",
          "gdAlignColumns.lt-xl": "gdAlignColumns.lt-xl",
          "gdAlignColumns.gt-xs": "gdAlignColumns.gt-xs",
          "gdAlignColumns.gt-sm": "gdAlignColumns.gt-sm",
          "gdAlignColumns.gt-md": "gdAlignColumns.gt-md",
          "gdAlignColumns.gt-lg": "gdAlignColumns.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridAlignColumnsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$1,
            inputs: inputs$1
          }]
        }], null, null);
      })();
      /**
       * @param {?} align
       * @param {?} inline
       * @return {?}
       */


      function buildCss$1(align, inline) {
        /** @type {?} */
        var css = {};

        var _align$split5 = align.split(' '),
            _align$split6 = _slicedToArray(_align$split5, 2),
            mainAxis = _align$split6[0],
            crossAxis = _align$split6[1]; // Main axis


        switch (mainAxis) {
          case 'center':
            css['align-content'] = 'center';
            break;

          case 'space-around':
            css['align-content'] = 'space-around';
            break;

          case 'space-between':
            css['align-content'] = 'space-between';
            break;

          case 'space-evenly':
            css['align-content'] = 'space-evenly';
            break;

          case 'end':
            css['align-content'] = 'end';
            break;

          case 'start':
            css['align-content'] = 'start';
            break;

          case 'stretch':
            css['align-content'] = 'stretch';
            break;

          default:
            css['align-content'] = DEFAULT_MAIN; // default main axis

            break;
        } // Cross-axis


        switch (crossAxis) {
          case 'start':
            css['align-items'] = 'start';
            break;

          case 'center':
            css['align-items'] = 'center';
            break;

          case 'end':
            css['align-items'] = 'end';
            break;

          case 'stretch':
            css['align-items'] = 'stretch';
            break;

          default:
            // 'stretch'
            css['align-items'] = DEFAULT_CROSS; // default cross axis

            break;
        }

        css['display'] = inline ? 'inline-grid' : 'grid';
        return css;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/align-rows/align-rows.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_MAIN$1 = 'start';
      /** @type {?} */

      var DEFAULT_CROSS$1 = 'stretch';

      var GridAlignRowsStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_27) {
        _inherits(GridAlignRowsStyleBuilder, _angular_flex_layout_27);

        var _super41 = _createSuper(GridAlignRowsStyleBuilder);

        function GridAlignRowsStyleBuilder() {
          _classCallCheck(this, GridAlignRowsStyleBuilder);

          return _super41.apply(this, arguments);
        }

        _createClass(GridAlignRowsStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(input, parent) {
            return buildCss$2(input || "".concat(DEFAULT_MAIN$1, " ").concat(DEFAULT_CROSS$1), parent.inline);
          }
        }]);

        return GridAlignRowsStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridAlignRowsStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridAlignRowsStyleBuilder_BaseFactory;
        return function GridAlignRowsStyleBuilder_Factory(t) {
          return (ɵGridAlignRowsStyleBuilder_BaseFactory || (ɵGridAlignRowsStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridAlignRowsStyleBuilder)))(t || GridAlignRowsStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridAlignRowsStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridAlignRowsStyleBuilder_Factory() {
          return new GridAlignRowsStyleBuilder();
        },
        token: GridAlignRowsStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAlignRowsStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridAlignRowsDirective = /*#__PURE__*/function (_angular_flex_layout_28) {
        _inherits(GridAlignRowsDirective, _angular_flex_layout_28);

        var _super42 = _createSuper(GridAlignRowsDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridAlignRowsDirective(elementRef, styleBuilder, styler, marshal) {
          var _this61;

          _classCallCheck(this, GridAlignRowsDirective);

          _this61 = _super42.call(this, elementRef, styleBuilder, styler, marshal);
          _this61.DIRECTIVE_KEY = 'grid-align-rows';
          _this61._inline = false;

          _this61.init();

          return _this61;
        }
        /**
         * @return {?}
         */


        _createClass(GridAlignRowsDirective, [{
          key: "inline",
          get: function get() {
            return this._inline;
          }
          /**
           * @param {?} val
           * @return {?}
           */
          ,
          set: function set(val) {
            this._inline = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.coerceBooleanProperty)(val);
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;
            this.addStyles(value, {
              inline: this.inline
            });
          }
        }]);

        return GridAlignRowsDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridAlignRowsDirective.ɵfac = function GridAlignRowsDirective_Factory(t) {
        return new (t || GridAlignRowsDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridAlignRowsStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridAlignRowsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridAlignRowsDirective,
        inputs: {
          inline: ["gdInline", "inline"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridAlignRowsDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridAlignRowsStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      GridAlignRowsDirective.propDecorators = {
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['gdInline']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAlignRowsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridAlignRowsStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          inline: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['gdInline']
          }]
        });
      })();
      /** @type {?} */


      var alignRowsCache = new Map();
      /** @type {?} */

      var alignRowsInlineCache = new Map();
      /** @type {?} */

      var inputs$2 = ['gdAlignRows', 'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md', 'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm', 'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl', 'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md', 'gdAlignRows.gt-lg'];
      /** @type {?} */

      var selector$2 = "\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n";
      /**
       * 'row alignment' CSS Grid styling directive
       * Configures the alignment in the row direction
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20
       */

      var DefaultGridAlignRowsDirective = /*#__PURE__*/function (_GridAlignRowsDirecti) {
        _inherits(DefaultGridAlignRowsDirective, _GridAlignRowsDirecti);

        var _super43 = _createSuper(DefaultGridAlignRowsDirective);

        function DefaultGridAlignRowsDirective() {
          var _this62;

          _classCallCheck(this, DefaultGridAlignRowsDirective);

          _this62 = _super43.apply(this, arguments);
          _this62.inputs = inputs$2;
          return _this62;
        }

        return DefaultGridAlignRowsDirective;
      }(GridAlignRowsDirective);

      DefaultGridAlignRowsDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridAlignRowsDirective_BaseFactory;
        return function DefaultGridAlignRowsDirective_Factory(t) {
          return (ɵDefaultGridAlignRowsDirective_BaseFactory || (ɵDefaultGridAlignRowsDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridAlignRowsDirective)))(t || DefaultGridAlignRowsDirective);
        };
      }();

      DefaultGridAlignRowsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridAlignRowsDirective,
        selectors: [["", "gdAlignRows", ""], ["", "gdAlignRows.xs", ""], ["", "gdAlignRows.sm", ""], ["", "gdAlignRows.md", ""], ["", "gdAlignRows.lg", ""], ["", "gdAlignRows.xl", ""], ["", "gdAlignRows.lt-sm", ""], ["", "gdAlignRows.lt-md", ""], ["", "gdAlignRows.lt-lg", ""], ["", "gdAlignRows.lt-xl", ""], ["", "gdAlignRows.gt-xs", ""], ["", "gdAlignRows.gt-sm", ""], ["", "gdAlignRows.gt-md", ""], ["", "gdAlignRows.gt-lg", ""]],
        inputs: {
          gdAlignRows: "gdAlignRows",
          "gdAlignRows.xs": "gdAlignRows.xs",
          "gdAlignRows.sm": "gdAlignRows.sm",
          "gdAlignRows.md": "gdAlignRows.md",
          "gdAlignRows.lg": "gdAlignRows.lg",
          "gdAlignRows.xl": "gdAlignRows.xl",
          "gdAlignRows.lt-sm": "gdAlignRows.lt-sm",
          "gdAlignRows.lt-md": "gdAlignRows.lt-md",
          "gdAlignRows.lt-lg": "gdAlignRows.lt-lg",
          "gdAlignRows.lt-xl": "gdAlignRows.lt-xl",
          "gdAlignRows.gt-xs": "gdAlignRows.gt-xs",
          "gdAlignRows.gt-sm": "gdAlignRows.gt-sm",
          "gdAlignRows.gt-md": "gdAlignRows.gt-md",
          "gdAlignRows.gt-lg": "gdAlignRows.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridAlignRowsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$2,
            inputs: inputs$2
          }]
        }], null, null);
      })();
      /**
       * @param {?} align
       * @param {?} inline
       * @return {?}
       */


      function buildCss$2(align, inline) {
        /** @type {?} */
        var css = {};

        var _align$split7 = align.split(' '),
            _align$split8 = _slicedToArray(_align$split7, 2),
            mainAxis = _align$split8[0],
            crossAxis = _align$split8[1]; // Main axis


        switch (mainAxis) {
          case 'center':
          case 'space-around':
          case 'space-between':
          case 'space-evenly':
          case 'end':
          case 'start':
          case 'stretch':
            css['justify-content'] = mainAxis;
            break;

          default:
            css['justify-content'] = DEFAULT_MAIN$1; // default main axis

            break;
        } // Cross-axis


        switch (crossAxis) {
          case 'start':
          case 'center':
          case 'end':
          case 'stretch':
            css['justify-items'] = crossAxis;
            break;

          default:
            // 'stretch'
            css['justify-items'] = DEFAULT_CROSS$1; // default cross axis

            break;
        }

        css['display'] = inline ? 'inline-grid' : 'grid';
        return css;
      }
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/area/area.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE = 'auto';

      var GridAreaStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_29) {
        _inherits(GridAreaStyleBuilder, _angular_flex_layout_29);

        var _super44 = _createSuper(GridAreaStyleBuilder);

        function GridAreaStyleBuilder() {
          _classCallCheck(this, GridAreaStyleBuilder);

          return _super44.apply(this, arguments);
        }

        _createClass(GridAreaStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @return {?}
           */
          function buildStyles(input) {
            return {
              'grid-area': input || DEFAULT_VALUE
            };
          }
        }]);

        return GridAreaStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridAreaStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridAreaStyleBuilder_BaseFactory;
        return function GridAreaStyleBuilder_Factory(t) {
          return (ɵGridAreaStyleBuilder_BaseFactory || (ɵGridAreaStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridAreaStyleBuilder)))(t || GridAreaStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridAreaStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridAreaStyleBuilder_Factory() {
          return new GridAreaStyleBuilder();
        },
        token: GridAreaStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAreaStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridAreaDirective = /*#__PURE__*/function (_angular_flex_layout_30) {
        _inherits(GridAreaDirective, _angular_flex_layout_30);

        var _super45 = _createSuper(GridAreaDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function GridAreaDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this63;

          _classCallCheck(this, GridAreaDirective);

          _this63 = _super45.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this63.DIRECTIVE_KEY = 'grid-area';
          _this63.styleCache = gridAreaCache;

          _this63.init();

          return _this63;
        }

        return GridAreaDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridAreaDirective.ɵfac = function GridAreaDirective_Factory(t) {
        return new (t || GridAreaDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridAreaStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridAreaDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridAreaDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridAreaDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: GridAreaStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAreaDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: GridAreaStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();
      /** @type {?} */


      var gridAreaCache = new Map();
      /** @type {?} */

      var inputs$3 = ['gdArea', 'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl', 'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl', 'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'];
      /** @type {?} */

      var selector$3 = "\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n";
      /**
       * 'grid-area' CSS Grid styling directive
       * Configures the name or position of an element within the grid
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27
       */

      var DefaultGridAreaDirective = /*#__PURE__*/function (_GridAreaDirective) {
        _inherits(DefaultGridAreaDirective, _GridAreaDirective);

        var _super46 = _createSuper(DefaultGridAreaDirective);

        function DefaultGridAreaDirective() {
          var _this64;

          _classCallCheck(this, DefaultGridAreaDirective);

          _this64 = _super46.apply(this, arguments);
          _this64.inputs = inputs$3;
          return _this64;
        }

        return DefaultGridAreaDirective;
      }(GridAreaDirective);

      DefaultGridAreaDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridAreaDirective_BaseFactory;
        return function DefaultGridAreaDirective_Factory(t) {
          return (ɵDefaultGridAreaDirective_BaseFactory || (ɵDefaultGridAreaDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridAreaDirective)))(t || DefaultGridAreaDirective);
        };
      }();

      DefaultGridAreaDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridAreaDirective,
        selectors: [["", "gdArea", ""], ["", "gdArea.xs", ""], ["", "gdArea.sm", ""], ["", "gdArea.md", ""], ["", "gdArea.lg", ""], ["", "gdArea.xl", ""], ["", "gdArea.lt-sm", ""], ["", "gdArea.lt-md", ""], ["", "gdArea.lt-lg", ""], ["", "gdArea.lt-xl", ""], ["", "gdArea.gt-xs", ""], ["", "gdArea.gt-sm", ""], ["", "gdArea.gt-md", ""], ["", "gdArea.gt-lg", ""]],
        inputs: {
          gdArea: "gdArea",
          "gdArea.xs": "gdArea.xs",
          "gdArea.sm": "gdArea.sm",
          "gdArea.md": "gdArea.md",
          "gdArea.lg": "gdArea.lg",
          "gdArea.xl": "gdArea.xl",
          "gdArea.lt-sm": "gdArea.lt-sm",
          "gdArea.lt-md": "gdArea.lt-md",
          "gdArea.lt-lg": "gdArea.lt-lg",
          "gdArea.lt-xl": "gdArea.lt-xl",
          "gdArea.gt-xs": "gdArea.gt-xs",
          "gdArea.gt-sm": "gdArea.gt-sm",
          "gdArea.gt-md": "gdArea.gt-md",
          "gdArea.gt-lg": "gdArea.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridAreaDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$3,
            inputs: inputs$3
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/areas/areas.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE$1 = 'none';
      /** @type {?} */

      var DELIMETER = '|';

      var GridAreasStyleBuiler = /*#__PURE__*/function (_angular_flex_layout_31) {
        _inherits(GridAreasStyleBuiler, _angular_flex_layout_31);

        var _super47 = _createSuper(GridAreasStyleBuiler);

        function GridAreasStyleBuiler() {
          _classCallCheck(this, GridAreasStyleBuiler);

          return _super47.apply(this, arguments);
        }

        _createClass(GridAreasStyleBuiler, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(input, parent) {
            /** @type {?} */
            var areas = (input || DEFAULT_VALUE$1).split(DELIMETER).map(
            /**
            * @param {?} v
            * @return {?}
            */
            function (v) {
              return "\"".concat(v.trim(), "\"");
            });
            return {
              'display': parent.inline ? 'inline-grid' : 'grid',
              'grid-template-areas': areas.join(' ')
            };
          }
        }]);

        return GridAreasStyleBuiler;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridAreasStyleBuiler.ɵfac = /*@__PURE__*/function () {
        var ɵGridAreasStyleBuiler_BaseFactory;
        return function GridAreasStyleBuiler_Factory(t) {
          return (ɵGridAreasStyleBuiler_BaseFactory || (ɵGridAreasStyleBuiler_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridAreasStyleBuiler)))(t || GridAreasStyleBuiler);
        };
      }();
      /** @nocollapse */


      GridAreasStyleBuiler.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridAreasStyleBuiler_Factory() {
          return new GridAreasStyleBuiler();
        },
        token: GridAreasStyleBuiler,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAreasStyleBuiler, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridAreasDirective = /*#__PURE__*/function (_angular_flex_layout_32) {
        _inherits(GridAreasDirective, _angular_flex_layout_32);

        var _super48 = _createSuper(GridAreasDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function GridAreasDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this65;

          _classCallCheck(this, GridAreasDirective);

          _this65 = _super48.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this65.DIRECTIVE_KEY = 'grid-areas';
          _this65._inline = false;

          _this65.init();

          return _this65;
        }
        /**
         * @return {?}
         */


        _createClass(GridAreasDirective, [{
          key: "inline",
          get: function get() {
            return this._inline;
          }
          /**
           * @param {?} val
           * @return {?}
           */
          ,
          set: function set(val) {
            this._inline = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.coerceBooleanProperty)(val);
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.styleCache = this.inline ? areasInlineCache : areasCache;
            this.addStyles(value, {
              inline: this.inline
            });
          }
        }]);

        return GridAreasDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridAreasDirective.ɵfac = function GridAreasDirective_Factory(t) {
        return new (t || GridAreasDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridAreasStyleBuiler), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridAreasDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridAreasDirective,
        inputs: {
          inline: ["gdInline", "inline"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridAreasDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: GridAreasStyleBuiler
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      GridAreasDirective.propDecorators = {
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['gdInline']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAreasDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: GridAreasStyleBuiler
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          inline: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['gdInline']
          }]
        });
      })();
      /** @type {?} */


      var areasCache = new Map();
      /** @type {?} */

      var areasInlineCache = new Map();
      /** @type {?} */

      var inputs$4 = ['gdAreas', 'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl', 'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl', 'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'];
      /** @type {?} */

      var selector$4 = "\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n";
      /**
       * 'grid-template-areas' CSS Grid styling directive
       * Configures the names of elements within the grid
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14
       */

      var DefaultGridAreasDirective = /*#__PURE__*/function (_GridAreasDirective) {
        _inherits(DefaultGridAreasDirective, _GridAreasDirective);

        var _super49 = _createSuper(DefaultGridAreasDirective);

        function DefaultGridAreasDirective() {
          var _this66;

          _classCallCheck(this, DefaultGridAreasDirective);

          _this66 = _super49.apply(this, arguments);
          _this66.inputs = inputs$4;
          return _this66;
        }

        return DefaultGridAreasDirective;
      }(GridAreasDirective);

      DefaultGridAreasDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridAreasDirective_BaseFactory;
        return function DefaultGridAreasDirective_Factory(t) {
          return (ɵDefaultGridAreasDirective_BaseFactory || (ɵDefaultGridAreasDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridAreasDirective)))(t || DefaultGridAreasDirective);
        };
      }();

      DefaultGridAreasDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridAreasDirective,
        selectors: [["", "gdAreas", ""], ["", "gdAreas.xs", ""], ["", "gdAreas.sm", ""], ["", "gdAreas.md", ""], ["", "gdAreas.lg", ""], ["", "gdAreas.xl", ""], ["", "gdAreas.lt-sm", ""], ["", "gdAreas.lt-md", ""], ["", "gdAreas.lt-lg", ""], ["", "gdAreas.lt-xl", ""], ["", "gdAreas.gt-xs", ""], ["", "gdAreas.gt-sm", ""], ["", "gdAreas.gt-md", ""], ["", "gdAreas.gt-lg", ""]],
        inputs: {
          gdAreas: "gdAreas",
          "gdAreas.xs": "gdAreas.xs",
          "gdAreas.sm": "gdAreas.sm",
          "gdAreas.md": "gdAreas.md",
          "gdAreas.lg": "gdAreas.lg",
          "gdAreas.xl": "gdAreas.xl",
          "gdAreas.lt-sm": "gdAreas.lt-sm",
          "gdAreas.lt-md": "gdAreas.lt-md",
          "gdAreas.lt-lg": "gdAreas.lt-lg",
          "gdAreas.lt-xl": "gdAreas.lt-xl",
          "gdAreas.gt-xs": "gdAreas.gt-xs",
          "gdAreas.gt-sm": "gdAreas.gt-sm",
          "gdAreas.gt-md": "gdAreas.gt-md",
          "gdAreas.gt-lg": "gdAreas.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridAreasDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$4,
            inputs: inputs$4
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/auto/auto.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE$2 = 'initial';

      var GridAutoStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_33) {
        _inherits(GridAutoStyleBuilder, _angular_flex_layout_33);

        var _super50 = _createSuper(GridAutoStyleBuilder);

        function GridAutoStyleBuilder() {
          _classCallCheck(this, GridAutoStyleBuilder);

          return _super50.apply(this, arguments);
        }

        _createClass(GridAutoStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(input, parent) {
            var _split = (input || DEFAULT_VALUE$2).split(' '),
                _split2 = _slicedToArray(_split, 2),
                direction = _split2[0],
                dense = _split2[1];

            if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {
              direction = 'row';
            }

            dense = dense === 'dense' && direction !== 'dense' ? ' dense' : '';
            return {
              'display': parent.inline ? 'inline-grid' : 'grid',
              'grid-auto-flow': direction + dense
            };
          }
        }]);

        return GridAutoStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridAutoStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridAutoStyleBuilder_BaseFactory;
        return function GridAutoStyleBuilder_Factory(t) {
          return (ɵGridAutoStyleBuilder_BaseFactory || (ɵGridAutoStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridAutoStyleBuilder)))(t || GridAutoStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridAutoStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridAutoStyleBuilder_Factory() {
          return new GridAutoStyleBuilder();
        },
        token: GridAutoStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAutoStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridAutoDirective = /*#__PURE__*/function (_angular_flex_layout_34) {
        _inherits(GridAutoDirective, _angular_flex_layout_34);

        var _super51 = _createSuper(GridAutoDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridAutoDirective(elementRef, styleBuilder, styler, marshal) {
          var _this67;

          _classCallCheck(this, GridAutoDirective);

          _this67 = _super51.call(this, elementRef, styleBuilder, styler, marshal);
          _this67._inline = false;
          _this67.DIRECTIVE_KEY = 'grid-auto';

          _this67.init();

          return _this67;
        }
        /**
         * @return {?}
         */


        _createClass(GridAutoDirective, [{
          key: "inline",
          get: function get() {
            return this._inline;
          }
          /**
           * @param {?} val
           * @return {?}
           */
          ,
          set: function set(val) {
            this._inline = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.coerceBooleanProperty)(val);
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.styleCache = this.inline ? autoInlineCache : autoCache;
            this.addStyles(value, {
              inline: this.inline
            });
          }
        }]);

        return GridAutoDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridAutoDirective.ɵfac = function GridAutoDirective_Factory(t) {
        return new (t || GridAutoDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridAutoStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridAutoDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridAutoDirective,
        inputs: {
          inline: ["gdInline", "inline"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridAutoDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridAutoStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      GridAutoDirective.propDecorators = {
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['gdInline']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridAutoDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridAutoStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          inline: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['gdInline']
          }]
        });
      })();
      /** @type {?} */


      var autoCache = new Map();
      /** @type {?} */

      var autoInlineCache = new Map();
      /** @type {?} */

      var inputs$5 = ['gdAuto', 'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl', 'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl', 'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'];
      /** @type {?} */

      var selector$5 = "\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n";
      /**
       * 'grid-auto-flow' CSS Grid styling directive
       * Configures the auto placement algorithm for the grid
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23
       */

      var DefaultGridAutoDirective = /*#__PURE__*/function (_GridAutoDirective) {
        _inherits(DefaultGridAutoDirective, _GridAutoDirective);

        var _super52 = _createSuper(DefaultGridAutoDirective);

        function DefaultGridAutoDirective() {
          var _this68;

          _classCallCheck(this, DefaultGridAutoDirective);

          _this68 = _super52.apply(this, arguments);
          _this68.inputs = inputs$5;
          return _this68;
        }

        return DefaultGridAutoDirective;
      }(GridAutoDirective);

      DefaultGridAutoDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridAutoDirective_BaseFactory;
        return function DefaultGridAutoDirective_Factory(t) {
          return (ɵDefaultGridAutoDirective_BaseFactory || (ɵDefaultGridAutoDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridAutoDirective)))(t || DefaultGridAutoDirective);
        };
      }();

      DefaultGridAutoDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridAutoDirective,
        selectors: [["", "gdAuto", ""], ["", "gdAuto.xs", ""], ["", "gdAuto.sm", ""], ["", "gdAuto.md", ""], ["", "gdAuto.lg", ""], ["", "gdAuto.xl", ""], ["", "gdAuto.lt-sm", ""], ["", "gdAuto.lt-md", ""], ["", "gdAuto.lt-lg", ""], ["", "gdAuto.lt-xl", ""], ["", "gdAuto.gt-xs", ""], ["", "gdAuto.gt-sm", ""], ["", "gdAuto.gt-md", ""], ["", "gdAuto.gt-lg", ""]],
        inputs: {
          gdAuto: "gdAuto",
          "gdAuto.xs": "gdAuto.xs",
          "gdAuto.sm": "gdAuto.sm",
          "gdAuto.md": "gdAuto.md",
          "gdAuto.lg": "gdAuto.lg",
          "gdAuto.xl": "gdAuto.xl",
          "gdAuto.lt-sm": "gdAuto.lt-sm",
          "gdAuto.lt-md": "gdAuto.lt-md",
          "gdAuto.lt-lg": "gdAuto.lt-lg",
          "gdAuto.lt-xl": "gdAuto.lt-xl",
          "gdAuto.gt-xs": "gdAuto.gt-xs",
          "gdAuto.gt-sm": "gdAuto.gt-sm",
          "gdAuto.gt-md": "gdAuto.gt-md",
          "gdAuto.gt-lg": "gdAuto.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridAutoDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$5,
            inputs: inputs$5
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/column/column.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE$3 = 'auto';

      var GridColumnStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_35) {
        _inherits(GridColumnStyleBuilder, _angular_flex_layout_35);

        var _super53 = _createSuper(GridColumnStyleBuilder);

        function GridColumnStyleBuilder() {
          _classCallCheck(this, GridColumnStyleBuilder);

          return _super53.apply(this, arguments);
        }

        _createClass(GridColumnStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @return {?}
           */
          function buildStyles(input) {
            return {
              'grid-column': input || DEFAULT_VALUE$3
            };
          }
        }]);

        return GridColumnStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridColumnStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridColumnStyleBuilder_BaseFactory;
        return function GridColumnStyleBuilder_Factory(t) {
          return (ɵGridColumnStyleBuilder_BaseFactory || (ɵGridColumnStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridColumnStyleBuilder)))(t || GridColumnStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridColumnStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridColumnStyleBuilder_Factory() {
          return new GridColumnStyleBuilder();
        },
        token: GridColumnStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridColumnStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridColumnDirective = /*#__PURE__*/function (_angular_flex_layout_36) {
        _inherits(GridColumnDirective, _angular_flex_layout_36);

        var _super54 = _createSuper(GridColumnDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridColumnDirective(elementRef, styleBuilder, styler, marshal) {
          var _this69;

          _classCallCheck(this, GridColumnDirective);

          _this69 = _super54.call(this, elementRef, styleBuilder, styler, marshal);
          _this69.DIRECTIVE_KEY = 'grid-column';
          _this69.styleCache = columnCache;

          _this69.init();

          return _this69;
        }

        return GridColumnDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridColumnDirective.ɵfac = function GridColumnDirective_Factory(t) {
        return new (t || GridColumnDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridColumnStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridColumnDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridColumnDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridColumnDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridColumnStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridColumnDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridColumnStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();
      /** @type {?} */


      var columnCache = new Map();
      /** @type {?} */

      var inputs$6 = ['gdColumn', 'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl', 'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl', 'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'];
      /** @type {?} */

      var selector$6 = "\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n";
      /**
       * 'grid-column' CSS Grid styling directive
       * Configures the name or position of an element within the grid
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26
       */

      var DefaultGridColumnDirective = /*#__PURE__*/function (_GridColumnDirective) {
        _inherits(DefaultGridColumnDirective, _GridColumnDirective);

        var _super55 = _createSuper(DefaultGridColumnDirective);

        function DefaultGridColumnDirective() {
          var _this70;

          _classCallCheck(this, DefaultGridColumnDirective);

          _this70 = _super55.apply(this, arguments);
          _this70.inputs = inputs$6;
          return _this70;
        }

        return DefaultGridColumnDirective;
      }(GridColumnDirective);

      DefaultGridColumnDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridColumnDirective_BaseFactory;
        return function DefaultGridColumnDirective_Factory(t) {
          return (ɵDefaultGridColumnDirective_BaseFactory || (ɵDefaultGridColumnDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridColumnDirective)))(t || DefaultGridColumnDirective);
        };
      }();

      DefaultGridColumnDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridColumnDirective,
        selectors: [["", "gdColumn", ""], ["", "gdColumn.xs", ""], ["", "gdColumn.sm", ""], ["", "gdColumn.md", ""], ["", "gdColumn.lg", ""], ["", "gdColumn.xl", ""], ["", "gdColumn.lt-sm", ""], ["", "gdColumn.lt-md", ""], ["", "gdColumn.lt-lg", ""], ["", "gdColumn.lt-xl", ""], ["", "gdColumn.gt-xs", ""], ["", "gdColumn.gt-sm", ""], ["", "gdColumn.gt-md", ""], ["", "gdColumn.gt-lg", ""]],
        inputs: {
          gdColumn: "gdColumn",
          "gdColumn.xs": "gdColumn.xs",
          "gdColumn.sm": "gdColumn.sm",
          "gdColumn.md": "gdColumn.md",
          "gdColumn.lg": "gdColumn.lg",
          "gdColumn.xl": "gdColumn.xl",
          "gdColumn.lt-sm": "gdColumn.lt-sm",
          "gdColumn.lt-md": "gdColumn.lt-md",
          "gdColumn.lt-lg": "gdColumn.lt-lg",
          "gdColumn.lt-xl": "gdColumn.lt-xl",
          "gdColumn.gt-xs": "gdColumn.gt-xs",
          "gdColumn.gt-sm": "gdColumn.gt-sm",
          "gdColumn.gt-md": "gdColumn.gt-md",
          "gdColumn.gt-lg": "gdColumn.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridColumnDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$6,
            inputs: inputs$6
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/columns/columns.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE$4 = 'none';
      /** @type {?} */

      var AUTO_SPECIFIER = '!';

      var GridColumnsStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_37) {
        _inherits(GridColumnsStyleBuilder, _angular_flex_layout_37);

        var _super56 = _createSuper(GridColumnsStyleBuilder);

        function GridColumnsStyleBuilder() {
          _classCallCheck(this, GridColumnsStyleBuilder);

          return _super56.apply(this, arguments);
        }

        _createClass(GridColumnsStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(input, parent) {
            input = input || DEFAULT_VALUE$4;
            /** @type {?} */

            var auto = false;

            if (input.endsWith(AUTO_SPECIFIER)) {
              input = input.substring(0, input.indexOf(AUTO_SPECIFIER));
              auto = true;
            }
            /** @type {?} */


            var css = {
              'display': parent.inline ? 'inline-grid' : 'grid',
              'grid-auto-columns': '',
              'grid-template-columns': ''
            };
            /** @type {?} */

            var key = auto ? 'grid-auto-columns' : 'grid-template-columns';
            css[key] = input;
            return css;
          }
        }]);

        return GridColumnsStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridColumnsStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridColumnsStyleBuilder_BaseFactory;
        return function GridColumnsStyleBuilder_Factory(t) {
          return (ɵGridColumnsStyleBuilder_BaseFactory || (ɵGridColumnsStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridColumnsStyleBuilder)))(t || GridColumnsStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridColumnsStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridColumnsStyleBuilder_Factory() {
          return new GridColumnsStyleBuilder();
        },
        token: GridColumnsStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridColumnsStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridColumnsDirective = /*#__PURE__*/function (_angular_flex_layout_38) {
        _inherits(GridColumnsDirective, _angular_flex_layout_38);

        var _super57 = _createSuper(GridColumnsDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridColumnsDirective(elementRef, styleBuilder, styler, marshal) {
          var _this71;

          _classCallCheck(this, GridColumnsDirective);

          _this71 = _super57.call(this, elementRef, styleBuilder, styler, marshal);
          _this71.DIRECTIVE_KEY = 'grid-columns';
          _this71._inline = false;

          _this71.init();

          return _this71;
        }
        /**
         * @return {?}
         */


        _createClass(GridColumnsDirective, [{
          key: "inline",
          get: function get() {
            return this._inline;
          }
          /**
           * @param {?} val
           * @return {?}
           */
          ,
          set: function set(val) {
            this._inline = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.coerceBooleanProperty)(val);
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.styleCache = this.inline ? columnsInlineCache : columnsCache;
            this.addStyles(value, {
              inline: this.inline
            });
          }
        }]);

        return GridColumnsDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridColumnsDirective.ɵfac = function GridColumnsDirective_Factory(t) {
        return new (t || GridColumnsDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridColumnsStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridColumnsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridColumnsDirective,
        inputs: {
          inline: ["gdInline", "inline"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridColumnsDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridColumnsStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      GridColumnsDirective.propDecorators = {
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['gdInline']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridColumnsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridColumnsStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          inline: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['gdInline']
          }]
        });
      })();
      /** @type {?} */


      var columnsCache = new Map();
      /** @type {?} */

      var columnsInlineCache = new Map();
      /** @type {?} */

      var inputs$7 = ['gdColumns', 'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl', 'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl', 'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'];
      /** @type {?} */

      var selector$7 = "\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n";
      /**
       * 'grid-template-columns' CSS Grid styling directive
       * Configures the sizing for the columns in the grid
       * Syntax: <column value> [auto]
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13
       */

      var DefaultGridColumnsDirective = /*#__PURE__*/function (_GridColumnsDirective) {
        _inherits(DefaultGridColumnsDirective, _GridColumnsDirective);

        var _super58 = _createSuper(DefaultGridColumnsDirective);

        function DefaultGridColumnsDirective() {
          var _this72;

          _classCallCheck(this, DefaultGridColumnsDirective);

          _this72 = _super58.apply(this, arguments);
          _this72.inputs = inputs$7;
          return _this72;
        }

        return DefaultGridColumnsDirective;
      }(GridColumnsDirective);

      DefaultGridColumnsDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridColumnsDirective_BaseFactory;
        return function DefaultGridColumnsDirective_Factory(t) {
          return (ɵDefaultGridColumnsDirective_BaseFactory || (ɵDefaultGridColumnsDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridColumnsDirective)))(t || DefaultGridColumnsDirective);
        };
      }();

      DefaultGridColumnsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridColumnsDirective,
        selectors: [["", "gdColumns", ""], ["", "gdColumns.xs", ""], ["", "gdColumns.sm", ""], ["", "gdColumns.md", ""], ["", "gdColumns.lg", ""], ["", "gdColumns.xl", ""], ["", "gdColumns.lt-sm", ""], ["", "gdColumns.lt-md", ""], ["", "gdColumns.lt-lg", ""], ["", "gdColumns.lt-xl", ""], ["", "gdColumns.gt-xs", ""], ["", "gdColumns.gt-sm", ""], ["", "gdColumns.gt-md", ""], ["", "gdColumns.gt-lg", ""]],
        inputs: {
          gdColumns: "gdColumns",
          "gdColumns.xs": "gdColumns.xs",
          "gdColumns.sm": "gdColumns.sm",
          "gdColumns.md": "gdColumns.md",
          "gdColumns.lg": "gdColumns.lg",
          "gdColumns.xl": "gdColumns.xl",
          "gdColumns.lt-sm": "gdColumns.lt-sm",
          "gdColumns.lt-md": "gdColumns.lt-md",
          "gdColumns.lt-lg": "gdColumns.lt-lg",
          "gdColumns.lt-xl": "gdColumns.lt-xl",
          "gdColumns.gt-xs": "gdColumns.gt-xs",
          "gdColumns.gt-sm": "gdColumns.gt-sm",
          "gdColumns.gt-md": "gdColumns.gt-md",
          "gdColumns.gt-lg": "gdColumns.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridColumnsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$7,
            inputs: inputs$7
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/gap/gap.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE$5 = '0';

      var GridGapStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_39) {
        _inherits(GridGapStyleBuilder, _angular_flex_layout_39);

        var _super59 = _createSuper(GridGapStyleBuilder);

        function GridGapStyleBuilder() {
          _classCallCheck(this, GridGapStyleBuilder);

          return _super59.apply(this, arguments);
        }

        _createClass(GridGapStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(input, parent) {
            return {
              'display': parent.inline ? 'inline-grid' : 'grid',
              'grid-gap': input || DEFAULT_VALUE$5
            };
          }
        }]);

        return GridGapStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridGapStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridGapStyleBuilder_BaseFactory;
        return function GridGapStyleBuilder_Factory(t) {
          return (ɵGridGapStyleBuilder_BaseFactory || (ɵGridGapStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridGapStyleBuilder)))(t || GridGapStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridGapStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridGapStyleBuilder_Factory() {
          return new GridGapStyleBuilder();
        },
        token: GridGapStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridGapStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridGapDirective = /*#__PURE__*/function (_angular_flex_layout_40) {
        _inherits(GridGapDirective, _angular_flex_layout_40);

        var _super60 = _createSuper(GridGapDirective);

        /**
         * @param {?} elRef
         * @param {?} styleUtils
         * @param {?} styleBuilder
         * @param {?} marshal
         */
        function GridGapDirective(elRef, styleUtils, styleBuilder, marshal) {
          var _this73;

          _classCallCheck(this, GridGapDirective);

          _this73 = _super60.call(this, elRef, styleBuilder, styleUtils, marshal);
          _this73.DIRECTIVE_KEY = 'grid-gap';
          _this73._inline = false;

          _this73.init();

          return _this73;
        }
        /**
         * @return {?}
         */


        _createClass(GridGapDirective, [{
          key: "inline",
          get: function get() {
            return this._inline;
          }
          /**
           * @param {?} val
           * @return {?}
           */
          ,
          set: function set(val) {
            this._inline = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.coerceBooleanProperty)(val);
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.styleCache = this.inline ? gapInlineCache : gapCache;
            this.addStyles(value, {
              inline: this.inline
            });
          }
        }]);

        return GridGapDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridGapDirective.ɵfac = function GridGapDirective_Factory(t) {
        return new (t || GridGapDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridGapStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridGapDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridGapDirective,
        inputs: {
          inline: ["gdInline", "inline"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridGapDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: GridGapStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      GridGapDirective.propDecorators = {
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['gdInline']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridGapDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: GridGapStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          inline: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['gdInline']
          }]
        });
      })();
      /** @type {?} */


      var gapCache = new Map();
      /** @type {?} */

      var gapInlineCache = new Map();
      /** @type {?} */

      var inputs$8 = ['gdGap', 'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl', 'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl', 'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'];
      /** @type {?} */

      var selector$8 = "\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n";
      /**
       * 'grid-gap' CSS Grid styling directive
       * Configures the gap between items in the grid
       * Syntax: <row gap> [<column-gap>]
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17
       */

      var DefaultGridGapDirective = /*#__PURE__*/function (_GridGapDirective) {
        _inherits(DefaultGridGapDirective, _GridGapDirective);

        var _super61 = _createSuper(DefaultGridGapDirective);

        function DefaultGridGapDirective() {
          var _this74;

          _classCallCheck(this, DefaultGridGapDirective);

          _this74 = _super61.apply(this, arguments);
          _this74.inputs = inputs$8;
          return _this74;
        }

        return DefaultGridGapDirective;
      }(GridGapDirective);

      DefaultGridGapDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridGapDirective_BaseFactory;
        return function DefaultGridGapDirective_Factory(t) {
          return (ɵDefaultGridGapDirective_BaseFactory || (ɵDefaultGridGapDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridGapDirective)))(t || DefaultGridGapDirective);
        };
      }();

      DefaultGridGapDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridGapDirective,
        selectors: [["", "gdGap", ""], ["", "gdGap.xs", ""], ["", "gdGap.sm", ""], ["", "gdGap.md", ""], ["", "gdGap.lg", ""], ["", "gdGap.xl", ""], ["", "gdGap.lt-sm", ""], ["", "gdGap.lt-md", ""], ["", "gdGap.lt-lg", ""], ["", "gdGap.lt-xl", ""], ["", "gdGap.gt-xs", ""], ["", "gdGap.gt-sm", ""], ["", "gdGap.gt-md", ""], ["", "gdGap.gt-lg", ""]],
        inputs: {
          gdGap: "gdGap",
          "gdGap.xs": "gdGap.xs",
          "gdGap.sm": "gdGap.sm",
          "gdGap.md": "gdGap.md",
          "gdGap.lg": "gdGap.lg",
          "gdGap.xl": "gdGap.xl",
          "gdGap.lt-sm": "gdGap.lt-sm",
          "gdGap.lt-md": "gdGap.lt-md",
          "gdGap.lt-lg": "gdGap.lt-lg",
          "gdGap.lt-xl": "gdGap.lt-xl",
          "gdGap.gt-xs": "gdGap.gt-xs",
          "gdGap.gt-sm": "gdGap.gt-sm",
          "gdGap.gt-md": "gdGap.gt-md",
          "gdGap.gt-lg": "gdGap.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridGapDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$8,
            inputs: inputs$8
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/row/row.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE$6 = 'auto';

      var GridRowStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_41) {
        _inherits(GridRowStyleBuilder, _angular_flex_layout_41);

        var _super62 = _createSuper(GridRowStyleBuilder);

        function GridRowStyleBuilder() {
          _classCallCheck(this, GridRowStyleBuilder);

          return _super62.apply(this, arguments);
        }

        _createClass(GridRowStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @return {?}
           */
          function buildStyles(input) {
            return {
              'grid-row': input || DEFAULT_VALUE$6
            };
          }
        }]);

        return GridRowStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridRowStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridRowStyleBuilder_BaseFactory;
        return function GridRowStyleBuilder_Factory(t) {
          return (ɵGridRowStyleBuilder_BaseFactory || (ɵGridRowStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridRowStyleBuilder)))(t || GridRowStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridRowStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridRowStyleBuilder_Factory() {
          return new GridRowStyleBuilder();
        },
        token: GridRowStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridRowStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridRowDirective = /*#__PURE__*/function (_angular_flex_layout_42) {
        _inherits(GridRowDirective, _angular_flex_layout_42);

        var _super63 = _createSuper(GridRowDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridRowDirective(elementRef, styleBuilder, styler, marshal) {
          var _this75;

          _classCallCheck(this, GridRowDirective);

          _this75 = _super63.call(this, elementRef, styleBuilder, styler, marshal);
          _this75.DIRECTIVE_KEY = 'grid-row';
          _this75.styleCache = rowCache;

          _this75.init();

          return _this75;
        }

        return GridRowDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridRowDirective.ɵfac = function GridRowDirective_Factory(t) {
        return new (t || GridRowDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridRowStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridRowDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridRowDirective,
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridRowDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridRowStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridRowDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridRowStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, null);
      })();
      /** @type {?} */


      var rowCache = new Map();
      /** @type {?} */

      var inputs$9 = ['gdRow', 'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl', 'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl', 'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'];
      /** @type {?} */

      var selector$9 = "\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n";
      /**
       * 'grid-row' CSS Grid styling directive
       * Configures the name or position of an element within the grid
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26
       */

      var DefaultGridRowDirective = /*#__PURE__*/function (_GridRowDirective) {
        _inherits(DefaultGridRowDirective, _GridRowDirective);

        var _super64 = _createSuper(DefaultGridRowDirective);

        function DefaultGridRowDirective() {
          var _this76;

          _classCallCheck(this, DefaultGridRowDirective);

          _this76 = _super64.apply(this, arguments);
          _this76.inputs = inputs$9;
          return _this76;
        }

        return DefaultGridRowDirective;
      }(GridRowDirective);

      DefaultGridRowDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridRowDirective_BaseFactory;
        return function DefaultGridRowDirective_Factory(t) {
          return (ɵDefaultGridRowDirective_BaseFactory || (ɵDefaultGridRowDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridRowDirective)))(t || DefaultGridRowDirective);
        };
      }();

      DefaultGridRowDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridRowDirective,
        selectors: [["", "gdRow", ""], ["", "gdRow.xs", ""], ["", "gdRow.sm", ""], ["", "gdRow.md", ""], ["", "gdRow.lg", ""], ["", "gdRow.xl", ""], ["", "gdRow.lt-sm", ""], ["", "gdRow.lt-md", ""], ["", "gdRow.lt-lg", ""], ["", "gdRow.lt-xl", ""], ["", "gdRow.gt-xs", ""], ["", "gdRow.gt-sm", ""], ["", "gdRow.gt-md", ""], ["", "gdRow.gt-lg", ""]],
        inputs: {
          gdRow: "gdRow",
          "gdRow.xs": "gdRow.xs",
          "gdRow.sm": "gdRow.sm",
          "gdRow.md": "gdRow.md",
          "gdRow.lg": "gdRow.lg",
          "gdRow.xl": "gdRow.xl",
          "gdRow.lt-sm": "gdRow.lt-sm",
          "gdRow.lt-md": "gdRow.lt-md",
          "gdRow.lt-lg": "gdRow.lt-lg",
          "gdRow.lt-xl": "gdRow.lt-xl",
          "gdRow.gt-xs": "gdRow.gt-xs",
          "gdRow.gt-sm": "gdRow.gt-sm",
          "gdRow.gt-md": "gdRow.gt-md",
          "gdRow.gt-lg": "gdRow.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridRowDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$9,
            inputs: inputs$9
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/rows/rows.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var DEFAULT_VALUE$7 = 'none';
      /** @type {?} */

      var AUTO_SPECIFIER$1 = '!';

      var GridRowsStyleBuilder = /*#__PURE__*/function (_angular_flex_layout_43) {
        _inherits(GridRowsStyleBuilder, _angular_flex_layout_43);

        var _super65 = _createSuper(GridRowsStyleBuilder);

        function GridRowsStyleBuilder() {
          _classCallCheck(this, GridRowsStyleBuilder);

          return _super65.apply(this, arguments);
        }

        _createClass(GridRowsStyleBuilder, [{
          key: "buildStyles",
          value:
          /**
           * @param {?} input
           * @param {?} parent
           * @return {?}
           */
          function buildStyles(input, parent) {
            input = input || DEFAULT_VALUE$7;
            /** @type {?} */

            var auto = false;

            if (input.endsWith(AUTO_SPECIFIER$1)) {
              input = input.substring(0, input.indexOf(AUTO_SPECIFIER$1));
              auto = true;
            }
            /** @type {?} */


            var css = {
              'display': parent.inline ? 'inline-grid' : 'grid',
              'grid-auto-rows': '',
              'grid-template-rows': ''
            };
            /** @type {?} */

            var key = auto ? 'grid-auto-rows' : 'grid-template-rows';
            css[key] = input;
            return css;
          }
        }]);

        return GridRowsStyleBuilder;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleBuilder);

      GridRowsStyleBuilder.ɵfac = /*@__PURE__*/function () {
        var ɵGridRowsStyleBuilder_BaseFactory;
        return function GridRowsStyleBuilder_Factory(t) {
          return (ɵGridRowsStyleBuilder_BaseFactory || (ɵGridRowsStyleBuilder_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](GridRowsStyleBuilder)))(t || GridRowsStyleBuilder);
        };
      }();
      /** @nocollapse */


      GridRowsStyleBuilder.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
        factory: function GridRowsStyleBuilder_Factory() {
          return new GridRowsStyleBuilder();
        },
        token: GridRowsStyleBuilder,
        providedIn: "root"
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridRowsStyleBuilder, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var GridRowsDirective = /*#__PURE__*/function (_angular_flex_layout_44) {
        _inherits(GridRowsDirective, _angular_flex_layout_44);

        var _super66 = _createSuper(GridRowsDirective);

        /**
         * @param {?} elementRef
         * @param {?} styleBuilder
         * @param {?} styler
         * @param {?} marshal
         */
        function GridRowsDirective(elementRef, styleBuilder, styler, marshal) {
          var _this77;

          _classCallCheck(this, GridRowsDirective);

          _this77 = _super66.call(this, elementRef, styleBuilder, styler, marshal);
          _this77.DIRECTIVE_KEY = 'grid-rows';
          _this77._inline = false;

          _this77.init();

          return _this77;
        }
        /**
         * @return {?}
         */


        _createClass(GridRowsDirective, [{
          key: "inline",
          get: function get() {
            return this._inline;
          }
          /**
           * @param {?} val
           * @return {?}
           */
          ,
          set: function set(val) {
            this._inline = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__.coerceBooleanProperty)(val);
          } // *********************************************
          // Protected methods
          // *********************************************

          /**
           * @protected
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "updateWithValue",
          value: function updateWithValue(value) {
            this.styleCache = this.inline ? rowsInlineCache : rowsCache;
            this.addStyles(value, {
              inline: this.inline
            });
          }
        }]);

        return GridRowsDirective;
      }(_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.BaseDirective2);

      GridRowsDirective.ɵfac = function GridRowsDirective_Factory(t) {
        return new (t || GridRowsDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](GridRowsStyleBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller));
      };

      GridRowsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: GridRowsDirective,
        inputs: {
          inline: ["gdInline", "inline"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });
      /** @nocollapse */

      GridRowsDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        }, {
          type: GridRowsStyleBuilder
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
        }, {
          type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
        }];
      };

      GridRowsDirective.propDecorators = {
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
          args: ['gdInline']
        }]
      };

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](GridRowsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
          }, {
            type: GridRowsStyleBuilder
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.StyleUtils
          }, {
            type: _angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.MediaMarshaller
          }];
        }, {
          inline: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ['gdInline']
          }]
        });
      })();
      /** @type {?} */


      var rowsCache = new Map();
      /** @type {?} */

      var rowsInlineCache = new Map();
      /** @type {?} */

      var inputs$10 = ['gdRows', 'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl', 'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl', 'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'];
      /** @type {?} */

      var selector$10 = "\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n";
      /**
       * 'grid-template-rows' CSS Grid styling directive
       * Configures the sizing for the rows in the grid
       * Syntax: <column value> [auto]
       * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13
       */

      var DefaultGridRowsDirective = /*#__PURE__*/function (_GridRowsDirective) {
        _inherits(DefaultGridRowsDirective, _GridRowsDirective);

        var _super67 = _createSuper(DefaultGridRowsDirective);

        function DefaultGridRowsDirective() {
          var _this78;

          _classCallCheck(this, DefaultGridRowsDirective);

          _this78 = _super67.apply(this, arguments);
          _this78.inputs = inputs$10;
          return _this78;
        }

        return DefaultGridRowsDirective;
      }(GridRowsDirective);

      DefaultGridRowsDirective.ɵfac = /*@__PURE__*/function () {
        var ɵDefaultGridRowsDirective_BaseFactory;
        return function DefaultGridRowsDirective_Factory(t) {
          return (ɵDefaultGridRowsDirective_BaseFactory || (ɵDefaultGridRowsDirective_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](DefaultGridRowsDirective)))(t || DefaultGridRowsDirective);
        };
      }();

      DefaultGridRowsDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
        type: DefaultGridRowsDirective,
        selectors: [["", "gdRows", ""], ["", "gdRows.xs", ""], ["", "gdRows.sm", ""], ["", "gdRows.md", ""], ["", "gdRows.lg", ""], ["", "gdRows.xl", ""], ["", "gdRows.lt-sm", ""], ["", "gdRows.lt-md", ""], ["", "gdRows.lt-lg", ""], ["", "gdRows.lt-xl", ""], ["", "gdRows.gt-xs", ""], ["", "gdRows.gt-sm", ""], ["", "gdRows.gt-md", ""], ["", "gdRows.gt-lg", ""]],
        inputs: {
          gdRows: "gdRows",
          "gdRows.xs": "gdRows.xs",
          "gdRows.sm": "gdRows.sm",
          "gdRows.md": "gdRows.md",
          "gdRows.lg": "gdRows.lg",
          "gdRows.xl": "gdRows.xl",
          "gdRows.lt-sm": "gdRows.lt-sm",
          "gdRows.lt-md": "gdRows.lt-md",
          "gdRows.lt-lg": "gdRows.lt-lg",
          "gdRows.lt-xl": "gdRows.lt-xl",
          "gdRows.gt-xs": "gdRows.gt-xs",
          "gdRows.gt-sm": "gdRows.gt-sm",
          "gdRows.gt-md": "gdRows.gt-md",
          "gdRows.gt-lg": "gdRows.gt-lg"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DefaultGridRowsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
          args: [{
            selector: selector$10,
            inputs: inputs$10
          }]
        }], null, null);
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/module.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /** @type {?} */


      var ALL_DIRECTIVES = [DefaultGridAlignDirective, DefaultGridAlignColumnsDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective];
      /**
       * *****************************************************************
       * Define module for the CSS Grid API
       * *****************************************************************
       */

      var _GridModule = function _GridModule() {
        _classCallCheck(this, _GridModule);
      };

      _GridModule.ɵfac = function GridModule_Factory(t) {
        return new (t || _GridModule)();
      };

      _GridModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: _GridModule
      });
      _GridModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        imports: [[_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule]]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](_GridModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
          args: [{
            imports: [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule],
            declarations: [].concat(ALL_DIRECTIVES),
            exports: [].concat(ALL_DIRECTIVES)
          }]
        }], null, null);
      })();

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](_GridModule, {
          declarations: function declarations() {
            return [DefaultGridAlignDirective, DefaultGridAlignColumnsDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective];
          },
          imports: function imports() {
            return [_angular_flex_layout_core__WEBPACK_IMPORTED_MODULE_0__.CoreModule];
          },
          exports: function exports() {
            return [DefaultGridAlignDirective, DefaultGridAlignColumnsDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective];
          }
        });
      })();
      /**
       * @fileoverview added by tsickle
       * Generated from: grid/public-api.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * Generated from: grid/index.ts
       * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */
      //# sourceMappingURL=grid.js.map

      /***/

    }
  }]);
})();
//# sourceMappingURL=default-node_modules_angular_flex-layout___ivy_ngcc___esm2015_flex-layout_js-es5.js.map